//Copyright 2019-2020 VMware, Inc.
//SPDX-License-Identifier: EPL-2.0

plugins {
    id 'java'
}

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"
apply plugin: "jacoco"

archivesBaseName = 'md-data-s3util'

repositories {
    mavenCentral()
}

dependencies {
    compile project(":vip-common")
    compile group: 'org.springframework.boot', name: 'spring-boot'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.550'
}


jar {
    manifest {
        attributes 'Implementation-Title': 'md-data-s3util'
    }
    enabled = true
}

bootJar {
  enabled = false
}

configurations {
    providedRuntime
    // remove default logger
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}


eclipse {
    //if you want parts of paths in resulting file to be replaced by variables (files):
    //pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

    classpath {
        //you can tweak the classpath of the Eclipse project by adding extra configurations:
        // plusConfigurations += [ configurations.provided ]

        //you can also remove configurations from the classpath:
        //minusConfigurations += [ configurations.someBoringConfig ]

        //if you don't want some classpath entries 'exported' in Eclipse
        //noExportConfigurations += [ configurations.provided ]

        //if you want to append extra containers:
        //containers 'someFriendlyContainer', 'andYetAnotherContainer'

        //customizing the classes output directory:
        // defaultOutputDir = file('build-eclipse')

        //default settings for downloading sources and Javadoc:
        downloadSources = true
        downloadJavadoc = false
    }
}
