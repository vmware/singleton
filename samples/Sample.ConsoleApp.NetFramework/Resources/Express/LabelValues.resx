<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApproveAndPublishPublicApps" xml:space="preserve">
    <value>Approve and Publish Public Apps</value>
  </data>
  <data name="ApproveAndPublishPublicAppsDescription" xml:space="preserve">
    <value>Re-add any public app from your existing Blueprints that you published prior to registering with Android EMM to approve and publish them to both your legacy and Android Enterprise devices.</value>
  </data>
  <data name="ArgDevicesRemovedBasedOnGroupSelection" xml:space="preserve">
    <value>{0} devices will be removed based on the current group selection.</value>
    <comment>{0} will be replaced by a number</comment>
  </data>
  <data name="ArgOutOfArgLegacyAndroidMigrationNotification" xml:space="preserve">
    <value>{0} out of {1} legacy Android devices in the selected groups are eligible for migration. Migration will be applied to only these devices if you proceed.</value>
    <comment>{0} and {1} will be replaced by a number.</comment>
  </data>
  <data name="CollectDeviceLocationData" xml:space="preserve">
    <value>Collect Device Location Data</value>
  </data>
  <data name="DevicesInBlueprintArg" xml:space="preserve">
    <value>Devices in Blueprint {0}</value>
  </data>
  <data name="DevicesSelectionTooltipText" xml:space="preserve">
    <value>Only devices of users that have been assigned to Blueprints can be selected at this time. You can also choose to migrate all your devices at once by selecting 'All Devices'.</value>
  </data>
  <data name="DistributeAppCatalogToDevices" xml:space="preserve">
    <value>Distribute App Catalog to devices</value>
  </data>
  <data name="ExpressLegacyAndroidMigrationDeviceExportArg" xml:space="preserve">
    <value>The devices listed below were on legacy administration when the groups above were selected. Any devices added to these groups in the future will appear as newly discovered devices. {0} to see breakdown of all devices that were migrated, including devices from groups that may have been removed.</value>
    <comment>{0} will be replaced by another key with text 'Export Details'.</comment>
  </data>
  <data name="ExpressMigrationAllCompatible" xml:space="preserve">
    <value>All {0} legacy Android devices in the selected groups are eligible for migration.</value>
    <comment>{0} will be replaced by a number.</comment>
  </data>
  <data name="ExpressMigrationLimitReached" xml:space="preserve">
    <value>Migration can have a maximum of 10 group assignments.</value>
  </data>
  <data name="ExpressMigrationNoDevicesCompatible" xml:space="preserve">
    <value>No devices in the selected groups are eligible for migration. Select groups that include legacy Android devices to proceed.</value>
  </data>
  <data name="ExpressNoNewDevices" xml:space="preserve">
    <value>No new eligible legacy Android device found in the selected groups.</value>
  </data>
  <data name="ExpressWelcomeMessageHeader" xml:space="preserve">
    <value>Everything you need to secure and manage your company's mobile devices is here. You can:</value>
  </data>
  <data name="IsAfwRequired" xml:space="preserve">
    <value>Will your employees be using Android devices?</value>
  </data>
  <data name="NoGroupFound" xml:space="preserve">
    <value>No user group found with that name.</value>
  </data>
  <data name="NotificationDevicePreviewAndroidLegacyMigration" xml:space="preserve">
    <value>A notification will be sent to eligible devices in the selected groups informing employees about the migration and prompting them to take action to proceed. You can monitor their progress on the Legacy Android Migration page.</value>
  </data>
  <data name="NoUserFound" xml:space="preserve">
    <value>No user found with that name.</value>
  </data>
  <data name="QuestionnaireDescription" xml:space="preserve">
    <value>Let's answer a few simple questions to help you set up:</value>
  </data>
  <data name="ResaveYourPolicies" xml:space="preserve">
    <value>Re-save your Policies</value>
  </data>
  <data name="ResaveYourPoliciesDescription" xml:space="preserve">
    <value>Edit and re-save the Policies section of any existing Blueprints that you published prior to registering with Android EMM.</value>
  </data>
  <data name="ResaveYourResources" xml:space="preserve">
    <value>Re-save your Resources</value>
  </data>
  <data name="ResaveYourResourcesDescription" xml:space="preserve">
    <value>Edit and re-save any Email and Wi-Fi resources you configured in existing Blueprints that you published prior to registering with Android EMM.</value>
  </data>
  <data name="SearchCurrentGroups" xml:space="preserve">
    <value>Search current groups</value>
  </data>
  <data name="SearchCurrentUsers" xml:space="preserve">
    <value>Search current users</value>
  </data>
  <data name="SelectMigrationDevices" xml:space="preserve">
    <value>Select the devices you want to migrate.</value>
  </data>
  <data name="StartTypingToAddGroups" xml:space="preserve">
    <value>Start typing to add Groups</value>
  </data>
  <data name="WantToCollectDeviceLocationData" xml:space="preserve">
    <value>Do you want to collect device location data?</value>
  </data>
  <data name="WantToDistributeAppCatalogToDevices" xml:space="preserve">
    <value>Do you want to distribute an app catalog to your devices?</value>
  </data>
  <data name="WarningForNotCollectingLocationData" xml:space="preserve">
    <value>Sure. You can return to this survey from the Getting Started menu at any time if you want to change your answer.</value>
  </data>
  <data name="WarningForNotConfiguringAd" xml:space="preserve">
    <value>That's ok. If you change your mind, Active Directory can be set up later from the Settings menu.</value>
  </data>
  <data name="WarningForNotConfiguringAfw" xml:space="preserve">
    <value>If you plan on enrolling Android devices in the future, you can always set up your Android EMM registration from the Setting menu later.</value>
  </data>
  <data name="WarningForNotConfiguringApns" xml:space="preserve">
    <value>If you plan on enrolling Apple devices in the future, you can always set up your APNs certificate from the Settings menu later.</value>
  </data>
  <data name="WarningForNotConfiguringVpp" xml:space="preserve">
    <value>Alright. You can always go to the Settings menu if you decide to set up your Apple VPP account later.</value>
  </data>
  <data name="WarningForNotDistributingAppCatalog" xml:space="preserve">
    <value>Got it. If you want to change your answer you can return to this survery from the Getting Started menu at any time.</value>
  </data>
  <data name="WorkspaceOneExpress" xml:space="preserve">
    <value>Workspace ONE Express</value>
  </data>
  <data name="WorkspaceOneExpressSetupTrackInfo" xml:space="preserve">
    <value>Configure to start enrolling, securing and managing devices and providing corporate resources to employees.</value>
  </data>
</root>