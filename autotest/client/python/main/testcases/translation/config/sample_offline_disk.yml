product: PythonClient123
l10n_version: 9.0.1
offline_resources_base_url: file:///../resources/l10n/PythonClient/9.0.1/



# default_locale 默认en。如果指定ja。有两个功能
#   1. 如果客户端请求是配置了locale不支持，则获取default_locale
#   2. 如果客户端传递的是locale=en，表示源文件的语言是ja。(这里有点争议，就算配置了ja，也应该认为源文件的语言是en)

# 如果default_locale 配置了ja。如果不配置source_locale,则默认source_locale读取default_locale,可能是ja。
# 通过locales找到ja的tag。读取本地配置。返回source_resources_path文件的key的source，找不到直接返回key。
# 如果指定了source_locale: en-US, 则default_locale就算是ja，也会从source_locale：en下查询。这里可以修正上面将ja当作源文件的bug。
default_locale: ja

# source_locale一定要配置，并且要配置en-US，否则会有bug
source_locale: en-US
# log path for the python client
log_path: logs

cache_path: .cache
# multitask: async

locales:
    -   language_tag: en-US
        # 源文件
        source_resources_path:
            - $COMPONENT/messages.properties

        # 默认情况下，源文件也会返回一个message_en.json文件，不过offline模式下，只会跟源文件进行比较，所以这个配置不会使用
        offline_resources_path:
            - $COMPONENT/messages_en.json
    -   language_tag: de
    -   language_tag: fr
    -   language_tag: ja
        source_resources_path:
            - $COMPONENT/messages_ja.properties
    -   language_tag: ar
    -   language_tag: ko
    -   language_tag: zh-Hans
    -   language_tag: zh-Hant

# 这里是用于配置模板，主要用于映射，不同的locale翻译文件
component_template:
    locales_refer: locales
    offline_resources_path:
        - $COMPONENT/messages$LC.json   # $LC是不可修改的

# 定义OfflineMode下$COMPONENT的查询范围，如果没有改配置,默认全部查询,如果配置,按配置生效.
components:
    -   name: about
    -   name: contact
#    -   name: insert



#pseudo: true
#locales:
#  - language_tag: en
#    offline_resources_path:
#      - $COMPONENT/messages_en-US.json
#  - language_tag: de
#  - language_tag: fr
#  - language_tag: ja
#  - language_tag: ar
#  - language_tag: zh-Hans
#
#component_template:
#  locales_refer: locales
#  offline_resources_path:
#    - $COMPONENT/messages_$LOCALE.json
#
#
#components:
#  - name: about
#  - name: common