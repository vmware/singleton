/*
 * Copyright 2019-2021 VMware, Inc.
 * SPDX-License-Identifier: EPL-2.0
 */
apply plugin: 'java'
apply plugin: 'eclipse'

description = 'VIP4Java'

apply plugin: "jacoco"
apply plugin: "org.sonarqube"

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1")
    classpath 'de.undercouch:gradle-download-task:3.4.3'
  }
}

apply plugin: 'de.undercouch.download'

sourceCompatibility = 1.8
version = '0.1.0'
 
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyJars(type :Copy, dependsOn: jar) {
	from "$buildDir/libs"
	into "$rootDir/../publish/"
	include "**/*.jar"
}

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1'
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	compile group: 'org.apache.taglibs', name: 'taglibs-standard-impl', version: '1.2.5'
	compile("com.googlecode.json-simple:json-simple:1.1.1") {
	   exclude group: 'junit'
	}
	compile group: 'com.vmware.singleton', name: 'singleton-i18n-patterns-core', version: '[0.5.1,)'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'

	testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.26'
	testCompile group: 'log4j', name: 'log4j', version: '1.2.17'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile "com.github.tomakehurst:wiremock-jre8:2.25.1"
	testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
    }
  }
  test {
    java {
      srcDir 'src/test/java'
    }
    java.outputDir = file("${buildDir}/classes/java/test")
    resources {
      srcDir 'src/main/resources'
      srcDir 'src/test/resources'
    }
    output.resourcesDir = file("${buildDir}/classes/java/test")
  }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
    baseName = "vip4java"
    classifier = ''
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

assemble.dependsOn.add copyJars

task createWrapper(type: Wrapper) {
    gradleVersion = '5.6.1'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'

}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
