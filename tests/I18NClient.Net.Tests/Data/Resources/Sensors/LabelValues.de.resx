<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminExecutionContext" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="AirWatchDataPlatformService" xml:space="preserve">
    <value>AirWatch DataPlatform-Dienst</value>
  </data>
  <data name="Always32BitArchitecture" xml:space="preserve">
    <value>32-Bit (erzwungen)</value>
  </data>
  <data name="AssignedDeviceSensorRequested" xml:space="preserve">
    <value>Angeforderten Gerätesensor zuweisen</value>
  </data>
  <data name="AssignmentLabel" xml:space="preserve">
    <value>Zuweisung</value>
  </data>
  <data name="AssignSensor" xml:space="preserve">
    <value>Sensor zu Smartgroups zuweisen</value>
  </data>
  <data name="BackButtonLabel" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="BooleanType" xml:space="preserve">
    <value>Boolesch</value>
  </data>
  <data name="CannotDeleteWorkflowResource" xml:space="preserve">
    <value>Die dem Workflow zugeordneten Ressourcen können nicht gelöscht werden.</value>
  </data>
  <data name="DataTypeLabel" xml:space="preserve">
    <value>Datentyp</value>
  </data>
  <data name="DateTimeType" xml:space="preserve">
    <value>Datum Zeit</value>
  </data>
  <data name="DefineQueryLabel" xml:space="preserve">
    <value>Abfrage definieren</value>
  </data>
  <data name="DeviceScriptAssignmentGroup" xml:space="preserve">
    <value>Zuweisungsgruppe für Geräte-Skript</value>
  </data>
  <data name="DeviceSensor" xml:space="preserve">
    <value>Gerätesensor</value>
  </data>
  <data name="DeviceSensorAssignmenGroupRankingUpdated" xml:space="preserve">
    <value>Zuweisungsgruppen für Gerätesensor aktualisiert</value>
  </data>
  <data name="DeviceSensorAssignmentGroup" xml:space="preserve">
    <value>Zuweisungsgruppe für Gerätesensor</value>
  </data>
  <data name="DeviceSensorAssignmentGroupAdded" xml:space="preserve">
    <value>Zuweisungsgruppe für Gerätesensor hinzugefügt</value>
  </data>
  <data name="DeviceSensorAssignmentGroupDeleted" xml:space="preserve">
    <value>Zuweisungsgruppe für Gerätesensor gelöscht.</value>
  </data>
  <data name="DeviceSensorAssignmentGroupEdited" xml:space="preserve">
    <value>Zuweisungsgruppe für Gerätesensor bearbeitet</value>
  </data>
  <data name="DeviceSensorAssignmentGroupName" xml:space="preserve">
    <value>Zuweisungsname des Geräte Sensors</value>
  </data>
  <data name="DeviceSensorCreated" xml:space="preserve">
    <value>Gerätesensor erstellt</value>
  </data>
  <data name="DeviceSensorDeleted" xml:space="preserve">
    <value>Gerätesensor gelöscht</value>
  </data>
  <data name="DeviceSensorDeletedSuccessfully" xml:space="preserve">
    <value>Gerätesensor erfolgreich gelöscht</value>
  </data>
  <data name="DeviceSensorEdited" xml:space="preserve">
    <value>Gerätesensor bearbeitet</value>
  </data>
  <data name="DeviceSensorIdentifiers" xml:space="preserve">
    <value>Gerätesensorbezeichner</value>
  </data>
  <data name="DeviceSensorListViewTitle" xml:space="preserve">
    <value>Ansicht „Sensorliste“</value>
  </data>
  <data name="DeviceSensorName" xml:space="preserve">
    <value>Gerätesensorname</value>
  </data>
  <data name="DeviceSensorNotSupportedForEmployeeOwnedDevice" xml:space="preserve">
    <value>Mitarbeitereigenes Gerät: Geräte-Sensordaten nicht angefordert</value>
  </data>
  <data name="DeviceSensorOg" xml:space="preserve">
    <value>Gerätesensor-Organisationsgruppe</value>
  </data>
  <data name="DeviceSensorPersistedInDeviceState" xml:space="preserve">
    <value>Sensor-Beispiel wurde im Gerätezustand gespeichert</value>
  </data>
  <data name="DeviceSensorPersistedInIntelligence" xml:space="preserve">
    <value>Sensor-Beispiel wurde in Intelligence gespeichert</value>
  </data>
  <data name="DeviceSensorSampleReceived" xml:space="preserve">
    <value>Gerätesensorprobe empfangen</value>
  </data>
  <data name="DeviceSensorSampleReceivedWithErrors" xml:space="preserve">
    <value>Beispiel mit Fehlern erhalten</value>
  </data>
  <data name="DeviceSensorSampleSentFailed" xml:space="preserve">
    <value>Sensorbeispielwert konnte nicht gesendet werden</value>
  </data>
  <data name="DeviceSensorSampleSentSuccess" xml:space="preserve">
    <value>Sensorbeispielwert gesendet</value>
  </data>
  <data name="DeviceSensorSmartGroupAssigned" xml:space="preserve">
    <value>Gerätesensor zu Smartgroup zugewiesen</value>
  </data>
  <data name="EditSensor" xml:space="preserve">
    <value>Sensor bearbeiten</value>
  </data>
  <data name="Either32Or64BitArchitecture" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="EmployeeOwnedDevicesWillNotSupportSensors" xml:space="preserve">
    <value>Geräte mit mitarbeitereigener Zuständigkeit werden aus Datenschutzgründen automatisch von der Sensorzuweisung ausgeschlossen.</value>
  </data>
  <data name="ExecutionArchitecture" xml:space="preserve">
    <value>Ausführungsarchitektur</value>
  </data>
  <data name="ExecutionArchitectureInfo" xml:space="preserve">
    <value>
32-Bit (erzwungen): wird unabhängig von der Zielgeräte-Architektur als 32-Bit ausgeführt.
32-Bit: wird nur auf 32-Bit-Geräten ausgeführt.
64-Bit: wird nur auf 64-Bit-Geräten ausgeführt.
Auto: wird abhängig von der Zielgeräte-Architektur ausgeführt.</value>
  </data>
  <data name="ExecutionContextLabel" xml:space="preserve">
    <value>Ausführungskontext</value>
  </data>
  <data name="FinishButtonLabel" xml:space="preserve">
    <value>Fertigstellen</value>
  </data>
  <data name="ImportCodeButtonText" xml:space="preserve">
    <value>Aus VMware Vorlagenbibliothek importieren</value>
  </data>
  <data name="IncludeInSmartGroupLabel" xml:space="preserve">
    <value>In Smartgruppen einschließen</value>
  </data>
  <data name="IntegerType" xml:space="preserve">
    <value>Ganzzahl</value>
  </data>
  <data name="LastExecutedDate" xml:space="preserve">
    <value>Datum der letzten Ausführung</value>
  </data>
  <data name="MacOsPeriodicTriggerInfoText" xml:space="preserve">
    <value>Werden in regelmäßigen Abständen basierend auf dem konfigurierten Intelligent Hub Datenstichprobenintervall ausgeführt, dass unter Einstellungen &gt; Geräte und Bentzer &gt; Apple &gt; Apple macOS &gt; Intelligent Hub Einstellungen definiert wurde.</value>
  </data>
  <data name="ManageEndpointResources" xml:space="preserve">
    <value>Endpoint-Ressourcen verwalten</value>
  </data>
  <data name="ManageEndpointResourcesInfo" xml:space="preserve">
    <value>Verwenden Sie in Freestyle Senorwerte als Bedingungen, um Endpoint-Ressourcen basierend auf benutzerdefinierten Kriterien zu verwalten.</value>
  </data>
  <data name="NetworkChangeTriggerInfo" xml:space="preserve">
    <value>Ausführen, wenn eine Netzwerkänderung auf dem Gerät erkannt wird (z. B. Umschalten von Ethernet zu WLAN)</value>
  </data>
  <data name="NewSensor" xml:space="preserve">
    <value>Neuer Sensor</value>
  </data>
  <data name="NextButtonLabel" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="NoRecordsFound" xml:space="preserve">
    <value>Keine Skripte gefunden. Erstellen Sie ein neues, um zu beginnen</value>
  </data>
  <data name="NoSensorsFound" xml:space="preserve">
    <value>Keine Sensoren gefunden. Erstellen Sie einen neuen, um zu beginnen</value>
  </data>
  <data name="NotRunLabel" xml:space="preserve">
    <value>Nicht ausgeführt</value>
  </data>
  <data name="Only32BitArchitecture" xml:space="preserve">
    <value>32-Bit</value>
  </data>
  <data name="Only64BitArchitecture" xml:space="preserve">
    <value>64-Bit</value>
  </data>
  <data name="PlatformLabel" xml:space="preserve">
    <value>Plattform</value>
  </data>
  <data name="QueryType" xml:space="preserve">
    <value>Abfragetyp</value>
  </data>
  <data name="QueryTypeHelpText" xml:space="preserve">
    <value>Diese Einstellung bestimmt das Ziel für die Geräteabfrage</value>
  </data>
  <data name="QueryTypeNotSetError" xml:space="preserve">
    <value>Abfragetyp darf nicht leer sein</value>
  </data>
  <data name="ReplaceWarningForScriptUpload" xml:space="preserve">
    <value>
	Beim Hochladen eines Skripts werden bestehende Inhalte im Editor ersetzt.
	
	Hinweis: Auf alle Sensoren verteilt werden insgesamt 4 KB Daten pro Gerät gespeichert
	Hinwies: Es kommt zu einer Zeitüberschreitung, wenn das Skript nach 5 Minuten nicht abgeschlossen ist.
	</value>
  </data>
  <data name="RequestSensorsSyncFailed" xml:space="preserve">
    <value>Gerätebefehl für Synchronisierung der Sensoren konnte nicht in die Warteschlange gestellt werden</value>
  </data>
  <data name="RequestSensorsSyncSuccess" xml:space="preserve">
    <value>Gerätebefehl für Synchronisierung der Sensoren in Warteschlange gestellt</value>
  </data>
  <data name="ResponseLabel" xml:space="preserve">
    <value>Antwort</value>
  </data>
  <data name="RunButtonText" xml:space="preserve">
    <value>Ausführen</value>
  </data>
  <data name="ScheduleTriggerInfo" xml:space="preserve">
    <value>Wenn der Auslöser auf „Zeitplan“ gesetzt ist, erfasst und überträgt dieser Sensor Daten auf der Grundlage des Sensorenzeitplans, der auf der Seite für die Einstellungen des Windows-Beispielzeitplans konfiguriert wurde.</value>
  </data>
  <data name="ScriptExecutedAt" xml:space="preserve">
    <value>Ausgeführt am</value>
  </data>
  <data name="ScriptLabel" xml:space="preserve">
    <value>Skript/Befehl</value>
  </data>
  <data name="SelectSmartGroupToAssignSensor" xml:space="preserve">
    <value>Wählen Sie die Smartgroups, denen dieser Sensor zugewiesen werden soll.</value>
  </data>
  <data name="Sensor" xml:space="preserve">
    <value>Sensor</value>
  </data>
  <data name="SensorAssignmentDeploymentTabDesc" xml:space="preserve">
    <value>Wählen Sie aus, welche Auslöser für diesen Sensoren auf zugewiesenen Geräten ausgeführt werden sollen.</value>
  </data>
  <data name="SensorAssignmentGroups" xml:space="preserve">
    <value>Sensoren</value>
  </data>
  <data name="SensorDellCustomBIOSQuery" xml:space="preserve">
    <value>Benutzerdefiniertes BIOS von Dell</value>
  </data>
  <data name="SensorDuplicateNameError" xml:space="preserve">
    <value>Ein Sensor mit demselben Namen ist vorhanden. Verwenden Sie einen anderen Namen.</value>
  </data>
  <data name="SensorEventSelectionError" xml:space="preserve">
    <value>Wählen Sie einen oder mehrere Ereignisarten, um fortzufahren</value>
  </data>
  <data name="SensorEventTrigger" xml:space="preserve">
    <value>Ereignis</value>
  </data>
  <data name="SensorGoToOptIn" xml:space="preserve">
    <value>Zum Zustimmen hier klicken</value>
  </data>
  <data name="SensorLoginEvent" xml:space="preserve">
    <value>Anmeldung</value>
  </data>
  <data name="SensorLogoutEvent" xml:space="preserve">
    <value>Abmeldung</value>
  </data>
  <data name="SensorMenuDescription" xml:space="preserve">
    <value>Beschreibung des Sensormenüs</value>
  </data>
  <data name="SensorName" xml:space="preserve">
    <value>Sensorbezeichnung</value>
  </data>
  <data name="SensorNameFormatError" xml:space="preserve">
    <value>Muss zwischen 2 und 64 Zeichen lang sein, wobei ausschließlich eine Kombination aus Kleinbuchstaben, Zahlen und Unterstrichen verwendet wird. Das erste Zeichen muss ein Kleinbuchstabe sein.</value>
  </data>
  <data name="SensorNameHelpText" xml:space="preserve">
    <value>Der Sensorname ist bei der Ausführung des Sensorskripts/der Sensorabfrage der Schlüssel zu den vom Gerät ausgegebenen Daten. Schlüssel und Wert werden ausgegeben, in Workspace ONE Intelligence gespeichert und können in Berichten, Tabellen und Automatisierungen verwendet werden.</value>
  </data>
  <data name="SensorNameNotSetError" xml:space="preserve">
    <value>Sensorname darf nicht leer sein</value>
  </data>
  <data name="SensorOGNotOptedInfo" xml:space="preserve">
    <value>Zur Einrichtung der Sensoren ist Workspace ONE Intelligence erforderlich. Geben Sie Ihre Zustimmung für Workspace ONE Intelligence und kehren Sie zu dieser Seite zurück, um Sensoren zu erstellen.</value>
  </data>
  <data name="SensorPowershellQuery" xml:space="preserve">
    <value>PowerShell</value>
  </data>
  <data name="Sensors" xml:space="preserve">
    <value>Sensoren</value>
  </data>
  <data name="SensorScheduleTrigger" xml:space="preserve">
    <value>Zeitplan</value>
  </data>
  <data name="SensorsCreateReports" xml:space="preserve">
    <value>Erstellen von Berichten und Dashboards</value>
  </data>
  <data name="SensorsCreateReportsInfo" xml:space="preserve">
    <value>Verwenden Sie Workspace ONE Intelligence, um Berichte und Dashboard basierend auf Sensordaten zu erstellen. </value>
  </data>
  <data name="SensorScriptHash" xml:space="preserve">
    <value>Sensor Script Hash</value>
  </data>
  <data name="SensorScriptInvalid" xml:space="preserve">
    <value>Skript/Befehl ist ein Pflichtwert. Geben Sie ein gültiges Skript an, um diesen Sensor zu speichern.</value>
  </data>
  <data name="SensorsDD" xml:space="preserve">
    <value>Sensoren</value>
  </data>
  <data name="SensorsDDHelp" xml:space="preserve">
    <value>Steuert den Zugriff auf die Anzeige der Gerätesensoren-Werte und fordert eine Synchronisierung an</value>
  </data>
  <data name="SensorsHeader" xml:space="preserve">
    <value>Automatische Endpoint-Datenerfassung</value>
  </data>
  <data name="SensorsHelp" xml:space="preserve">
    <value>Steuert den Zugriff auf die Anzeige und Verwaltung der Gerätesensoren</value>
  </data>
  <data name="SensorsInfo" xml:space="preserve">
    <value>Automatisieren Sie die Datenerfassung für Ihre Endpoints mithilfe von gängigen Skriptsprachen rasch und sicher. Lesen Sie mehr über Sensoren in</value>
  </data>
  <data name="SensorsPurpose" xml:space="preserve">
    <value>Was kann ich mit Sensoren tun?</value>
  </data>
  <data name="SensorsRetrieveDeviceData" xml:space="preserve">
    <value>Gerätedaten abrufen</value>
  </data>
  <data name="SensorsRetrieveDeviceDataInfo" xml:space="preserve">
    <value>Verwenden Sie gängige Skriptsprachen und sichere Umgebungsvariablen, um Daten von Desktopgeräten abzurufen.</value>
  </data>
  <data name="SensorsSync" xml:space="preserve">
    <value>Sensoren</value>
  </data>
  <data name="SensorStartupEvent" xml:space="preserve">
    <value>Starten</value>
  </data>
  <data name="SensorStepDefinition" xml:space="preserve">
    <value>Konfigurieren Sie den Schlüsselnamen, die Beschreibung und Trigger für die Daten, die vom Sensor zurückgegeben werden.</value>
  </data>
  <data name="SensorUserSwitchEvent" xml:space="preserve">
    <value>Benutzerwechsel</value>
  </data>
  <data name="SensorValue" xml:space="preserve">
    <value>Sensorwert</value>
  </data>
  <data name="SetupScriptParametersMac" xml:space="preserve">
    <value>Erstellen Sie Variablen, die während der Ausführung als Teil der Skriptumgebung verfügbar sind.
Shell-Skripte können direkt über den Namen (z. B. $myVariable) auf Variablen verweisen; Python 3-Skripte können über das OS-Modul (z. B. os.getenv('myvariable')) auf Variablen verweisen.</value>
  </data>
  <data name="SetupScriptParametersWindow" xml:space="preserve">
    <value>Erstellen Sie Variablen, die mit einem Skript als Umgebungsvariablen übergeben werden.
PowerShell-Skripte können auf Variablen verweisen, die hier definiert sind, indem Sie $env:key aufrufen, wo der Schlüssel das unten definierte Schlüsselfeld ist.</value>
  </data>
  <data name="SmartGroupCannotBeAssignedToMultipleAssignmentGroups" xml:space="preserve">
    <value>Doppelte Smartgroup(s) können nicht mehreren Zuweisungsgruppen zugewiesen werden.</value>
  </data>
  <data name="StringType" xml:space="preserve">
    <value>Zeichenkette</value>
  </data>
  <data name="SyncSensors" xml:space="preserve">
    <value>Sensoren synchronisieren</value>
    <comment>Label key for DeviceCommand</comment>
  </data>
  <data name="SystemExecutionContext" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="Triggers" xml:space="preserve">
    <value>Trigger</value>
  </data>
  <data name="TriggerTypeHelpText" xml:space="preserve">
    <value>Wenn der Auslöser auf "Zeitplan" gesetzt ist, erfasst und überträgt dieser Sensor Daten auf der Grundlage des Sensorenzeitplans, der auf der Seite für die Einstellungen des Windows-Beispielzeitplans konfiguriert wurde. Bei der Auswahl von "Ereignis" werden die Daten auf der Grundlage der gewählten Geräteereignisse erfasst und nach den Einstellungen der Seite des Windows-Beispielzeitplans übertragen.</value>
  </data>
  <data name="TriggerTypeLabel" xml:space="preserve">
    <value>Auslösertyp</value>
  </data>
  <data name="UseInLookUpLabel" xml:space="preserve">
    <value>Als Nachschlagewert benutzen</value>
  </data>
  <data name="UserExecutionContext" xml:space="preserve">
    <value>Aktueller Benutzer</value>
  </data>
  <data name="ValueTypeHelpText" xml:space="preserve">
    <value>Der Wertetyp bestimmt den Datentyp für das gesammelte Beispiel. Dadurch kann Workspace ONE bestimmen, welche Operatoren und Befehle für diesen Datentyp bereitgestellt werden sollen.</value>
  </data>
  <data name="ValueTypeLabel" xml:space="preserve">
    <value>Werttyp</value>
  </data>
  <data name="ValueTypeNotSetError" xml:space="preserve">
    <value>Wertetyp darf nicht leer sein</value>
  </data>
  <data name="WindowsPeriodicTriggerInfoText" xml:space="preserve">
    <value>Werden in regelmäßigen Abständen basierend auf dem konfigurierten Intelligent Hub Datenstichprobenintervall ausgeführt, dass unter Einstellungen &gt; Geräte und Bentzer &gt; Windows &gt; Windows Desktop &gt; Intelligent Hub Einstellungen definiert wurde.</value>
  </data>
</root>