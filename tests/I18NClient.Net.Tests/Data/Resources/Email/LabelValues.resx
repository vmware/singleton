<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminPersonalInformationChangeViaApi" xml:space="preserve">
    <value>Admin's Personal Information Changed Via API</value>
  </data>
  <data name="AdminPersonalInformationChangeViaApiMTD" xml:space="preserve">
    <value>The default HTML message template that notifies an administrator that their personal information has been changed via API. This message is automated and will always sent for security purposes.</value>
  </data>
  <data name="BlockAttachments" xml:space="preserve">
    <value>Block Attachments</value>
  </data>
  <data name="ConfirmEnrollmentEmailMessage" xml:space="preserve">
    <value>Do you want to send Enrollment Email?</value>
  </data>
  <data name="CustomAttribute1LookUpText" xml:space="preserve">
    <value>Custom Attribute 1</value>
  </data>
  <data name="CustomAttribute2LookUpText" xml:space="preserve">
    <value>Custom Attribute 2</value>
  </data>
  <data name="CustomAttribute3LookUpText" xml:space="preserve">
    <value>Custom Attribute 3</value>
  </data>
  <data name="CustomAttribute4LookUpText" xml:space="preserve">
    <value>Custom Attribute 4</value>
  </data>
  <data name="CustomAttribute5LookUpText" xml:space="preserve">
    <value>Custom Attribute 5</value>
  </data>
  <data name="EmailListViewError" xml:space="preserve">
    <value>Please check logs. Error occurred, operation failed!</value>
  </data>
  <data name="EmailNotificationInstallerV1" xml:space="preserve">
    <value>Email Notification Installer V1</value>
  </data>
  <data name="EmailNotificationInstallerV2" xml:space="preserve">
    <value>Email Notification Installer V2</value>
  </data>
  <data name="ENSSettingsInfo" xml:space="preserve">
    <value>The Email Notification Service for VMware Boxer and Inbox clients enriches the notification experience for users. Download the appropriate ENS product version {0} or {1} from the Resources portal to a machine attached to your network. The CNS URL is configured globally at Site URLs. If you do not have access to this page and the URL is not populated accurately, please contact your AirWatch Administrator or AW Support (Shared SaaS).</value>
  </data>
  <data name="Exch2019" xml:space="preserve">
    <value>Exchange 2019</value>
  </data>
  <data name="ExternalEnrollment" xml:space="preserve">
    <value>External Enrollment</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="getStatus" xml:space="preserve">
    <value>Get Status</value>
  </data>
  <data name="GmailUpdateFailed" xml:space="preserve">
    <value>Gmail Update Failed</value>
  </data>
  <data name="GoogleAccessUpdate" xml:space="preserve">
    <value>Google Access Update</value>
  </data>
  <data name="GoogleCustomAttributeWarningMessage" xml:space="preserve">
    <value>Custom Attributes must be enabled on the Directory Services User tab</value>
  </data>
  <data name="GoogleProvisionPasswordOnUnenrollment" xml:space="preserve">
    <value>Rotate Profiles on Unenrollment</value>
  </data>
  <data name="GoogleProvisionPasswordOnUnenrollmentToolTip" xml:space="preserve">
    <value>Disable to prevent profile and password rotation on unenrollment when a user has multiple devices enrolled</value>
  </data>
  <data name="GoogleTokenRevocationToolTip" xml:space="preserve">
    <value>Enables the MDM compliance action for revoking users’ G Suite tokens.</value>
  </data>
  <data name="GoogleTokenRevocationWarningMessage" xml:space="preserve">
    <value>Token Revocation may only be enabled for one MEM configuration in an organization group.</value>
  </data>
  <data name="GoogleUserEmailAddressType" xml:space="preserve">
    <value>Google User Email Address</value>
  </data>
  <data name="HelpMessageGoogleAppsConfig" xml:space="preserve">
    <value>Email Management for this email server type is supported via direct integration with the email server.</value>
  </data>
  <data name="HelpMessageJSegConfig" xml:space="preserve">
    <value>Email Management capabilities for this email server require the installation of the AirWatch Secure Email Gateway (SEG) proxy server on premises. Upon configuring the basic settings below, you will be able to download the installer for the SEG application from the Summary page of this wizard.</value>
  </data>
  <data name="HelpMessagePowerShellConfig" xml:space="preserve">
    <value>Email Management for this email server type is supported via direct PowerShell integration with the email server, and does not require the AirWatch Secure Email Gateway (SEG) proxy server.</value>
  </data>
  <data name="HelpMessageSegAnnouncement" xml:space="preserve">
    <value>VMware has announced deprecation of Classic SEG. Please review the {0} for more details.</value>
  </data>
  <data name="InvalidSEGClusterHostName" xml:space="preserve">
    <value>Invalid SEG Cluster host. Only a valid IPV4/Hostname is allowed.</value>
  </data>
  <data name="IsGoogleTokenRevocationEnabled" xml:space="preserve">
    <value>Token Revocation</value>
  </data>
  <data name="MailServerUpdateFailed" xml:space="preserve">
    <value>Email Server Update Failed</value>
  </data>
  <data name="MessageTemplates_Content_BlockEmailIfPolicyViolation" xml:space="preserve">
    <value>This email has been blocked due to corporate email security policies. Please contact your Administrator for further information.</value>
  </data>
  <data name="MessageTemplates_Description_BlockEmail" xml:space="preserve">
    <value>The default message template to be sent to users when an email is blocked.</value>
  </data>
  <data name="MessageTemplates_Name_BlockEmail" xml:space="preserve">
    <value>Block Email</value>
  </data>
  <data name="MessageTemplates_Subject_BlockEmail" xml:space="preserve">
    <value>Email Blocked</value>
  </data>
  <data name="PendingAllow" xml:space="preserve">
    <value>Pending Allow</value>
  </data>
  <data name="PendingBlock" xml:space="preserve">
    <value>Pending Block</value>
  </data>
  <data name="RevokeGoogleTokenOnDeviceWipe" xml:space="preserve">
    <value>Automatically revoke when wiping devices.</value>
  </data>
  <data name="RevokeGoogleTokenOnDeviceWipeToolTip" xml:space="preserve">
    <value>Enables token revocation as part of unenrollment and enterprise wipe actions.</value>
  </data>
  <data name="Segannouncement" xml:space="preserve">
    <value>My Workspace ONE announcement</value>
  </data>
  <data name="setConfig" xml:space="preserve">
    <value>Set Configuration</value>
  </data>
  <data name="UserEmailPolicyToolTipTooltip" xml:space="preserve">
    <value>Example:
 
A value of "Acme*" in the search box will select all Users/Groups which BEGIN with the text "Acme"
 
A value of "*Acme*" in the search box will select all Users/Groups which CONTAIN the text "Acme"
 
A value of "*Acme" in the search box will select all Users/Groups which END with the text "Acme"</value>
  </data>
  <data name="UserPrincipalNameLookupText" xml:space="preserve">
    <value>User Principal Name</value>
  </data>
  <data name="WorkspaceOneUEMLoginRecovery" xml:space="preserve">
    <value>Workspace ONE UEM Login Recovery</value>
  </data>
</root>