//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WanderingWiFi.AirWatch.Globalization.Resources.Settings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LabelValues {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LabelValues() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WanderingWiFi.AirWatch.Globalization.Resources.Settings.LabelValues", typeof(LabelValues).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Azure Active Directory Tenant ID is missing or invalid.
        /// </summary>
        internal static string AadTenantIdMissingOrInvalid {
            get {
                return ResourceManager.GetString("AadTenantIdMissingOrInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation Lock is enabled through integration with Apple Business Manager. Only devices associated with an MDM server token in Workspace ONE UEM can be Activation Lock enabled..
        /// </summary>
        internal static string ABMActivationLockInfoMessage {
            get {
                return ResourceManager.GetString("ABMActivationLockInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Workspace ONE UEM Console.
        /// </summary>
        internal static string AboutWorkspaceOneUemConsole {
            get {
                return ResourceManager.GetString("AboutWorkspaceOneUemConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Logs.
        /// </summary>
        internal static string AccessLogs {
            get {
                return ResourceManager.GetString("AccessLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Connection Failed, probably due to ACC settings misconfiguration(s)..
        /// </summary>
        internal static string AccSettingsMisconfiguration {
            get {
                return ResourceManager.GetString("AccSettingsMisconfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation Lock Batch Size.
        /// </summary>
        internal static string ActivationLockBatchSize {
            get {
                return ResourceManager.GetString("ActivationLockBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of devices that will be included in each batch for Activation Lock Job..
        /// </summary>
        internal static string ActivationLockBatchSizeTooltip {
            get {
                return ResourceManager.GetString("ActivationLockBatchSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation Lock Job.
        /// </summary>
        internal static string ActivationLockJob {
            get {
                return ResourceManager.GetString("ActivationLockJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation Lock is a feature that secures an Apple device if it is ever lost or stolen. If Activation Lock is enabled by the user or MDM, the user&apos;s Apple ID and password is required before anyone can reactivate and use your device. By enabling this feature, devices will prompt for Apple ID and password after a device reset (manual or MDM initiated)..
        /// </summary>
        internal static string ActivationLockTooltip {
            get {
                return ResourceManager.GetString("ActivationLockTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Directory Basic.
        /// </summary>
        internal static string ActiveDirectoryBasic {
            get {
                return ResourceManager.GetString("ActiveDirectoryBasic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity Monitor.
        /// </summary>
        internal static string ActivityMonitor {
            get {
                return ResourceManager.GetString("ActivityMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module provides peer-to-peer application distribution capabilities for the Windows devices on your internal network, facilitating enhanced application download speeds and eliminating the need for multiple distribution points..
        /// </summary>
        internal static string AdaptivaDescriptionV2 {
            get {
                return ResourceManager.GetString("AdaptivaDescriptionV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate.
        /// </summary>
        internal static string AdaptivaPublicCertificate {
            get {
                return ResourceManager.GetString("AdaptivaPublicCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adaptiva Public Certificate.
        /// </summary>
        internal static string AdaptivaPublicCertificateEnabled {
            get {
                return ResourceManager.GetString("AdaptivaPublicCertificateEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Adaptiva Public Certificate.
        /// </summary>
        internal static string AdaptivaPublicCertificateHelp {
            get {
                return ResourceManager.GetString("AdaptivaPublicCertificateHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In-Progress.
        /// </summary>
        internal static string AdaptivaPublishInProgressStatus {
            get {
                return ResourceManager.GetString("AdaptivaPublishInProgressStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add application details for setting app traffic policies..
        /// </summary>
        internal static string AddApplicationDescription {
            get {
                return ResourceManager.GetString("AddApplicationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Certificate Authority.
        /// </summary>
        internal static string AddCertificateAuthority {
            get {
                return ResourceManager.GetString("AddCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Custom Setting.
        /// </summary>
        internal static string AddCustomSetting {
            get {
                return ResourceManager.GetString("AddCustomSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Rule.
        /// </summary>
        internal static string AddDeviceTrafficRule {
            get {
                return ResourceManager.GetString("AddDeviceTrafficRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add EKU Attribute.
        /// </summary>
        internal static string AddEkuAttribute {
            get {
                return ResourceManager.GetString("AddEkuAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Outbound Proxy.
        /// </summary>
        internal static string AddOutboundProxy {
            get {
                return ResourceManager.GetString("AddOutboundProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new profile and assign to devices from the Enrollment Status page..
        /// </summary>
        internal static string AddProfileMessage {
            get {
                return ResourceManager.GetString("AddProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Request Template.
        /// </summary>
        internal static string AddRequestTemplate {
            get {
                return ResourceManager.GetString("AddRequestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add SAN.
        /// </summary>
        internal static string AddSan {
            get {
                return ResourceManager.GetString("AddSan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Server Traffic Rule.
        /// </summary>
        internal static string AddServerTrafficRule {
            get {
                return ResourceManager.GetString("AddServerTrafficRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Windows App.
        /// </summary>
        internal static string AddWindowsApp {
            get {
                return ResourceManager.GetString("AddWindowsApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the filepath or package friendly name (PFN) of the application..
        /// </summary>
        internal static string AddWindowsAppDescription {
            get {
                return ResourceManager.GetString("AddWindowsAppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This account must have a valid GSX User ID assigned to it in order to edit this page. Go to Accounts &gt; Administrators to ensure your administrator account includes a valid GSX User ID..
        /// </summary>
        internal static string AdminDoesNotHaveGsxUserId {
            get {
                return ResourceManager.GetString("AdminDoesNotHaveGsxUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin Generated?.
        /// </summary>
        internal static string AdminGenerated {
            get {
                return ResourceManager.GetString("AdminGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays which API Keys were automatically generated and which were manually generated for different integrations..
        /// </summary>
        internal static string AdminGeneratedToolTip {
            get {
                return ResourceManager.GetString("AdminGeneratedToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password for preventing users from accessing the settings menu on the Windows Store agent..
        /// </summary>
        internal static string AdministrativePasscodeInfo {
            get {
                return ResourceManager.GetString("AdministrativePasscodeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin Password Expiry Notification.
        /// </summary>
        internal static string AdminPasswordExpiryNotification {
            get {
                return ResourceManager.GetString("AdminPasswordExpiryNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin Password Expiry Notification.
        /// </summary>
        internal static string AdminPasswordExpiryNotificationJob {
            get {
                return ResourceManager.GetString("AdminPasswordExpiryNotificationJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default HTML message template that notifies an administrator that their password will expire shortly and that they need to take action to reset their password.
        /// </summary>
        internal static string AdminPasswordExpiryNotificationMTD {
            get {
                return ResourceManager.GetString("AdminPasswordExpiryNotificationMTD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies which file extensions are allowed and disallowed within Content..
        /// </summary>
        internal static string AdvancedFileExtensionDescription {
            get {
                return ResourceManager.GetString("AdvancedFileExtensionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables enrollment experience within the Content app..
        /// </summary>
        internal static string AdvancedLabelRequiredContentDescription {
            get {
                return ResourceManager.GetString("AdvancedLabelRequiredContentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Application.
        /// </summary>
        internal static string AgentApplication {
            get {
                return ResourceManager.GetString("AgentApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Applications.
        /// </summary>
        internal static string AgentApplications {
            get {
                return ResourceManager.GetString("AgentApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Download URL.
        /// </summary>
        internal static string AgentDownloadUrl {
            get {
                return ResourceManager.GetString("AgentDownloadUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Product Code.
        /// </summary>
        internal static string AgentProductCode_Description {
            get {
                return ResourceManager.GetString("AgentProductCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Settings.
        /// </summary>
        internal static string AgentSettings {
            get {
                return ResourceManager.GetString("AgentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Settings.
        /// </summary>
        internal static string AgentSettingsAppleiOS {
            get {
                return ResourceManager.GetString("AgentSettingsAppleiOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Settings.
        /// </summary>
        internal static string AgentSettingsMacOS {
            get {
                return ResourceManager.GetString("AgentSettingsMacOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Settings.
        /// </summary>
        internal static string AgentSettingsWin10 {
            get {
                return ResourceManager.GetString("AgentSettingsWin10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Updates.
        /// </summary>
        internal static string AgentUpdates {
            get {
                return ResourceManager.GetString("AgentUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright © {0} VMware, Inc. All rights reserved.  |  1155 Perimeter Center West, Suite 100, Atlanta, GA 30338.
        /// </summary>
        internal static string AirwatchAddressFooter {
            get {
                return ResourceManager.GetString("AirwatchAddressFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Agent Settings.
        /// </summary>
        internal static string AirwatchAgentSettings {
            get {
                return ResourceManager.GetString("AirwatchAgentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Policy Engine.
        /// </summary>
        internal static string AirWatchPolicyEngine_Description {
            get {
                return ResourceManager.GetString("AirWatchPolicyEngine_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Provisioning Package Service.
        /// </summary>
        internal static string AirWatchProvisioningPackageService_Description {
            get {
                return ResourceManager.GetString("AirWatchProvisioningPackageService_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Tunnel and Proxy are disabled.
        /// </summary>
        internal static string AirWatchTunnelAndProxyDisabled {
            get {
                return ResourceManager.GetString("AirWatchTunnelAndProxyDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Tunnel is disabled.
        /// </summary>
        internal static string AirWatchTunnelDisabled {
            get {
                return ResourceManager.GetString("AirWatchTunnelDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alexa for Business Service Url.
        /// </summary>
        internal static string AlexaForBusinessServiceUrl {
            get {
                return ResourceManager.GetString("AlexaForBusinessServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Other Apps.
        /// </summary>
        internal static string AllOtherApps {
            get {
                return ResourceManager.GetString("AllOtherApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Android devices in this Organization Group.
        /// </summary>
        internal static string AllowAndroidContainerModeAllOgDevices {
            get {
                return ResourceManager.GetString("AllowAndroidContainerModeAllOgDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow CDN.
        /// </summary>
        internal static string AllowCDN {
            get {
                return ResourceManager.GetString("AllowCDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Clock Skew.
        /// </summary>
        internal static string AllowedClockSkew {
            get {
                return ResourceManager.GetString("AllowedClockSkew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the maximum clock skew (in minutes) to account for the time discrepancy or drift that can occur between the Identity Provider and the Service Provider clocks and be considered in sync to proceed with authentication..
        /// </summary>
        internal static string AllowedClockSkewToolTip {
            get {
                return ResourceManager.GetString("AllowedClockSkewToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Editing.
        /// </summary>
        internal static string AllowEditing {
            get {
                return ResourceManager.GetString("AllowEditing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled and the primary account is provided, allows modification of the primary account.
        /// </summary>
        internal static string AllowEditingPrimaryUserAccountTooltip {
            get {
                return ResourceManager.GetString("AllowEditingPrimaryUserAccountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All iOS devices in this Organization Group.
        /// </summary>
        internal static string AllowIosContainerModeAllOgDevices {
            get {
                return ResourceManager.GetString("AllowIosContainerModeAllOgDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow all non-FQDN URLs through App tunnel.
        /// </summary>
        internal static string AllowNonFQDNDomains {
            get {
                return ResourceManager.GetString("AllowNonFQDNDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to allow all non-FQDN URLs through App Tunnel regardless of those specified in the Tunnel URLs list. Otherwise, only non-FQDN entries in the Tunnel URLs list will be allowed through App Tunnel..
        /// </summary>
        internal static string AllowNonFQDNDomainsToolTip {
            get {
                return ResourceManager.GetString("AllowNonFQDNDomainsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Notify.
        /// </summary>
        internal static string AllowNotify_Description {
            get {
                return ResourceManager.GetString("AllowNotify_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Enrollment for iOS 13+ and macOS 10.15+ devices.
        /// </summary>
        internal static string AllowUserEnrollmentForIos13MacOs1015 {
            get {
                return ResourceManager.GetString("AllowUserEnrollmentForIos13MacOs1015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this option allows any supported iOS or macOS devices enrolling at this organization group to enroll using Apple&apos;s User Enrollment with the user&apos;s Managed Apple ID..
        /// </summary>
        internal static string AllowUserEnrollmentForIos13MacOs1015Tooltip {
            get {
                return ResourceManager.GetString("AllowUserEnrollmentForIos13MacOs1015Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Windows devices in this Organization Group.
        /// </summary>
        internal static string AllowWindowsContainerModeAllOgDevices {
            get {
                return ResourceManager.GetString("AllowWindowsContainerModeAllOgDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Work Profile Enrollment.
        /// </summary>
        internal static string AllowWorkProfileEnrollment {
            get {
                return ResourceManager.GetString("AllowWorkProfileEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous Organization group for Network Range : Cannot have two or more Organization Groups with same customer code.
        /// </summary>
        internal static string AmbiguougOgForNetworkRange {
            get {
                return ResourceManager.GetString("AmbiguougOgForNetworkRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If provided, these certificates are used as trusted anchor certificates when evaluating the trust of the connection to the MDM server URL. Otherwise, the built-in root certificates are used..
        /// </summary>
        internal static string AnchorCertificateTooltip {
            get {
                return ResourceManager.GetString("AnchorCertificateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy without Google registration if you are operating on a closed network or are unable to communicate with Google Play.
        /// </summary>
        internal static string AndroidAllowAospClosedNetwork {
            get {
                return ResourceManager.GetString("AndroidAllowAospClosedNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register Workspace ONE as your Enterprise Mobility Management (EMM) provider with Google to start managing Android devices..
        /// </summary>
        internal static string AndroidAndroidEMMRegistrationDescription {
            get {
                return ResourceManager.GetString("AndroidAndroidEMMRegistrationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android application inactivity rule has duplicated application identifier..
        /// </summary>
        internal static string AndroidAppInactivityRuleDuplicate {
            get {
                return ResourceManager.GetString("AndroidAppInactivityRuleDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android application inactivity rule is not valid. Please verify the application identifier is provided and the inactive days is in range 1-90..
        /// </summary>
        internal static string AndroidAppInactivityRuleNotValid {
            get {
                return ResourceManager.GetString("AndroidAppInactivityRuleNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android application version rule has duplicated application identifier..
        /// </summary>
        internal static string AndroidAppVersionRuleDuplicate {
            get {
                return ResourceManager.GetString("AndroidAppVersionRuleDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android application version rule is not valid. Please verify the application identifier or the version format is correct..
        /// </summary>
        internal static string AndroidAppVersionRuleNotValid {
            get {
                return ResourceManager.GetString("AndroidAppVersionRuleNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android EMM Registration Configurations.
        /// </summary>
        internal static string AndroidEMMRegistrationConfigurations {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to the Configurations tab on the Android EMM Registration settings page..
        /// </summary>
        internal static string AndroidEMMRegistrationConfigurationsHelp {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationConfigurationsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android EMM Registration Enrollment Restrictions.
        /// </summary>
        internal static string AndroidEMMRegistrationEnrollmentRestrictions {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationEnrollmentRestrictions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to the Enrollment Restriction tab on the Android EMM Registration settings page..
        /// </summary>
        internal static string AndroidEMMRegistrationEnrollmentRestrictionsHelp {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationEnrollmentRestrictionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android EMM Registration Enrollment Settings.
        /// </summary>
        internal static string AndroidEMMRegistrationEnrollmentSettings {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationEnrollmentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to the Enrollment Settings tab on the Android EMM Registration settings page..
        /// </summary>
        internal static string AndroidEMMRegistrationEnrollmentSettingsHelp {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationEnrollmentSettingsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid Android EMM Registration is required to complete this action.
        /// </summary>
        internal static string AndroidEMMRegistrationRequired {
            get {
                return ResourceManager.GetString("AndroidEMMRegistrationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command to cancel Android Legacy migration to AFW for specific devices.
        /// </summary>
        internal static string AndroidEnterpriseCancelMigrationDevices {
            get {
                return ResourceManager.GetString("AndroidEnterpriseCancelMigrationDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android Enterprise Migration Batch Release Job.
        /// </summary>
        internal static string AndroidEnterpriseMigrationBatchReleaseJob {
            get {
                return ResourceManager.GetString("AndroidEnterpriseMigrationBatchReleaseJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy Android (Legacy).
        /// </summary>
        internal static string AndroidEnterpriseOptOut {
            get {
                return ResourceManager.GetString("AndroidEnterpriseOptOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android (Legacy) can be deployed without Google registration if your devices are running Android 5.0 or lower.
        ///
        ///However, registering Workspace ONE UEM as your EMM provider with Google is strongly recommended..
        /// </summary>
        internal static string AndroidEnterpriseOptOutMsg {
            get {
                return ResourceManager.GetString("AndroidEnterpriseOptOutMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Setting Up Service Account.
        /// </summary>
        internal static string AndroidEnterpriseTestConnectionFail {
            get {
                return ResourceManager.GetString("AndroidEnterpriseTestConnectionFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Account Setup Successful.
        /// </summary>
        internal static string AndroidEnterpriseTestConnectionSuccess {
            get {
                return ResourceManager.GetString("AndroidEnterpriseTestConnectionSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Work Profile Enterprise Wipe User Message.
        /// </summary>
        internal static string AndroidForWorkEndUserWipeMessage {
            get {
                return ResourceManager.GetString("AndroidForWorkEndUserWipeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android operating system version field is not populated..
        /// </summary>
        internal static string AndroidOsVersionNotSet {
            get {
                return ResourceManager.GetString("AndroidOsVersionNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complex Passcode Policies require a Minimum Operating System of Android 4.0.
        /// </summary>
        internal static string AndroidPasscodeWarning {
            get {
                return ResourceManager.GetString("AndroidPasscodeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android Relay Server Help Link.
        /// </summary>
        internal static string AndroidRelayServerHelpLink_Description {
            get {
                return ResourceManager.GetString("AndroidRelayServerHelpLink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A default message to be displayed to a user when their Work Profile is removed with an Enterprise Wipe command..
        /// </summary>
        internal static string AndroidWorkProfileEnterpriseWipeDescription {
            get {
                return ResourceManager.GetString("AndroidWorkProfileEnterpriseWipeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AOSP / Closed Network.
        /// </summary>
        internal static string AospClosedNetwork {
            get {
                return ResourceManager.GetString("AospClosedNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Google account will be created on devices. Public app management through managed Google Play will not be available. Ideal for AOSP devices (without Play Services) and when deploying on a network that does not have access to Google servers..
        /// </summary>
        internal static string AospClosedNetworkDescription {
            get {
                return ResourceManager.GetString("AospClosedNetworkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The administrator username and password are being used for User Credentials type API authentication..
        /// </summary>
        internal static string ApiAuthenticationHelpText {
            get {
                return ResourceManager.GetString("ApiAuthenticationHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password change is not successful. Please check the G Suite credentials in your selected MEM configuration..
        /// </summary>
        internal static string ApiCallFailedForGsuitePasswordRotation {
            get {
                return ResourceManager.GetString("ApiCallFailedForGsuitePasswordRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Connection.
        /// </summary>
        internal static string APIConnection {
            get {
                return ResourceManager.GetString("APIConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Last Sync Time.
        /// </summary>
        internal static string APILastSyncTime {
            get {
                return ResourceManager.GetString("APILastSyncTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Url.
        /// </summary>
        internal static string APIUrl {
            get {
                return ResourceManager.GetString("APIUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is not supported while the Workspace ONE catalog is configured to Fetch from AirWatch only.
        /// </summary>
        internal static string ApiVersionDoesNotSupportMdmOnlyMode {
            get {
                return ResourceManager.GetString("ApiVersionDoesNotSupportMdmOnlyMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APNs Messages Go Via Proxy.
        /// </summary>
        internal static string ApnsMessagesGoViaProxy {
            get {
                return ResourceManager.GetString("ApnsMessagesGoViaProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This proxy should be set up as the HTTP or SOCKS proxy to be used for making outbound connections by Messaging Service to send APNs.
        /// </summary>
        internal static string ApnsMessagesGoViaProxyExpl {
            get {
                return ResourceManager.GetString("ApnsMessagesGoViaProxyExpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APNs Proxy Settings.
        /// </summary>
        internal static string ApnsProxySettings {
            get {
                return ResourceManager.GetString("ApnsProxySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Type.
        /// </summary>
        internal static string ApnsProxyType {
            get {
                return ResourceManager.GetString("ApnsProxyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test connection over HTTP/2 failed. {0}..
        /// </summary>
        internal static string APNSViaHttp2Failed {
            get {
                return ResourceManager.GetString("APNSViaHttp2Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test connection over HTTP/2 successful..
        /// </summary>
        internal static string APNSViaHttp2Succeeded {
            get {
                return ResourceManager.GetString("APNSViaHttp2Succeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Approval Request Cleanup Job.
        /// </summary>
        internal static string AppApprovalRequestExpirationJob {
            get {
                return ResourceManager.GetString("AppApprovalRequestExpirationJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides employees with seamless and secure access to corporate resources through Workspace ONE Web..
        /// </summary>
        internal static string AppBrowserDescription {
            get {
                return ResourceManager.GetString("AppBrowserDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the application ID for Android or iOS devices and the number of days of inactivity (between 1-90) after which its application data will be wiped..
        /// </summary>
        internal static string AppInactivityInfo {
            get {
                return ResourceManager.GetString("AppInactivityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one application inactivity rule is required. Please add an application inactivity rule or disable the application inactivity option..
        /// </summary>
        internal static string AppInactivityRuleRequired {
            get {
                return ResourceManager.GetString("AppInactivityRuleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable and maintain secure communications between your iOS, macOS, and tvOS devices and Workspace ONE using the APNs for MDM certificate. The APNs certificate registers your company with Apple so you can manage devices with Workspace ONE. A corporate Apple ID is required..
        /// </summary>
        internal static string AppleAPNsForMDMDescription {
            get {
                return ResourceManager.GetString("AppleAPNsForMDMDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enroll Apple devices in bulk using a side-loaded enrollment profile via Apple Configurator 2 for iOS and tvOS devices, and manual installation for macOS. Enrollment can be enforced to a staging user for subsequent user authentication or direct enrollment into a single specified user..
        /// </summary>
        internal static string AppleAppleConfiguratorDescription {
            get {
                return ResourceManager.GetString("AppleAppleConfiguratorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Automated Enrollment.
        /// </summary>
        internal static string AppleAutomatedEnrollment {
            get {
                return ResourceManager.GetString("AppleAutomatedEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Onboard Apple devices into management in bulk with the help of a side-loaded enrollment profile via Apple Configurator 2 for iOS andtvOSdevices, and manual installation for macOS. Enrollment can be enforced to a staging user for subsequent user authentication or direct enrollment into a single specified user..
        /// </summary>
        internal static string AppleAutomatedEnrollmentDescription {
            get {
                return ResourceManager.GetString("AppleAutomatedEnrollmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Device Enrollment Program.
        /// </summary>
        internal static string AppleDeviceEnrollmentProgram {
            get {
                return ResourceManager.GetString("AppleDeviceEnrollmentProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Device Enrollment Program helps you configure and deploy corporate-owned Apple devices without any IT involvement and smart features that let you skip device setup screens, prevent the removal of MDM management and more..
        /// </summary>
        internal static string AppleDeviceEnrollmentProgramDescription {
            get {
                return ResourceManager.GetString("AppleDeviceEnrollmentProgramDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure student and teacher-managed Apple devices based on class roster information from Apple School Manager. Once configured, teachers can use their managed devices and Apple&apos;s Classroom app to provide students with a more enriching digital classroom experience. Managed Apple IDs created in Apple School Manager also allow for a seamless shared iPad experience..
        /// </summary>
        internal static string AppleEducationDescription {
            get {
                return ResourceManager.GetString("AppleEducationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use your Apple Global Service Exchange (GSX) account information to integrate AppleCare with Workspace ONE. This feature allows administrators to look up device details related to the display model name, device purchase and warranty status directly from Workspace ONE..
        /// </summary>
        internal static string AppleGlobalServiceExchangeDescription {
            get {
                return ResourceManager.GetString("AppleGlobalServiceExchangeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple GSX Service.
        /// </summary>
        internal static string AppleGsxServiceUrl {
            get {
                return ResourceManager.GetString("AppleGsxServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple GSX Service URL is required to retrieve warranty details for Apple devices.
        /// </summary>
        internal static string AppleGsxServiceUrlDescription {
            get {
                return ResourceManager.GetString("AppleGsxServiceUrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple School Manager.
        /// </summary>
        internal static string AppleSchoolManager {
            get {
                return ResourceManager.GetString("AppleSchoolManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple School Manager Fetch Fail.
        /// </summary>
        internal static string AppleSchoolManagerFetchFail {
            get {
                return ResourceManager.GetString("AppleSchoolManagerFetchFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple School Manager Fetch Success.
        /// </summary>
        internal static string AppleSchoolManagerFetchSuccess {
            get {
                return ResourceManager.GetString("AppleSchoolManagerFetchSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple School Manager Sync Fail.
        /// </summary>
        internal static string AppleSchoolManagerSyncFail {
            get {
                return ResourceManager.GetString("AppleSchoolManagerSyncFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple School Manager Sync Success.
        /// </summary>
        internal static string AppleSchoolManagerSyncSuccess {
            get {
                return ResourceManager.GetString("AppleSchoolManagerSyncSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applicable only for WinMo devices.
        /// </summary>
        internal static string ApplicableOnlyForWinmoDevices {
            get {
                return ResourceManager.GetString("ApplicableOnlyForWinmoDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Categories.
        /// </summary>
        internal static string ApplicationCategories {
            get {
                return ResourceManager.GetString("ApplicationCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows employees to access all of their files anytime, anywhere, across their devices. They can easily mark files as favorites, access documents offline, edit Office documents and annotate PDF files with built-in editing tools..
        /// </summary>
        internal static string ApplicationContentLockerDescription {
            get {
                return ResourceManager.GetString("ApplicationContentLockerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows employees to sync their Personal Content repository with their desktop computers..
        /// </summary>
        internal static string ApplicationContentLockerSyncDescription {
            get {
                return ResourceManager.GetString("ApplicationContentLockerSyncDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add at-least one application to the approved list of apps that documents can be opened in..
        /// </summary>
        internal static string ApplicationListIsRequired {
            get {
                return ResourceManager.GetString("ApplicationListIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting the list of managed and unmanaged applications on a device. This sample follows the privacy framework and will only collect samples that admins have configured..
        /// </summary>
        internal static string ApplicationListSampleInfo {
            get {
                return ResourceManager.GetString("ApplicationListSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application List Sample.
        /// </summary>
        internal static string ApplicationListSampleInMinutes {
            get {
                return ResourceManager.GetString("ApplicationListSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application List Sample Time Mode.
        /// </summary>
        internal static string ApplicationListSampleTimeMode {
            get {
                return ResourceManager.GetString("ApplicationListSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Logs.
        /// </summary>
        internal static string ApplicationLogs {
            get {
                return ResourceManager.GetString("ApplicationLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is referenced by one or more Device Traffic Rules. Please remove the application and try again..
        /// </summary>
        internal static string ApplicationMappedWithDTRs {
            get {
                return ResourceManager.GetString("ApplicationMappedWithDTRs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application could not be deleted..
        /// </summary>
        internal static string ApplicationNotDeleted {
            get {
                return ResourceManager.GetString("ApplicationNotDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Logs.
        /// </summary>
        internal static string AppLogs {
            get {
                return ResourceManager.GetString("AppLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group assignment settings will only apply at the time of enrollment when enabled. Once enrolled, any changes to a user&apos;s User Group membership will not automatically move their devices to another Organization Group that are already mapped to that user&apos;s new User Group membership..
        /// </summary>
        internal static string ApplySettingAtEnrollmentOnlyToolTip {
            get {
                return ResourceManager.GetString("ApplySettingAtEnrollmentOnlyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Data Loss Prevention (DLP) policies for applications with the Intune SDK by leveraging the Workspace ONE UEM console&apos;s graph API integration with Microsoft Intune® App Protection policies..
        /// </summary>
        internal static string AppOffice365SettingsDescription {
            get {
                return ResourceManager.GetString("AppOffice365SettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path or PFN.
        /// </summary>
        internal static string AppPathOrPFN {
            get {
                return ResourceManager.GetString("AppPathOrPFN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Restrictions.
        /// </summary>
        internal static string AppRestrictions {
            get {
                return ResourceManager.GetString("AppRestrictions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the SDK profiles which control security, authentication and other enterprise configurations for apps integrated with the Workspace ONE SDK..
        /// </summary>
        internal static string AppSettingsAndPoliciesDescription {
            get {
                return ResourceManager.GetString("AppSettingsAndPoliciesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps provision failed.
        /// </summary>
        internal static string AppsProvsionedFailed {
            get {
                return ResourceManager.GetString("AppsProvsionedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps provisioned successfully.
        /// </summary>
        internal static string AppsProvsionedSuccessfully {
            get {
                return ResourceManager.GetString("AppsProvsionedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appthority API Key.
        /// </summary>
        internal static string AppthorityAPIKey {
            get {
                return ResourceManager.GetString("AppthorityAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select “yes” to allow all non-FQDN URLs through App Tunnel regardless of those specified in the Tunnel URLs list. Select “no” to allow only the non-FQDN entries in the Tunnel URLs list..
        /// </summary>
        internal static string AppTunnelAllowNonFQDNDomains {
            get {
                return ResourceManager.GetString("AppTunnelAllowNonFQDNDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SDK app compliance rule evaluation for application versions on Android support any string when leveraging the &apos;Is&apos; or &apos;Is Not&apos; and compares for an exact match. Other operators such as &apos;Less than&apos; or &apos;Greater than&apos; only support numbers in the following format x, x.x, x.x.x, x.x.x.x, or x.x.x.x.x.
        /// </summary>
        internal static string AppVersionInfo {
            get {
                return ResourceManager.GetString("AppVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one application version rule is required. Please add an application version rule or disable the application version option..
        /// </summary>
        internal static string AppVersionRuleRequired {
            get {
                return ResourceManager.GetString("AppVersionRuleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides employees with seamless, secure, self-service access to all the apps and data they need to work any time from any device..
        /// </summary>
        internal static string AppWorkspaceONEDescription {
            get {
                return ResourceManager.GetString("AppWorkspaceONEDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Areas.
        /// </summary>
        internal static string Areas {
            get {
                return ResourceManager.GetString("Areas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you would like to proceed without Google registration?.
        /// </summary>
        internal static string AreYouSureYouWantAndroidAllowAospClosedNetwork {
            get {
                return ResourceManager.GetString("AreYouSureYouWantAndroidAllowAospClosedNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Settings at {0} Organization Group.
        /// </summary>
        internal static string ArgAllSettingsDialogDescription {
            get {
                return ResourceManager.GetString("ArgAllSettingsDialogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hour.
        /// </summary>
        internal static string ArgHour {
            get {
                return ResourceManager.GetString("ArgHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hours.
        /// </summary>
        internal static string ArgHoursPlural {
            get {
                return ResourceManager.GetString("ArgHoursPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} minutes.
        /// </summary>
        internal static string ArgMinutesPlural {
            get {
                return ResourceManager.GetString("ArgMinutesPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not valid or the {1} is not found in the defined LDAP.
        /// </summary>
        internal static string ArgNotValidOrArgNotFoundInDefinedLDAP {
            get {
                return ResourceManager.GetString("ArgNotValidOrArgNotFoundInDefinedLDAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} – {1} of {2} Items.
        /// </summary>
        internal static string ArgOfItems {
            get {
                return ResourceManager.GetString("ArgOfItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} seconds.
        /// </summary>
        internal static string ArgSecondsPlural {
            get {
                return ResourceManager.GetString("ArgSecondsPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Settings.
        /// </summary>
        internal static string ArgSettings {
            get {
                return ResourceManager.GetString("ArgSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Removal Protection Job.
        /// </summary>
        internal static string ArpResetJob {
            get {
                return ResourceManager.GetString("ArpResetJob", resourceCulture);
            }
        }
        /// <summary>
        ///   Looks up a localized string similar to Assign Default Security Group.
        /// </summary>
        internal static string AssignDefaultSecurityGroup {
            get {
                return ResourceManager.GetString("AssignDefaultSecurityGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated directory users or groups must be deleted in order to change the directory type..
        /// </summary>
        internal static string AssociatedUsersOrGroupsExistsForDirectoryType {
            get {
                return ResourceManager.GetString("AssociatedUsersOrGroupsExistsForDirectoryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication Hint Message.
        /// </summary>
        internal static string AuthenticationHintMessage {
            get {
                return ResourceManager.GetString("AuthenticationHintMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a concise message to help users with authentication, such as a username explanation and/or a link to help. Use the following format to insert link : [Text to Display](Address to navigate).
        /// </summary>
        internal static string AuthenticationMessageTooltip {
            get {
                return ResourceManager.GetString("AuthenticationMessageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        internal static string AuthenticationProvider {
            get {
                return ResourceManager.GetString("AuthenticationProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout.
        /// </summary>
        internal static string AuthenticationTypeTimeout {
            get {
                return ResourceManager.GetString("AuthenticationTypeTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the following format to insert link:{0}.
        /// </summary>
        internal static string AuthHintHelpLabelArg {
            get {
                return ResourceManager.GetString("AuthHintHelpLabelArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text message goes here
        ///[Link text](http://www.example.com/).
        /// </summary>
        internal static string AuthHintLinkFormat {
            get {
                return ResourceManager.GetString("AuthHintLinkFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Detect Proxy Setting.
        /// </summary>
        internal static string AutoDetectProxySetting {
            get {
                return ResourceManager.GetString("AutoDetectProxySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Detect Proxy Settings.
        /// </summary>
        internal static string AutoDetectProxySettings {
            get {
                return ResourceManager.GetString("AutoDetectProxySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Discovery Sync Error.
        /// </summary>
        internal static string AutoDiscoverySyncError {
            get {
                return ResourceManager.GetString("AutoDiscoverySyncError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, ignores the primary account information.
        /// </summary>
        internal static string AutofillPrimaryUserAccountTooltip {
            get {
                return ResourceManager.GetString("AutofillPrimaryUserAccountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing Workspace ONE Access AirWatch settings already use auto-generated API keys.
        /// </summary>
        internal static string AutoGeneratedApiKeysAlreadyUsed {
            get {
                return ResourceManager.GetString("AutoGeneratedApiKeysAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Access&apos;s AirWatch settings have been updated to use auto-generated API keys.
        /// </summary>
        internal static string AutoGeneratedApiKeysUpdated {
            get {
                return ResourceManager.GetString("AutoGeneratedApiKeysUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-Logout ensures that the device is logged out after the configured time period. This feature does not apply to Windows Desktop devices..
        /// </summary>
        internal static string AutoLogoutEnabledDescription {
            get {
                return ResourceManager.GetString("AutoLogoutEnabledDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To automatically renew certificates, the assignment type of the associated profile must be set to Auto. For Generic SCEP, automatic renewal is supported only if certificates are delivered through credential payloads..
        /// </summary>
        internal static string AutomaticCertificateRenewalInfoTooltip {
            get {
                return ResourceManager.GetString("AutomaticCertificateRenewalInfoTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling automatic certificate renewal allows Workspace ONE Unified Endpoint Management to request and deploy a new certificate when the current certificate’s expiration date is within the Auto renewal period configured..
        /// </summary>
        internal static string AutomaticCertificateRenewalPeriodInfo {
            get {
                return ResourceManager.GetString("AutomaticCertificateRenewalPeriodInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Delete Factory PPKG.
        /// </summary>
        internal static string AutomaticDeleteFactoryPPKG {
            get {
                return ResourceManager.GetString("AutomaticDeleteFactoryPPKG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Delete Factory PPKG Help.
        /// </summary>
        internal static string AutomaticDeleteFactoryPPKGHelp {
            get {
                return ResourceManager.GetString("AutomaticDeleteFactoryPPKGHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Availability start date should be greater than today&apos;s date..
        /// </summary>
        internal static string AvailabilityStartDateShouldBeGreaterThanToday {
            get {
                return ResourceManager.GetString("AvailabilityStartDateShouldBeGreaterThanToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available CA.
        /// </summary>
        internal static string AvailableCA {
            get {
                return ResourceManager.GetString("AvailableCA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AWCM.
        /// </summary>
        internal static string AWCM {
            get {
                return ResourceManager.GetString("AWCM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AWCM Connection.
        /// </summary>
        internal static string AWCMConnection {
            get {
                return ResourceManager.GetString("AWCMConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AirWatch Cloud Messaging must be enabled in order to configure VMware Tunnel. AirWatch Cloud Messaging can be configured {0}..
        /// </summary>
        internal static string AWCMIsDisabled {
            get {
                return ResourceManager.GetString("AWCMIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AWCM Hostname.
        /// </summary>
        internal static string AWCMUrl {
            get {
                return ResourceManager.GetString("AWCMUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware on-premises customers using the Email Notification Service (ENS) need to download this installer and provide it to VMware Support. This is to enable their environment to work with the Cloud Notification Service (CNS) servers.
        ///
        ///VMware SaaS deployments need to download the installer only for their AWCM deployment on Linux platform..
        /// </summary>
        internal static string AWCMUserDownloadInstallerLinuxForCertificate {
            get {
                return ResourceManager.GetString("AWCMUserDownloadInstallerLinuxForCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-sync start time:.
        /// </summary>
        internal static string AzureServicesDeviceSyncStartTime {
            get {
                return ResourceManager.GetString("AzureServicesDeviceSyncStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last successful sync:.
        /// </summary>
        internal static string AzureServicesLastSuccessfulSync {
            get {
                return ResourceManager.GetString("AzureServicesLastSuccessfulSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not found.
        /// </summary>
        internal static string AzureServicesLastSyncNotFound {
            get {
                return ResourceManager.GetString("AzureServicesLastSyncNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RE-SYNC.
        /// </summary>
        internal static string AzureServicesReSync {
            get {
                return ResourceManager.GetString("AzureServicesReSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to sync Azure services. Please try again..
        /// </summary>
        internal static string AzureServiceSyncFailure {
            get {
                return ResourceManager.GetString("AzureServiceSyncFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back End Certificate.
        /// </summary>
        internal static string BackEndCertificate {
            get {
                return ResourceManager.GetString("BackEndCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backend Hostname.
        /// </summary>
        internal static string BackendHostName {
            get {
                return ResourceManager.GetString("BackendHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Balanced.
        /// </summary>
        internal static string Balanced {
            get {
                return ResourceManager.GetString("Balanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Baseline Service URL.
        /// </summary>
        internal static string BaselineApiUrl {
            get {
                return ResourceManager.GetString("BaselineApiUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bash Path.
        /// </summary>
        internal static string BashExecutablePath {
            get {
                return ResourceManager.GetString("BashExecutablePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the path for running Bash scripts. The binary must be codesigned and with 755 permissions, or else Intelligent Hub will fallback to the default path of /bin/bash. Symlink paths are permitted, and spaces do not need to be escaped..
        /// </summary>
        internal static string BashExecutablePathTooltip {
            get {
                return ResourceManager.GetString("BashExecutablePathTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic User Sync.
        /// </summary>
        internal static string BasicUserSync {
            get {
                return ResourceManager.GetString("BasicUserSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Batch Import feature can be used to assign profiles to devices at bulk. A template for this import is linked below..
        /// </summary>
        internal static string BatchImportSerialNumberExplanation {
            get {
                return ResourceManager.GetString("BatchImportSerialNumberExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now, with the new My Services Selector, you can quickly and easily navigate between services from anywhere within Workspace ONE UEM..
        /// </summary>
        internal static string BentoNavWelcomeWindowDescription {
            get {
                return ResourceManager.GetString("BentoNavWelcomeWindowDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to your Workspace ONE services just got easier!.
        /// </summary>
        internal static string BentoNavWelcomeWindowTitle {
            get {
                return ResourceManager.GetString("BentoNavWelcomeWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beta Program.
        /// </summary>
        internal static string BetaProgram {
            get {
                return ResourceManager.GetString("BetaProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the beta products of your choice..
        /// </summary>
        internal static string BetaProgramDescriptionOne {
            get {
                return ResourceManager.GetString("BetaProgramDescriptionOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interact directly with the product and engineering teams on the feedback submitted..
        /// </summary>
        internal static string BetaProgramDescriptionThree {
            get {
                return ResourceManager.GetString("BetaProgramDescriptionThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access the newest, most innovative features and enhancements across EUC products such as Intelligent Hub, Boxer and more..
        /// </summary>
        internal static string BetaProgramDescriptionTwo {
            get {
                return ResourceManager.GetString("BetaProgramDescriptionTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be the first to access the newest Workspace ONE pre-released builds available..
        /// </summary>
        internal static string BetaProgramIntroduction {
            get {
                return ResourceManager.GetString("BetaProgramIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan the QR code or {0} to join..
        /// </summary>
        internal static string BetaProgramParam {
            get {
                return ResourceManager.GetString("BetaProgramParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test the Next Generation of Workspace ONE Products.
        /// </summary>
        internal static string BetaProgramTitle {
            get {
                return ResourceManager.GetString("BetaProgramTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind User Credentials Invalid.
        /// </summary>
        internal static string BindUserCredentialsInvalid {
            get {
                return ResourceManager.GetString("BindUserCredentialsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM BIOS Information Sample.
        /// </summary>
        internal static string BiosSample {
            get {
                return ResourceManager.GetString("BiosSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting BIOS information for Dell devices. The data includes boot mode, secure boot status, WiFi, GPS and Bluetooth radio status, charging schedules in BIOS etc..
        /// </summary>
        internal static string BiosSampleInfo {
            get {
                return ResourceManager.GetString("BiosSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM BIOS Information Sample.
        /// </summary>
        internal static string BiosSampleInMinutes {
            get {
                return ResourceManager.GetString("BiosSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BIOS Sample Time Mode.
        /// </summary>
        internal static string BiosSampleTimeMode {
            get {
                return ResourceManager.GetString("BiosSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Non-Compliant Devices.
        /// </summary>
        internal static string BlockNonCompliantDevices {
            get {
                return ResourceManager.GetString("BlockNonCompliantDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the security group for non-compliant devices..
        /// </summary>
        internal static string BlockNonCompliantDevicesTooltip {
            get {
                return ResourceManager.GetString("BlockNonCompliantDevicesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action: Block SDK App.
        /// </summary>
        internal static string BlockSdkApplicationAction {
            get {
                return ResourceManager.GetString("BlockSdkApplicationAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bluetooth Connections.
        /// </summary>
        internal static string BluetoothConnections {
            get {
                return ResourceManager.GetString("BluetoothConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bluetooth Data.
        /// </summary>
        internal static string BluetoothData {
            get {
                return ResourceManager.GetString("BluetoothData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values entered in the Display Name field will appear in the Workspace ONE Web&apos;s bookmarks menu. Leaving the Display Name field blank will only display the URL in the bookmarks menu..
        /// </summary>
        internal static string BookmarkInfo {
            get {
                return ResourceManager.GetString("BookmarkInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values entered in the Name field will appear in the Workspace ONE Web&apos;s bookmarks menu. Leaving the Name field blank will display the full Bookmark URL in the bookmark menu..
        /// </summary>
        internal static string BookmarkInfoTooltip {
            get {
                return ResourceManager.GetString("BookmarkInfoTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BranchCache Peer Distribution Setup.
        /// </summary>
        internal static string BranchCacheSetting {
            get {
                return ResourceManager.GetString("BranchCacheSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting Browser information samples. This sample contains security zone level information, status of plugins and scripts and other settings related to the IE browser..
        /// </summary>
        internal static string BrowserInformationSampleInfo {
            get {
                return ResourceManager.GetString("BrowserInformationSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Information.
        /// </summary>
        internal static string BuildInformation {
            get {
                return ResourceManager.GetString("BuildInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk Assignment Maximum Limit.
        /// </summary>
        internal static string BulkAssignmentMaxLimit_Description {
            get {
                return ResourceManager.GetString("BulkAssignmentMaxLimit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk Enrollment.
        /// </summary>
        internal static string BulkEnrollment {
            get {
                return ResourceManager.GetString("BulkEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BYOD.
        /// </summary>
        internal static string BYOD {
            get {
                return ResourceManager.GetString("BYOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CA Batch Import Completed.
        /// </summary>
        internal static string CABatchImportCompleted {
            get {
                return ResourceManager.GetString("CABatchImportCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CA Batch Import Failed.
        /// </summary>
        internal static string CABatchImportFailed {
            get {
                return ResourceManager.GetString("CABatchImportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CA Batch Import Started.
        /// </summary>
        internal static string CABatchImportStarted {
            get {
                return ResourceManager.GetString("CABatchImportStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Certificate.
        /// </summary>
        internal static string CaCertificate {
            get {
                return ResourceManager.GetString("CaCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculator.
        /// </summary>
        internal static string Calculator {
            get {
                return ResourceManager.GetString("Calculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default Device traffic rule set cannot be deleted..
        /// </summary>
        internal static string CannotDeleteDefaultDTR {
            get {
                return ResourceManager.GetString("CannotDeleteDefaultDTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t wait? Skip ahead and check out the new Configurations page!.
        /// </summary>
        internal static string CantWaitSkipAheadAndCheckOutTheNewConfigurationsPage {
            get {
                return ResourceManager.GetString("CantWaitSkipAheadAndCheckOutTheNewConfigurationsPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is one deployment model supported - 
        ///For Proxy: Basic Deployment (server in the internal network or DMZ) and Relay-Endpoint Deployment (Relay server in the DMZ and Endpoint server in the internal network)..
        /// </summary>
        internal static string CascadeInfoWhenClarityFeatureFlagOn {
            get {
                return ResourceManager.GetString("CascadeInfoWhenClarityFeatureFlagOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub App Catalog settings have moved to Workspace ONE Hub Services. These read-only settings apply to older versions of Intelligent Hub. Navigate to Workspace ONE Hub Services to learn more..
        /// </summary>
        internal static string CatalogSettingsInfo {
            get {
                return ResourceManager.GetString("CatalogSettingsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enable and save the CDN settings before performing the test connection operation..
        /// </summary>
        internal static string CDNNotEnabled {
            get {
                return ResourceManager.GetString("CDNNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to CDN server failed..
        /// </summary>
        internal static string CDNTestFailed {
            get {
                return ResourceManager.GetString("CDNTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This product participates in VMware’s Customer Experience Improvement Program (“CEIP”). The CEIP provides VMware with information that enables VMware to improve its products and services, to fix problems, and to advise you on how best to deploy and use our products. As part of the CEIP, VMware collects technical information about your organization’s use of VMware products and services on a regular basis in association with your organization’s VMware license key(s). This information does not personally ident [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CeipDescription {
            get {
                return ResourceManager.GetString("CeipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate saved..
        /// </summary>
        internal static string CertificateAddedCertInfo {
            get {
                return ResourceManager.GetString("CertificateAddedCertInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Authorities.
        /// </summary>
        internal static string CertificateAuthorities {
            get {
                return ResourceManager.GetString("CertificateAuthorities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Mobile Certificate Management optimizes security throughout the device lifecycle through Certificate Authorites that provide a more stable and secure authentication method than traditional passwords..
        /// </summary>
        internal static string CertificateAuthoritiesListDescription {
            get {
                return ResourceManager.GetString("CertificateAuthoritiesListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Authority.
        /// </summary>
        internal static string CertificateAuthority {
            get {
                return ResourceManager.GetString("CertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Mobile Certificate Management optimizes security throughout the device lifecycle through Certificate Authorities that provide a more stable and secure authentication method than traditional passwords..
        /// </summary>
        internal static string CertificateAuthorityConfigurationDescription {
            get {
                return ResourceManager.GetString("CertificateAuthorityConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Authority do not belong to the current organization group..
        /// </summary>
        internal static string CertificateAuthorityDoesNotBelongToOg {
            get {
                return ResourceManager.GetString("CertificateAuthorityDoesNotBelongToOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate can not be used in cascade mode, if Client Authentication is not present in Enhanced Authentication Key Usage OID.
        /// </summary>
        internal static string CertificateCannotBeUsedInCascadeMode {
            get {
                return ResourceManager.GetString("CertificateCannotBeUsedInCascadeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate do not exist..
        /// </summary>
        internal static string CertificateDoesNotExists {
            get {
                return ResourceManager.GetString("CertificateDoesNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate provided has expired.
        /// </summary>
        internal static string CertificateHasExpired {
            get {
                return ResourceManager.GetString("CertificateHasExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule to collect the inventory of all managed certificates on the device. This does not collect the inventory of user installed or factory installed certificates..
        /// </summary>
        internal static string CertificateListSampleInfo {
            get {
                return ResourceManager.GetString("CertificateListSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate List Sample.
        /// </summary>
        internal static string CertificateListSampleInMinutes {
            get {
                return ResourceManager.GetString("CertificateListSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate List Sample Time Mode.
        /// </summary>
        internal static string CertificateListSampleTimeMode {
            get {
                return ResourceManager.GetString("CertificateListSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value you put in here is the number of commands that gets released in every batch. This number can be increased to improve certificate profile batching, however it is recommended to closely monitor CA and DS server performance.
        /// </summary>
        internal static string CertificateProfilePublishFrequencyHelp {
            get {
                return ResourceManager.GetString("CertificateProfilePublishFrequencyHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Profiles.
        /// </summary>
        internal static string CertificateProfiles {
            get {
                return ResourceManager.GetString("CertificateProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate removed..
        /// </summary>
        internal static string CertificateRemovedCertInfo {
            get {
                return ResourceManager.GetString("CertificateRemovedCertInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable revocation of certificates based on sampling. If disabled, revocation will be prevented if the certificates are missing from the sample..
        /// </summary>
        internal static string CertificateRevocationBasedOnSamplingHelpText {
            get {
                return ResourceManager.GetString("CertificateRevocationBasedOnSamplingHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a time period in hours to use between attempts to revoke certificates with a status of Not Reported. Time period must be greater than the value used for time sampling. Revocation of the certificates will take place on the next sample after the defined time period..
        /// </summary>
        internal static string CertificateRevocationBasedOnSamplingPeriodHelpText {
            get {
                return ResourceManager.GetString("CertificateRevocationBasedOnSamplingPeriodHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Revocation Period (hours).
        /// </summary>
        internal static string CertificateRevocationBasedOnSamplingPeriodHours {
            get {
                return ResourceManager.GetString("CertificateRevocationBasedOnSamplingPeriodHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Subject name does not correspond with Host name..
        /// </summary>
        internal static string CertificateSubjectHostnameMismatch {
            get {
                return ResourceManager.GetString("CertificateSubjectHostnameMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Template do not belong to the current organization group..
        /// </summary>
        internal static string CertificateTemplateDoesNotBelongToOg {
            get {
                return ResourceManager.GetString("CertificateTemplateDoesNotBelongToOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a certificate to upload. Supported certificate types include: .pfx, .p12, .cer..
        /// </summary>
        internal static string CertificateUploadHelpText {
            get {
                return ResourceManager.GetString("CertificateUploadHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes will not take effect until you restart IIS and all AirWatch services in the Windows Services on all Workspace One Servers..
        /// </summary>
        internal static string ChangesRequireIISAndServicesRestart {
            get {
                return ResourceManager.GetString("ChangesRequireIISAndServicesRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Connection Failed - Other errors..
        /// </summary>
        internal static string CheckConnectionFailed {
            get {
                return ResourceManager.GetString("CheckConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if new profile configurations are available..
        /// </summary>
        internal static string CheckForDduiUpdatesTooltip {
            get {
                return ResourceManager.GetString("CheckForDduiUpdatesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates....
        /// </summary>
        internal static string CheckingForUpdates {
            get {
                return ResourceManager.GetString("CheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose File.
        /// </summary>
        internal static string ChooseFile {
            get {
                return ResourceManager.GetString("ChooseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Manually.
        /// </summary>
        internal static string ChooseManually {
            get {
                return ResourceManager.GetString("ChooseManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Settings.
        /// </summary>
        internal static string ChromeBookLegacyAgentSettings {
            get {
                return ResourceManager.GetString("ChromeBookLegacyAgentSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you configure Chrome OS EMM Registration, the Workspace ONE UEM Extension for Chrome OS will be automatically pushed to your end user’s devices.  While an icon will appear in the end user’s browser and the end user will be able to navigate to information about the data collected by the Extension, you are solely responsible for providing any necessary notices to your device end users, obtaining any legally required consents from your device end users regarding your use of the Extension, and otherwise comp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChromeExtensionNotificationText {
            get {
                return ResourceManager.GetString("ChromeExtensionNotificationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chrome OS.
        /// </summary>
        internal static string ChromeOS {
            get {
                return ResourceManager.GetString("ChromeOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register Workspace ONE UEM as your Enterprise Mobility Management (EMM) provider with Google to start managing Chrome OS devices..
        /// </summary>
        internal static string ChromeOSEMMRegistrationDescription {
            get {
                return ResourceManager.GetString("ChromeOSEMMRegistrationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simply enter your Google admin account and you will be redirected to the Google authorization page to grant permissions. Make sure you have pop-ups enabled, otherwise the authorization page will not open..
        /// </summary>
        internal static string ChromeRegistrationRedirectText {
            get {
                return ResourceManager.GetString("ChromeRegistrationRedirectText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error registering Chrome OS EMM.  Please verify your Google Admin Console settings for available licenses, admin privileges, and Partner Access configuration..
        /// </summary>
        internal static string ChromeSettingsMisconfigured {
            get {
                return ResourceManager.GetString("ChromeSettingsMisconfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CIMDEndpoint.
        /// </summary>
        internal static string CIMDEndpointLabel {
            get {
                return ResourceManager.GetString("CIMDEndpointLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://servername or IP address/QueryStringParamLogger?user={0}&amp;pass={1}&amp;to={2}&amp;text={3}.
        /// </summary>
        internal static string CIMDEndpointTooltip {
            get {
                return ResourceManager.GetString("CIMDEndpointTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class Management.
        /// </summary>
        internal static string ClassManagement {
            get {
                return ResourceManager.GetString("ClassManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Android App Data.
        /// </summary>
        internal static string ClearAppDataOnLogout {
            get {
                return ResourceManager.GetString("ClearAppDataOnLogout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Override.
        /// </summary>
        internal static string ClearOverride {
            get {
                return ResourceManager.GetString("ClearOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Product Provisioning State.
        /// </summary>
        internal static string ClearProductProvisioningState_Description {
            get {
                return ResourceManager.GetString("ClearProductProvisioningState_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear RelayServer Content Mapping Job.
        /// </summary>
        internal static string ClearRelayServerContentMappingJob {
            get {
                return ResourceManager.GetString("ClearRelayServerContentMappingJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to expand {0} menu.
        /// </summary>
        internal static string ClickToExpandArgMenu {
            get {
                return ResourceManager.GetString("ClickToExpandArgMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Authentication.
        /// </summary>
        internal static string ClientAuthentication {
            get {
                return ResourceManager.GetString("ClientAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Name.
        /// </summary>
        internal static string ClientName {
            get {
                return ResourceManager.GetString("ClientName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: These rules are only applicable to the Per-App Tunnel component of VMware Tunnel for Android, iOS, macOS, and Windows Desktop devices. (For iOS, please use the VMware Tunnel client application from the App store). Based on the rules specified on this page, VMware Tunnel application installed on your mobile device will decide to either Tunnel, Block or Bypass network traffic. There is also an option available to route network traffic to a custom web proxy configured in your network..
        /// </summary>
        internal static string ClientTrafficRulesInfoWithSupportForMacOSApps {
            get {
                return ResourceManager.GetString("ClientTrafficRulesInfoWithSupportForMacOSApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to generate signed certificate for Cloud Connector.
        /// </summary>
        internal static string CloudConnectorCertificate {
            get {
                return ResourceManager.GetString("CloudConnectorCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to generate signed certificate for Cloud Connector Client.
        /// </summary>
        internal static string CloudConnectorClientCertificate {
            get {
                return ResourceManager.GetString("CloudConnectorClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CNAME Verified.
        /// </summary>
        internal static string CNameVerified {
            get {
                return ResourceManager.GetString("CNameVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Integrity Policy Allowlist.
        /// </summary>
        internal static string CodeIntegrityPolicyAllowlist_Description {
            get {
                return ResourceManager.GetString("CodeIntegrityPolicyAllowlist_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Integrity Policy Hash Check.
        /// </summary>
        internal static string CodeIntegrityPolicyHashCheck_Description {
            get {
                return ResourceManager.GetString("CodeIntegrityPolicyHashCheck_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When choosing not to collect the IMEI number, please ensure it is not needed by other features within the Workspace ONE UEM Console..
        /// </summary>
        internal static string CollectImeiInfoMessage {
            get {
                return ResourceManager.GetString("CollectImeiInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collect IMEI Number on Work Profile.
        /// </summary>
        internal static string CollectImeiNumber {
            get {
                return ResourceManager.GetString("CollectImeiNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collect Job Statistics.
        /// </summary>
        internal static string CollectJobStatistics_Description {
            get {
                return ResourceManager.GetString("CollectJobStatistics_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color code.
        /// </summary>
        internal static string ColorCode {
            get {
                return ResourceManager.GetString("ColorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Company Hub Settings.
        /// </summary>
        internal static string CompanyHubSettings {
            get {
                return ResourceManager.GetString("CompanyHubSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully authenticated Azure Active Directory. Please close the page and continue to Workspace ONE UEM..
        /// </summary>
        internal static string ComplianceAzureADResponsePageMessage {
            get {
                return ResourceManager.GetString("ComplianceAzureADResponsePageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure AD Authentication.
        /// </summary>
        internal static string ComplianceAzureADResponsePageTitle {
            get {
                return ResourceManager.GetString("ComplianceAzureADResponsePageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will be able to complete the integration once the consent flow is successfully accepted..
        /// </summary>
        internal static string ComplianceConditionalAccessAdminConsentTooltip {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessAdminConsentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will be redirected to Microsoft to authenticate to the Azure AD. After authenticating, return to Workspace ONE UEM to complete the integration..
        /// </summary>
        internal static string ComplianceConditionalAccessAzureADPopUpBodyText {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessAzureADPopUpBodyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect to Microsoft.
        /// </summary>
        internal static string ComplianceConditionalAccessAzureADPopUpHeaderText {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessAzureADPopUpHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COMPLETE.
        /// </summary>
        internal static string ComplianceConditionalAccessCompleteIntegrationButton {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessCompleteIntegrationButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Azure AD for Compliance failed..
        /// </summary>
        internal static string ComplianceConditionalAccessDeletionFailure {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessDeletionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure AD integration failed..
        /// </summary>
        internal static string ComplianceConditionalAccessIntegrationFailure {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessIntegrationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully integrated Azure AD..
        /// </summary>
        internal static string ComplianceConditionalAccessIntegrationSuccess {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessIntegrationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You haven’t completed integration with Azure AD..
        /// </summary>
        internal static string ComplianceConditionalAccessIntegrationWarning {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessIntegrationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while enabling &quot;Use Azure AD for Compliance.&quot; {0} now or you can go to Monitor &gt; Intelligence. For more information please refer {1}..
        /// </summary>
        internal static string ComplianceConditionalAccessWDPOptedInWarning {
            get {
                return ResourceManager.GetString("ComplianceConditionalAccessWDPOptedInWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have personal app privacy set to &apos;do not collect&apos; for one or more device types and you also have app list based compliance policies created at one or more OGs in the hierarchy. Please make sure you do not have policies to mark device compliance state based on applications that could be sideloaded by end-users or personal apps..
        /// </summary>
        internal static string CompliancePolicyAlertMsgOnAppListPrivacy {
            get {
                return ResourceManager.GetString("CompliancePolicyAlertMsgOnAppListPrivacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assign compliance policy failure..
        /// </summary>
        internal static string ConditionalAccess_assign_compliance_policy_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-assign-compliance-policy-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compliance management partner not found..
        /// </summary>
        internal static string ConditionalAccess_compliance_management_partner_not_found {
            get {
                return ResourceManager.GetString("ConditionalAccess-compliance-management-partner-not-found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create compliance policy failure..
        /// </summary>
        internal static string ConditionalAccess_create_compliance_policy_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-create-compliance-policy-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete compliance policy failure..
        /// </summary>
        internal static string ConditionalAccess_delete_compliance_policy_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-delete-compliance-policy-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compliance management partner failure..
        /// </summary>
        internal static string ConditionalAccess_get_compliance_management_partners_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-get-compliance-management-partners-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth token2 failure..
        /// </summary>
        internal static string ConditionalAccess_get_oauth2_token_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-get-oauth2-token-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service endpoint failure..
        /// </summary>
        internal static string ConditionalAccess_get_service_endpoints_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-get-service-endpoints-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partner tenant already provisioned..
        /// </summary>
        internal static string ConditionalAccess_partner_tenant_already_provisioned {
            get {
                return ResourceManager.GetString("ConditionalAccess-partner-tenant-already-provisioned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partner tenant already provisioned with different source tenant..
        /// </summary>
        internal static string ConditionalAccess_partner_tenant_already_provisioned_with_different_source_tenant {
            get {
                return ResourceManager.GetString("ConditionalAccess-partner-tenant-already-provisioned-with-different-source-tenant" +
                        "", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partner tenant is not provisioned..
        /// </summary>
        internal static string ConditionalAccess_partner_tenant_not_provisioned {
            get {
                return ResourceManager.GetString("ConditionalAccess-partner-tenant-not-provisioned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partner tenant is not provisioned or mismatching..
        /// </summary>
        internal static string ConditionalAccess_partner_tenant_not_provisioned_or_mismatching {
            get {
                return ResourceManager.GetString("ConditionalAccess-partner-tenant-not-provisioned-or-mismatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provision tenant failure..
        /// </summary>
        internal static string ConditionalAccess_provision_tenant_failure {
            get {
                return ResourceManager.GetString("ConditionalAccess-provision-tenant-failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test the Azure Active Directory connection and complete the integration..
        /// </summary>
        internal static string ConditionalAccessCompleteIntegrationBodyText {
            get {
                return ResourceManager.GetString("ConditionalAccessCompleteIntegrationBodyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete Integration.
        /// </summary>
        internal static string ConditionalAccessCompleteIntegrationHeaderText {
            get {
                return ResourceManager.GetString("ConditionalAccessCompleteIntegrationHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save Conditional Access configuration..
        /// </summary>
        internal static string ConditionalAccessConfigurationSaveFailureMessage {
            get {
                return ResourceManager.GetString("ConditionalAccessConfigurationSaveFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use compliance data in Azure conditional access policies.
        /// </summary>
        internal static string ConditionalAccessEnabled {
            get {
                return ResourceManager.GetString("ConditionalAccessEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use compliance data in Azure conditional access policies for iOS and Android.
        /// </summary>
        internal static string ConditionalAccessEnabledForIosAndroid {
            get {
                return ResourceManager.GetString("ConditionalAccessEnabledForIosAndroid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use compliance data in Azure conditional access policies for Windows.
        /// </summary>
        internal static string ConditionalAccessEnabledForWindows {
            get {
                return ResourceManager.GetString("ConditionalAccessEnabledForWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use device compliance data from UEM required by Azure AD conditional access policies.
        ///        Workspace ONE leverages Microsoft Intune® Device Compliance API to call Microsoft 365 services including Microsoft Intune® and Azure Active Directory Premium..
        /// </summary>
        internal static string ConditionalAccessEnabledHelpText {
            get {
                return ResourceManager.GetString("ConditionalAccessEnabledHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please either disable &quot;Use compliance data in Azure conditional access policies&apos; or enable &apos;Use compliance data in Azure conditional access policies for Windows&apos; or &apos;Use compliance data in Azure conditional access policies for iOS and Android&apos; to save the page successfully..
        /// </summary>
        internal static string ConditionalAccessPlatformSelectionWarningMessage {
            get {
                return ResourceManager.GetString("ConditionalAccessPlatformSelectionWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional Access Policies.
        /// </summary>
        internal static string ConditionalAccessPoliciesText {
            get {
                return ResourceManager.GetString("ConditionalAccessPoliciesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It appears an error occurred while enabling the &quot;Use Azure AD For Compliance&quot;. Please opt in to intelligence by navigating to ‘Monitor &gt; Intelligence’.
        /// </summary>
        internal static string ConditionalAccessWDPOptedInErrorMessage {
            get {
                return ResourceManager.GetString("ConditionalAccessWDPOptedInErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration does not belong to your organization group.
        /// </summary>
        internal static string ConfigDoesntBelongToOG {
            get {
                return ResourceManager.GetString("ConfigDoesntBelongToOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Name.
        /// </summary>
        internal static string ConfigurationName {
            get {
                return ResourceManager.GetString("ConfigurationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configurations.
        /// </summary>
        internal static string Configurations {
            get {
                return ResourceManager.GetString("Configurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now, providing employees with the secure tools they need to stay productive is easier than ever..
        /// </summary>
        internal static string ConfigurationsHelpDescription {
            get {
                return ResourceManager.GetString("ConfigurationsHelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is being reimagined so all the essential settings you need to define and develop the needs of your business are more actionable, easier-to-find and more logically organized in Configurations..
        /// </summary>
        internal static string ConfigurationsHelpDescriptionArg {
            get {
                return ResourceManager.GetString("ConfigurationsHelpDescriptionArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Establish the foundational settings, customizations and integrations to provide employees with the resources they need to drive your business forward..
        /// </summary>
        internal static string ConfigurationsListDescription {
            get {
                return ResourceManager.GetString("ConfigurationsListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups &amp; Settings is being reimagined so all the essential settings you need to define and develop the needs of your business are more actionable, easier-to-find and more logically organized in Configurations..
        /// </summary>
        internal static string ConfigurationsWelcomeWindowDescription {
            get {
                return ResourceManager.GetString("ConfigurationsWelcomeWindowDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Intelligent Hub Configuration has moved to {0} page..
        /// </summary>
        internal static string ConfigurationsWelcomeWindowParam {
            get {
                return ResourceManager.GetString("ConfigurationsWelcomeWindowParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Failed.
        /// </summary>
        internal static string ConfigurationUpdateFailed {
            get {
                return ResourceManager.GetString("ConfigurationUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Workspace ONE Hub.
        /// </summary>
        internal static string ConfigureHub {
            get {
                return ResourceManager.GetString("ConfigureHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to the Hub Configuration page.
        /// </summary>
        internal static string ConfigureHubHelp {
            get {
                return ResourceManager.GetString("ConfigureHubHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Hub Services {0}..
        /// </summary>
        internal static string ConfigureHubServicesParam {
            get {
                return ResourceManager.GetString("ConfigureHubServicesParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kerberos needs to be enabled as part of the Tunnel Proxy configuration. To configure, please go to System &gt; Enterprise Integration &gt; VMware Tunnel Proxy.
        /// </summary>
        internal static string ConfigureKerberosUnderMagInSystemConfiguration {
            get {
                return ResourceManager.GetString("ConfigureKerberosUnderMagInSystemConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure and save the SCIM Provisioning setup for the current organization group..
        /// </summary>
        internal static string ConfigureScimProvisioningForCurrentOrganizationGroup {
            get {
                return ResourceManager.GetString("ConfigureScimProvisioningForCurrentOrganizationGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure VMware Tunnel Settings.
        /// </summary>
        internal static string ConfigureTunnelSettings {
            get {
                return ResourceManager.GetString("ConfigureTunnelSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirmation.
        /// </summary>
        internal static string Confirmation {
            get {
                return ResourceManager.GetString("Confirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this Adaptiva Peer Distribution Setting?.
        /// </summary>
        internal static string ConfirmDeleteAdaptivaSettingV2 {
            get {
                return ResourceManager.GetString("ConfirmDeleteAdaptivaSettingV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to locate device?.
        /// </summary>
        internal static string ConfirmFindDevice {
            get {
                return ResourceManager.GetString("ConfirmFindDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this font?.
        /// </summary>
        internal static string ConfirmFontDelete {
            get {
                return ResourceManager.GetString("ConfirmFontDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will remove the existing trust Tunnel uses for authentication. You will need to deploy updated profiles after this action..
        /// </summary>
        internal static string ConfirmRegenerateCertificate {
            get {
                return ResourceManager.GetString("ConfirmRegenerateCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Workspace ONE Access password.
        /// </summary>
        internal static string ConfirmVIDMPassword {
            get {
                return ResourceManager.GetString("ConfirmVIDMPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console Proxy Settings are required.
        /// </summary>
        internal static string ConsoleProxySettingsRequired {
            get {
                return ResourceManager.GetString("ConsoleProxySettingsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console to AWCM.
        /// </summary>
        internal static string ConsoleToAWCM {
            get {
                return ResourceManager.GetString("ConsoleToAWCM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please make sure AWCM service is running and Console to AWCM server connection is good..
        /// </summary>
        internal static string ConsoleToAWCMFailureMessage {
            get {
                return ResourceManager.GetString("ConsoleToAWCMFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Categories.
        /// </summary>
        internal static string ContentCategories {
            get {
                return ResourceManager.GetString("ContentCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes made to any of the settings below will take effect after re-saving CG configuration in UAG.
        /// </summary>
        internal static string Contenteditreconfigurewarning {
            get {
                return ResourceManager.GetString("Contenteditreconfigurewarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Gateway Download.
        /// </summary>
        internal static string ContentGatewayDownload {
            get {
                return ResourceManager.GetString("ContentGatewayDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this will allow UEM console to trust Content Gateway even when there is no valid SSL certificate..
        /// </summary>
        internal static string ContentGatewayIgnoreSSLErrorToolTip {
            get {
                return ResourceManager.GetString("ContentGatewayIgnoreSSLErrorToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There has been a change to the Content Gateway installation process. You can no longer download the Content Gateway installers directly from the WorkSpace ONE Console.
        ///
        ///Instead, you are redirected to the Workspace ONE Resource Portal to download the installer..
        /// </summary>
        internal static string ContentGatewayInstallationWarning {
            get {
                return ResourceManager.GetString("ContentGatewayInstallationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Your previous settings for Content Gateway have been migrated to Settings-&gt;Content-&gt;ContentGateway this Page.
        ///
        ///The Workspace ONE Content Gateway is an enterprise integration component that provides secure and effective access to corporate content from anywhere.
        ///
        ///When your employees access internal content from their mobile devices, via the Workspace ONE Content, the Content Gateway acts as a secure relay between the device and enterprise system.
        ///
        ///Please refer to the Workspace ONE Content Gateway [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ContentGatewayLanding {
            get {
                return ResourceManager.GetString("ContentGatewayLanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Your previous settings for Content Gateway have been migrated to Settings &gt; System &gt; Enterprise Integration &gt; {0}.
        ///
        ///The AirWatch Content Gateway is an enterprise integration component that provides secure and effective access to corporate content from anywhere.
        ///
        ///When your employees access internal content from their mobile devices via the Workspace ONE Content, the Content Gateway acts as a secure relay between the device and enterprise system.
        ///
        ///Please refer to the Workspace ONE Content Gateway  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ContentGatewayLandingNew {
            get {
                return ResourceManager.GetString("ContentGatewayLandingNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please upload a third party public SSL certificate for devices to trust Content Gateway (must be in &apos;.pfx&apos; format and contain your public and private key pairs)..
        /// </summary>
        internal static string ContentGatewayPublicSslCertificateTooltip {
            get {
                return ResourceManager.GetString("ContentGatewayPublicSslCertificateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port on which Content Gateway will listen when SSL offloading is enabled. In case of deployment mode including Relay endpoint, this port applies only to Relay server..
        /// </summary>
        internal static string ContentGatewayServerSSLPortTooltip {
            get {
                return ResourceManager.GetString("ContentGatewayServerSSLPortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Load balancer in front of Content Gateway will do the SSL offloading. In case of deployment mode including Relay end point, SSL offload applies only to Relay server..
        /// </summary>
        internal static string ContentGatewaySSLOffloadingTooltip {
            get {
                return ResourceManager.GetString("ContentGatewaySSLOffloadingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Lock Requested..
        /// </summary>
        internal static string ContentLockRequested {
            get {
                return ResourceManager.GetString("ContentLockRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Onboarding.
        /// </summary>
        internal static string ContentOnboarding {
            get {
                return ResourceManager.GetString("ContentOnboarding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COPE.
        /// </summary>
        internal static string COPE {
            get {
                return ResourceManager.GetString("COPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corporate Devices.
        /// </summary>
        internal static string CorporateDevices {
            get {
                return ResourceManager.GetString("CorporateDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Tag.
        /// </summary>
        internal static string CreateTag {
            get {
                return ResourceManager.GetString("CreateTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Workspace ONE Catalog tenant.
        /// </summary>
        internal static string CreateWSOneCatalogTenant {
            get {
                return ResourceManager.GetString("CreateWSOneCatalogTenant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to request a new cloud tenant of Workspace ONE Access.
        /// </summary>
        internal static string CreateWSOneCatalogTenantHelp {
            get {
                return ResourceManager.GetString("CreateWSOneCatalogTenantHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current device limit per Organization group.
        /// </summary>
        internal static string CurrentDeviceLimitPerOrganizationGroup {
            get {
                return ResourceManager.GetString("CurrentDeviceLimitPerOrganizationGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Attributes Sample.
        /// </summary>
        internal static string CustomAttributeSample {
            get {
                return ResourceManager.GetString("CustomAttributeSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting registry key based custom attributes that are configured by admins. Values are visible in the Device Details &gt; Custom Attributes section..
        /// </summary>
        internal static string CustomAttributeSampleInfo {
            get {
                return ResourceManager.GetString("CustomAttributeSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Attributes Samples.
        /// </summary>
        internal static string CustomAttributeSampleInMinutes {
            get {
                return ResourceManager.GetString("CustomAttributeSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Attributes Samples Time Mode.
        /// </summary>
        internal static string CustomAttributeSampleTimeMode {
            get {
                return ResourceManager.GetString("CustomAttributeSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Experience Improvement Program.
        /// </summary>
        internal static string CustomerExperienceImprovementProgram {
            get {
                return ResourceManager.GetString("CustomerExperienceImprovementProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Services can only be enabled at the customer or partner Organization Group level..
        /// </summary>
        internal static string CustomerOrPartnerOgOnlyError {
            get {
                return ResourceManager.GetString("CustomerOrPartnerOgOnlyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UAG v3.9+ required.
        /// </summary>
        internal static string CustomGatewaySettingsInfoMessage {
            get {
                return ResourceManager.GetString("CustomGatewaySettingsInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the Custom settings has configured with empty key or value..
        /// </summary>
        internal static string CustomKeyValueShouldNotBeEmpty {
            get {
                return ResourceManager.GetString("CustomKeyValueShouldNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Custom Managed Apple ID Format.
        /// </summary>
        internal static string CustomManagedAppleID {
            get {
                return ResourceManager.GetString("CustomManagedAppleID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This image depicts the basic elements of the onboarding experience, not the actual view..
        /// </summary>
        internal static string CustomOnboardingImagePreviewHelp {
            get {
                return ResourceManager.GetString("CustomOnboardingImagePreviewHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body Text.
        /// </summary>
        internal static string CustomOnboardingMessage {
            get {
                return ResourceManager.GetString("CustomOnboardingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max 500 characters. Use the following format to insert a link: [linktext](http://www.exampleurl.com)..
        /// </summary>
        internal static string CustomOnboardingMessageHelp {
            get {
                return ResourceManager.GetString("CustomOnboardingMessageHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome Header.
        /// </summary>
        internal static string CustomOnboardingUserName {
            get {
                return ResourceManager.GetString("CustomOnboardingUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome Subheader.
        /// </summary>
        internal static string CustomOnboardingWelcomeText {
            get {
                return ResourceManager.GetString("CustomOnboardingWelcomeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Custom Settings.
        /// </summary>
        internal static string CustomSettingsCount {
            get {
                return ResourceManager.GetString("CustomSettingsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom setting validation failed for following custom keys {0}. Please correct the values entered..
        /// </summary>
        internal static string CustomSettingValueTypeMismatch {
            get {
                return ResourceManager.GetString("CustomSettingValueTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The limit imposed on an OG for a 24-hour interval..
        /// </summary>
        internal static string DailyQuotaToolTip {
            get {
                return ResourceManager.GetString("DailyQuotaToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daily Quota Usage.
        /// </summary>
        internal static string DailyQuotaUsage {
            get {
                return ResourceManager.GetString("DailyQuotaUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of API calls used out of the daily quota. This information is available only if Memcached is enabled..
        /// </summary>
        internal static string DailyQuotaUsageToolTip {
            get {
                return ResourceManager.GetString("DailyQuotaUsageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting device GPS data, Push Channel health status and the general health of the Windows Store agent..
        /// </summary>
        internal static string DataSampleIntervalModernAgentInfo {
            get {
                return ResourceManager.GetString("DataSampleIntervalModernAgentInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting Hub health data..
        /// </summary>
        internal static string DataSampleIntervalProtectionAgentInfo {
            get {
                return ResourceManager.GetString("DataSampleIntervalProtectionAgentInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days After Which PPKGs Will Be Deleted.
        /// </summary>
        internal static string DaysAfterWhichPPKGsWillBeDeleted {
            get {
                return ResourceManager.GetString("DaysAfterWhichPPKGsWillBeDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days After Which PPKGs Will Be Deleted Help.
        /// </summary>
        internal static string DaysAfterWhichPPKGsWillBeDeletedHelp {
            get {
                return ResourceManager.GetString("DaysAfterWhichPPKGsWillBeDeletedHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days Inactive.
        /// </summary>
        internal static string DaysInactive {
            get {
                return ResourceManager.GetString("DaysInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Driven UI Configuration Job.
        /// </summary>
        internal static string DduiConfigurationUpdateJob {
            get {
                return ResourceManager.GetString("DduiConfigurationUpdateJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APNs client has been deactivated.
        /// </summary>
        internal static string DeactivatedApnsClient {
            get {
                return ResourceManager.GetString("DeactivatedApnsClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default action for inactive users.
        /// </summary>
        internal static string DefaultActionForInactiveUsersOldValue {
            get {
                return ResourceManager.GetString("DefaultActionForInactiveUsersOldValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default AWCM + API traffic via Server Traffic Rules.
        /// </summary>
        internal static string DefaultAWCMTraffic {
            get {
                return ResourceManager.GetString("DefaultAWCMTraffic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to communicate with Workspace ONE UEM APIs and AWCM per Server Traffic Rules..
        /// </summary>
        internal static string DefaultAWCMTrafficTooltip {
            get {
                return ResourceManager.GetString("DefaultAWCMTrafficTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Email by Default.
        /// </summary>
        internal static string DefaultBlockEmail {
            get {
                return ResourceManager.GetString("DefaultBlockEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default role.
        /// </summary>
        internal static string DefaultRoleOldValue {
            get {
                return ResourceManager.GetString("DefaultRoleOldValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Staging User Not Authorized.
        /// </summary>
        internal static string DefaultStagingUserNotAuthorized {
            get {
                return ResourceManager.GetString("DefaultStagingUserNotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All Factory PPKGs Immediately.
        /// </summary>
        internal static string DeleteAllFactoryPPKGsImmediately {
            get {
                return ResourceManager.GetString("DeleteAllFactoryPPKGsImmediately", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string DeleteAllFactoryPPKGsImmediatelyButton {
            get {
                return ResourceManager.GetString("DeleteAllFactoryPPKGsImmediatelyButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Delete All Factory PPKGs.
        /// </summary>
        internal static string DeleteAllFactoryPPKGsImmediatelyFailed {
            get {
                return ResourceManager.GetString("DeleteAllFactoryPPKGsImmediatelyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All completed Factory PPKGs will be deleted.
        /// </summary>
        internal static string DeleteAllFactoryPPKGsImmediatelyOk {
            get {
                return ResourceManager.GetString("DeleteAllFactoryPPKGsImmediatelyOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the selected Certificate Authority?.
        /// </summary>
        internal static string DeleteCAConfirmMessage {
            get {
                return ResourceManager.GetString("DeleteCAConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected CA was deleted successfully..
        /// </summary>
        internal static string DeleteCASuccessfulMessage {
            get {
                return ResourceManager.GetString("DeleteCASuccessfulMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Certificate Authority.
        /// </summary>
        internal static string DeleteCertificateAuthority {
            get {
                return ResourceManager.GetString("DeleteCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete REST API Key.
        /// </summary>
        internal static string DeleteRestApiKey {
            get {
                return ResourceManager.GetString("DeleteRestApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After deleting a REST API key, all calls made using it will fail.
        ///
        ///You will not be able to generate the same REST API key again. A new one will be created when requested..
        /// </summary>
        internal static string DeleteRestApiKeyDescription {
            get {
                return ResourceManager.GetString("DeleteRestApiKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete REST API Key.
        /// </summary>
        internal static string DeleteRestApiRestricted {
            get {
                return ResourceManager.GetString("DeleteRestApiRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Settings.
        /// </summary>
        internal static string DeleteSettings {
            get {
                return ResourceManager.GetString("DeleteSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dell Integration.
        /// </summary>
        internal static string DellIntegration {
            get {
                return ResourceManager.GetString("DellIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If Account Setup is not skipped, this option defines what type of account the End-User will be allowed to create at the end of Setup Assistant. If Standard is chosen, an Admin account must be defined in the Admin Account Creation section below to be created automatically during DEP Enrollment..
        /// </summary>
        internal static string DEPAccountType {
            get {
                return ResourceManager.GetString("DEPAccountType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment Details.
        /// </summary>
        internal static string DeploymentDetails {
            get {
                return ResourceManager.GetString("DeploymentDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DEP Policy Disabled.
        /// </summary>
        internal static string DEPPolicyDisabled_Description {
            get {
                return ResourceManager.GetString("DEPPolicyDisabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DEP token appears to have expired. Please renew the token in Apple Business Manager portal..
        /// </summary>
        internal static string DepTokenExpired {
            get {
                return ResourceManager.GetString("DepTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DEP token appears to have been deleted or the system is unable to request the required information. Please check the status of the token in Apple Business Manager portal..
        /// </summary>
        internal static string DepTokenForbidden {
            get {
                return ResourceManager.GetString("DepTokenForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please login to Apple Business Manager and review the updated Terms and Conditions..
        /// </summary>
        internal static string DepTokenNewTermsNotAccepted {
            get {
                return ResourceManager.GetString("DepTokenNewTermsNotAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DEP token appears to have been revoked. Please renew the token in Apple Business Manager portal..
        /// </summary>
        internal static string DepTokenRevoked {
            get {
                return ResourceManager.GetString("DepTokenRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designated Requirement represents the internal requirements of the signed code..
        /// </summary>
        internal static string DesignatedRequirementDescription {
            get {
                return ResourceManager.GetString("DesignatedRequirementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desired State Management.
        /// </summary>
        internal static string DesiredStateManagement {
            get {
                return ResourceManager.GetString("DesiredStateManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Batch Size.
        /// </summary>
        internal static string DeviceBatchSize_Description {
            get {
                return ResourceManager.GetString("DeviceBatchSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting device data like OS information, WiFi Mac Address, Processor Architecture, manufacturer, model etc..
        /// </summary>
        internal static string DeviceDetailsSampleInfo {
            get {
                return ResourceManager.GetString("DeviceDetailsSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Details Sample.
        /// </summary>
        internal static string DeviceDetailsSampleInMinutes {
            get {
                return ResourceManager.GetString("DeviceDetailsSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Details Sample must be between 2 hours and 30 days (inclusive)..
        /// </summary>
        internal static string DeviceDetailsSampleIntervalErrorMessage {
            get {
                return ResourceManager.GetString("DeviceDetailsSampleIntervalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Details Sample Time Mode.
        /// </summary>
        internal static string DeviceDetailsSampleTimeMode {
            get {
                return ResourceManager.GetString("DeviceDetailsSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Settings &gt; Devices &amp; Users &gt; General &gt; Enrollment &gt; Grouping.
        /// </summary>
        internal static string DeviceEnrollmentGroupingTab {
            get {
                return ResourceManager.GetString("DeviceEnrollmentGroupingTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Information Sample must be between 2 hours and 30 days (inclusive)..
        /// </summary>
        internal static string DeviceInformationSampleIntervalErrorMessage {
            get {
                return ResourceManager.GetString("DeviceInformationSampleIntervalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Policy Job Auditing.
        /// </summary>
        internal static string DevicePolicyJobAuditing_Description {
            get {
                return ResourceManager.GetString("DevicePolicyJobAuditing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Reprocess.
        /// </summary>
        internal static string DeviceReprocess_Description {
            get {
                return ResourceManager.GetString("DeviceReprocess_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices Gateway.
        /// </summary>
        internal static string DevicesGateway {
            get {
                return ResourceManager.GetString("DevicesGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices Gateway URL.
        /// </summary>
        internal static string DevicesGatewayUrl {
            get {
                return ResourceManager.GetString("DevicesGatewayUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices or Users.
        /// </summary>
        internal static string DevicesOrUsers {
            get {
                return ResourceManager.GetString("DevicesOrUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rule do not exist..
        /// </summary>
        internal static string DeviceTrafficRuleDoesNotExist {
            get {
                return ResourceManager.GetString("DeviceTrafficRuleDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will cause newly installed profiles to receive these settings. Existing devices will not be impacted. To update existing devices, please add a version to the desired profile and re-publish..
        /// </summary>
        internal static string DeviceTrafficRuleSaveConfirmMessage {
            get {
                return ResourceManager.GetString("DeviceTrafficRuleSaveConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will update and re-publish all existing Tunnel profiles for all platforms at this Organization Group..
        /// </summary>
        internal static string DeviceTrafficRuleSavePublishConfirmMessage {
            get {
                return ResourceManager.GetString("DeviceTrafficRuleSavePublishConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rule Sets.
        /// </summary>
        internal static string DeviceTrafficRuleSets {
            get {
                return ResourceManager.GetString("DeviceTrafficRuleSets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rules save failed..
        /// </summary>
        internal static string DeviceTrafficRulesSaveFailed {
            get {
                return ResourceManager.GetString("DeviceTrafficRulesSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no application mapping present for device traffic rule..
        /// </summary>
        internal static string DeviceTrafficRuleWithoutAppMapping {
            get {
                return ResourceManager.GetString("DeviceTrafficRuleWithoutAppMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Updates URL.
        /// </summary>
        internal static string DeviceUpdatesUrl {
            get {
                return ResourceManager.GetString("DeviceUpdatesUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Health Attestation Server URL..
        /// </summary>
        internal static string DhasOnPremServerUrl {
            get {
                return ResourceManager.GetString("DhasOnPremServerUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostics.
        /// </summary>
        internal static string Diagnostics {
            get {
                return ResourceManager.GetString("Diagnostics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure AD Integration.
        /// </summary>
        internal static string DirectoryServicesAzureADIntegration {
            get {
                return ResourceManager.GetString("DirectoryServicesAzureADIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Sync Concurrent Semaphore Request Initial Limit.
        /// </summary>
        internal static string DirectorySyncConcurrentSemaphoreRequestInitialLimit {
            get {
                return ResourceManager.GetString("DirectorySyncConcurrentSemaphoreRequestInitialLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Sync Concurrent Semaphore Request Maximum Limit.
        /// </summary>
        internal static string DirectorySyncConcurrentSemaphoreRequestMaxLimit {
            get {
                return ResourceManager.GetString("DirectorySyncConcurrentSemaphoreRequestMaxLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this option to disable resource (apps, products) downloads from being routed through CDN for devices managed at this Organization Group and its child Organization Groups..
        /// </summary>
        internal static string DisableCDNWarningMessage {
            get {
                return ResourceManager.GetString("DisableCDNWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Gateway/Tunnel Configuration is disabled in console.
        /// </summary>
        internal static string DisabledGatewayConfiguration {
            get {
                return ResourceManager.GetString("DisabledGatewayConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Active Directory.
        /// </summary>
        internal static string DisableDirectoryInVidmConfiguration {
            get {
                return ResourceManager.GetString("DisableDirectoryInVidmConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to perform the Disable Active Directory action. Please enter the Security PIN to proceed. Note that this action cannot be undone..
        /// </summary>
        internal static string DisableDirectoryInVidmConfigurationDescription {
            get {
                return ResourceManager.GetString("DisableDirectoryInVidmConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to perform the Disable Active Directory action. Note that this action cannot be undone..
        /// </summary>
        internal static string DisableDirectoryInVidmWarning {
            get {
                return ResourceManager.GetString("DisableDirectoryInVidmWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled Status Attribute Type.
        /// </summary>
        internal static string DisabledStatusAttributeType {
            get {
                return ResourceManager.GetString("DisabledStatusAttributeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Relay Server Cache.
        /// </summary>
        internal static string DisableRelayServerCache_Description {
            get {
                return ResourceManager.GetString("DisableRelayServerCache_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Unenroll Option in Intelligent Hub.
        /// </summary>
        internal static string DisableUnEnrollOptionInAgent {
            get {
                return ResourceManager.GetString("DisableUnEnrollOptionInAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By enabling this setting, users will be prevented from unenrolling their device from within the Intelligent Hub app. This setting is ignored on devices enrolling through Apple Business Manager.
        /// </summary>
        internal static string DisableUnenrollOptionToolTip {
            get {
                return ResourceManager.GetString("DisableUnenrollOptionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Encryption Sample.
        /// </summary>
        internal static string DiskEncryptionSample {
            get {
                return ResourceManager.GetString("DiskEncryptionSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting the disk encryption status on a device and report on the protection level..
        /// </summary>
        internal static string DiskEncryptionSampleInfo {
            get {
                return ResourceManager.GetString("DiskEncryptionSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Encryption Sample.
        /// </summary>
        internal static string DiskEncryptionSampleInMinutes {
            get {
                return ResourceManager.GetString("DiskEncryptionSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disk Encryption Sample Time Mode.
        /// </summary>
        internal static string DiskEncryptionSampleTimeMode {
            get {
                return ResourceManager.GetString("DiskEncryptionSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Authentication Screen Message.
        /// </summary>
        internal static string DisplayAuthenticationScreenMessage {
            get {
                return ResourceManager.GetString("DisplayAuthenticationScreenMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays authentication hint on the Hub username and password screen..
        /// </summary>
        internal static string DisplayAuthenticationScreenMessageTooltip {
            get {
                return ResourceManager.GetString("DisplayAuthenticationScreenMessageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Offline Provisioning.
        /// </summary>
        internal static string DisplayOfflineProvisioning_Description {
            get {
                return ResourceManager.GetString("DisplayOfflineProvisioning_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distribution Server.
        /// </summary>
        internal static string DistributionServer_Description {
            get {
                return ResourceManager.GetString("DistributionServer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max 15 characters.
        /// </summary>
        internal static string DomainJoinComputerNameMaxLength {
            get {
                return ResourceManager.GetString("DomainJoinComputerNameMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer name is a required field.
        /// </summary>
        internal static string DomainJoinDeviceNameFormatErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinDeviceNameFormatErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a unique 15-character name for the device. For help generating a unique name, you can use %SERIAL%, which includes a hardware-specific serial number, or you can use %RAND:[#]%, which generates random characters of # length. To minimize the possibility of creating duplicate Computer Names when using Random Number generation, the random number length [%RAND:[#]%] must be greater than or equal to 7. 
        ///      
        ///      Example:
        ///            Company%SERIAL%
        ///            CMP%RAND:10%.
        /// </summary>
        internal static string DomainJoinDeviceNameFormatHelpText {
            get {
                return ResourceManager.GetString("DomainJoinDeviceNameFormatHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer Name.
        /// </summary>
        internal static string DomainJoinDeviceNameFormatLabel {
            get {
                return ResourceManager.GetString("DomainJoinDeviceNameFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer name format length is more than 15 characters.
        /// </summary>
        internal static string DomainJoinDeviceNameFormatLengthErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinDeviceNameFormatLengthErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computer name is not as per required format.
        /// </summary>
        internal static string DomainJoinDeviceNameFormatMatchErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinDeviceNameFormatMatchErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Unit distinguished name is required field.
        /// </summary>
        internal static string DomainJoinOrganizationUnitErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinOrganizationUnitErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Example:
        ///            OU=Sales,DC=Company,DC=Com.
        /// </summary>
        internal static string DomainJoinOrganizationUnitHelpText {
            get {
                return ResourceManager.GetString("DomainJoinOrganizationUnitHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Unit Distinguished Name.
        /// </summary>
        internal static string DomainJoinOrganizationUnitLabel {
            get {
                return ResourceManager.GetString("DomainJoinOrganizationUnitLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Unit distinguished name is not as per required format.
        /// </summary>
        internal static string DomainJoinOUFormatMatchErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinOUFormatMatchErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain Controller Server not found in Directory settings.
        /// </summary>
        internal static string DomainJoinOUNotFoundErrorMessage {
            get {
                return ResourceManager.GetString("DomainJoinOUNotFoundErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Configuration XML.
        /// </summary>
        internal static string DownloadConfigXML {
            get {
                return ResourceManager.GetString("DownloadConfigXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download &amp; Install macOS Intelligent Hub Post Enrollment.
        /// </summary>
        internal static string DownloadMacAgentPostEnrollment {
            get {
                return ResourceManager.GetString("DownloadMacAgentPostEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download RFS Configuration.
        /// </summary>
        internal static string DownloadRemoteFileStorageConfiguration {
            get {
                return ResourceManager.GetString("DownloadRemoteFileStorageConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download RFS Installer.
        /// </summary>
        internal static string DownloadRfsInstaller {
            get {
                return ResourceManager.GetString("DownloadRfsInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Unified Access Gateway (Hyper-v).
        /// </summary>
        internal static string DownloadUagHyperV {
            get {
                return ResourceManager.GetString("DownloadUagHyperV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download vSEC Certificate.
        /// </summary>
        internal static string DownloadVSECCertificate {
            get {
                return ResourceManager.GetString("DownloadVSECCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download XML.
        /// </summary>
        internal static string DownloadXML {
            get {
                return ResourceManager.GetString("DownloadXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred accessing the downstream API/Microservice..
        /// </summary>
        internal static string DownstreamApiAccessError {
            get {
                return ResourceManager.GetString("DownstreamApiAccessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downstream API resource returned bad request.
        /// </summary>
        internal static string DownstreamApiBadRequestError {
            get {
                return ResourceManager.GetString("DownstreamApiBadRequestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downstream API resource returned forbidden error.
        /// </summary>
        internal static string DownstreamApiResourceForebiddenError {
            get {
                return ResourceManager.GetString("DownstreamApiResourceForebiddenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete this configuration?.
        /// </summary>
        internal static string DoYouWantToDeleteTunnelConfig {
            get {
                return ResourceManager.GetString("DoYouWantToDeleteTunnelConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop Ship Provisioning is currently available for Windows 10 and later.
        /// </summary>
        internal static string DropShipProvisioningDescription {
            get {
                return ResourceManager.GetString("DropShipProvisioningDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide ready-to-work devices to your users, and use the power of tags, smart groups, and payloads to provide the right apps and configurations out of the box. Drop Ship Provisioning is available for Windows 10 and later.
        /// </summary>
        internal static string DropShipProvisioningIntroduction {
            get {
                return ResourceManager.GetString("DropShipProvisioningIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introducing Drop Ship Provisioning.
        /// </summary>
        internal static string DropShipProvisioningTitle {
            get {
                return ResourceManager.GetString("DropShipProvisioningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to configure SCIM Provisioning?.
        /// </summary>
        internal static string DsDeploymentInfoTextScim {
            get {
                return ResourceManager.GetString("DsDeploymentInfoTextScim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rule&apos;s Application do not exist..
        /// </summary>
        internal static string DTRApplicationIdDoesNotExist {
            get {
                return ResourceManager.GetString("DTRApplicationIdDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rule set assignment name is mandatory..
        /// </summary>
        internal static string DtrAssignmentNameMissing {
            get {
                return ResourceManager.GetString("DtrAssignmentNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding Device Traffic Rules requires apps and profiles to be managed at the current Organization Group..
        /// </summary>
        internal static string DTROverrideToolTip {
            get {
                return ResourceManager.GetString("DTROverrideToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of rules.
        /// </summary>
        internal static string DTRRulesCount {
            get {
                return ResourceManager.GetString("DTRRulesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save while referencing apps from parent Organization Groups. Please use apps defined at or below this Organization Group to continue..
        /// </summary>
        internal static string DTRSaveErrorMessageOnParentOGAppsReference {
            get {
                return ResourceManager.GetString("DTRSaveErrorMessageOnParentOGAppsReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Traffic Rule destinations cannot contain special characters..
        /// </summary>
        internal static string DtrSpecialCharactersNotAllowed {
            get {
                return ResourceManager.GetString("DtrSpecialCharactersNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success, Device Traffic Rules were saved.
        /// </summary>
        internal static string DTRSuccessMsg {
            get {
                return ResourceManager.GetString("DTRSuccessMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to configure Duplicate Custom setting key..
        /// </summary>
        internal static string DuplicateCustomKeysExists {
            get {
                return ResourceManager.GetString("DuplicateCustomKeysExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot configure DTR with duplicate assignment name. Please use a different assignment name..
        /// </summary>
        internal static string DuplicateDtrAssignmentNameExists {
            get {
                return ResourceManager.GetString("DuplicateDtrAssignmentNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        internal static string DuplicateDTRSet {
            get {
                return ResourceManager.GetString("DuplicateDTRSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit application details for setting application traffic policies..
        /// </summary>
        internal static string EditApplicationDescription {
            get {
                return ResourceManager.GetString("EditApplicationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing this profile will apply the new settings to all devices currently assigned to this profile. The profile settings only take effect on devices once they go through the initial Setup Assistant on the device..
        /// </summary>
        internal static string EditProfileMessage {
            get {
                return ResourceManager.GetString("EditProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Workspace ONE Intelligent Hub configuration..
        /// </summary>
        internal static string EditWSOneHubConfiguration {
            get {
                return ResourceManager.GetString("EditWSOneHubConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to edit Workspace ONE Intelligent Hub configuration..
        /// </summary>
        internal static string EditWSOneHubConfigurationHelp {
            get {
                return ResourceManager.GetString("EditWSOneHubConfigurationHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Education Shared iPads.
        /// </summary>
        internal static string EducationSharediPads {
            get {
                return ResourceManager.GetString("EducationSharediPads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E-FOTA.
        /// </summary>
        internal static string EFOTA {
            get {
                return ResourceManager.GetString("EFOTA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E-FOTA.
        /// </summary>
        internal static string EFOTAHelp {
            get {
                return ResourceManager.GetString("EFOTAHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users will be prompted to accept the firmware update before it is installed on their device. Would you like to proceed?.
        /// </summary>
        internal static string EfotaOnDemandPublishConfirmMessage {
            get {
                return ResourceManager.GetString("EfotaOnDemandPublishConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Workspace ONE Secure Email Gateway (SEG) helps protect your email infrastructure and enables the Mobile Email Management (MEM) functionality. Install SEG alongside your existing email server to relay all email traffic to Workspace ONE enrolled devices..
        /// </summary>
        internal static string EmailConfigurationDescription {
            get {
                return ResourceManager.GetString("EmailConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds APNs support to your deployment to allow to provide employees with quick and consistent notifications about new items..
        /// </summary>
        internal static string EmailEmailNotificationDescription {
            get {
                return ResourceManager.GetString("EmailEmailNotificationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Agent Installation Complete Notification.
        /// </summary>
        internal static string EnableAgentInstallationCompleteNotification {
            get {
                return ResourceManager.GetString("EnableAgentInstallationCompleteNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Inactivity.
        /// </summary>
        internal static string EnableAppInactivitySettings {
            get {
                return ResourceManager.GetString("EnableAppInactivitySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, application data will be wiped after the number of days of inactivity specified for this rule has elapsed..
        /// </summary>
        internal static string EnableAppInactivitySettingsTooltip {
            get {
                return ResourceManager.GetString("EnableAppInactivitySettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Certificate Revocation Based On Sampling.
        /// </summary>
        internal static string EnableCertificateRevocationBasedOnSampling {
            get {
                return ResourceManager.GetString("EnableCertificateRevocationBasedOnSampling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables automatic certificate revocation when devices are unenrolled, the specific profile is removed, or the device is deleted from Workspace ONE..
        /// </summary>
        internal static string EnableCertificateRevocationTooltip {
            get {
                return ResourceManager.GetString("EnableCertificateRevocationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This enables Knox Containers for Android Legacy enrollment. If Android EMM Registration is configured, this setting enables Knox Play for Work configuration for Samsung devices..
        /// </summary>
        internal static string EnableContainersInfo {
            get {
                return ResourceManager.GetString("EnableContainersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable ‘Continue Anyway’ Button on OOBE Status Tracking Page.
        /// </summary>
        internal static string EnableContinueDuringWindowsOobeProgress {
            get {
                return ResourceManager.GetString("EnableContinueDuringWindowsOobeProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this option will allow end users to skip the OOBE tracking page and get to their desktops by clicking on ‘Continue Anyway’. The provisioning will continue in the background. This setting can be disabled if critical policies must be applied before a user can access their desktop..
        /// </summary>
        internal static string EnableContinueDuringWindowsOobeProgressToolTip {
            get {
                return ResourceManager.GetString("EnableContinueDuringWindowsOobeProgressToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Enrollment User Password Settings.
        /// </summary>
        internal static string EnableEnrollmentUserPasswordSettings_Description {
            get {
                return ResourceManager.GetString("EnableEnrollmentUserPasswordSettings_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Failed.
        /// </summary>
        internal static string EnableFailed {
            get {
                return ResourceManager.GetString("EnableFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can take advantage of Hub catalog features without setting up connectors or syncing Active Directory. To launch Hub Services, enter your hosted Workspace ONE Access tenant URL, which you can find in the welcome email that you should have received. Your VMware representative also can provide you with this information..
        /// </summary>
        internal static string EnableHubServicesDescription {
            get {
                return ResourceManager.GetString("EnableHubServicesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable In-Product Support.
        /// </summary>
        internal static string EnableInProductSupport {
            get {
                return ResourceManager.GetString("EnableInProductSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Proxy is required for Enabling Kerberos but has not been configured. To configure it, go to System &gt; Enterprise Integration &gt; VMWare Tunnel Proxy.
        /// </summary>
        internal static string EnableMagInSystemConfiguration {
            get {
                return ResourceManager.GetString("EnableMagInSystemConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable NSX Integration.
        /// </summary>
        internal static string EnableNsxIntegration {
            get {
                return ResourceManager.GetString("EnableNsxIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables NSX integration for the current configuration..
        /// </summary>
        internal static string EnableNsxIntegrationTooltip {
            get {
                return ResourceManager.GetString("EnableNsxIntegrationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Product Hashing.
        /// </summary>
        internal static string EnableProductHashing_Description {
            get {
                return ResourceManager.GetString("EnableProductHashing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register Samsung E-FOTA.
        /// </summary>
        internal static string EnableSamsungEfota {
            get {
                return ResourceManager.GetString("EnableSamsungEfota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register with the Samsung E-FOTA service and prevent consumer firmware updates.
        /// </summary>
        internal static string EnableSamsungEfotaTooltip {
            get {
                return ResourceManager.GetString("EnableSamsungEfotaTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel has not been defined at this Organization Group. To configure Tunnel for application tunneling, go to System &gt; Enterprise Integration &gt; VMWare Tunnel.
        /// </summary>
        internal static string EnableVMwareTunnelInSystemConfiguration {
            get {
                return ResourceManager.GetString("EnableVMwareTunnelInSystemConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Entity Profiles.
        /// </summary>
        internal static string EndEntityProfile {
            get {
                return ResourceManager.GetString("EndEntityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint.
        /// </summary>
        internal static string Endpoint {
            get {
                return ResourceManager.GetString("Endpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoints.
        /// </summary>
        internal static string Endpoints {
            get {
                return ResourceManager.GetString("Endpoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforce Passcode Policy.
        /// </summary>
        internal static string EnforcePasscodePolicy_Description {
            get {
                return ResourceManager.GetString("EnforcePasscodePolicy_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced Domain Resolution.
        /// </summary>
        internal static string EnhancedDomainResolution {
            get {
                return ResourceManager.GetString("EnhancedDomainResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled then domain resolution is based on the destinations defined in device traffic rule sets..
        /// </summary>
        internal static string EnhancedDomainResolutionTip {
            get {
                return ResourceManager.GetString("EnhancedDomainResolutionTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enrollment group ID assignment type.
        /// </summary>
        internal static string EnrollmentGroupIdAssignmentTypeOldValue {
            get {
                return ResourceManager.GetString("EnrollmentGroupIdAssignmentTypeOldValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory user group role mapping should be assigned after saving..
        /// </summary>
        internal static string EnrollmentGroupIDDirectoryUserGroupSaveWarning {
            get {
                return ResourceManager.GetString("EnrollmentGroupIDDirectoryUserGroupSaveWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a name or category.
        /// </summary>
        internal static string EnterNameOrCategory {
            get {
                return ResourceManager.GetString("EnterNameOrCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Apps.
        /// </summary>
        internal static string EnterpriseApps {
            get {
                return ResourceManager.GetString("EnterpriseApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise CA.
        /// </summary>
        internal static string EnterpriseCA {
            get {
                return ResourceManager.GetString("EnterpriseCA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel is configured with Enterprise CA for Client Authentication, which is not supported..
        /// </summary>
        internal static string EnterpriseCANotSupportedWarning {
            get {
                return ResourceManager.GetString("EnterpriseCANotSupportedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Certificate Authority.
        /// </summary>
        internal static string EnterpriseCertificateAuthority {
            get {
                return ResourceManager.GetString("EnterpriseCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide directory-based account access by integrating your organization&apos;s existing directory services, such as Active Directory, Lotus Domino, and Novell e-Directory. Directory-based account access allows employees to authenticate with Workspace ONE apps and enroll their devices using their existing directory service credentials..
        /// </summary>
        internal static string EnterpriseIntegrationDirectoryServicesDescription {
            get {
                return ResourceManager.GetString("EnterpriseIntegrationDirectoryServicesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send emails from Workspace ONE to administrators or employees&apos; devices using your organization&apos;s email server..
        /// </summary>
        internal static string EnterpriseIntegrationEmailSMTPDescription {
            get {
                return ResourceManager.GetString("EnterpriseIntegrationEmailSMTPDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel allows you to securely deploy per-app enterprise access across all your employees&apos; devices. Built on TLS 1.2 with certificate pinning and authentication for optimum security, Tunnel lets you easily define granular traffic policies specific to each application, assign per-app policies tailored to individual use cases, deliver zero-touch, on-demand experiences to employees and provide easy on-boarding experiences with zero downtime and maintenance..
        /// </summary>
        internal static string EnterpriseIntegrationMagAWTDescription {
            get {
                return ResourceManager.GetString("EnterpriseIntegrationMagAWTDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send and receive SMS text messages to employees&apos; mobile devices to notify them about important announcements such as device activation. An account with a supported SMS provider is required..
        /// </summary>
        internal static string EnterpriseIntegrationSMSDescription {
            get {
                return ResourceManager.GetString("EnterpriseIntegrationSMSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel Proxy provides a secure and effective method for SDK enabled applications to access corporate resources. VMware Tunnel authenticates and encrypts traffic from individual applications on compliant devices to the back-end system they are trying to reach..
        /// </summary>
        internal static string EnterpriseIntegrationTunnelProxyDescription {
            get {
                return ResourceManager.GetString("EnterpriseIntegrationTunnelProxyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Reset Rejected.
        /// </summary>
        internal static string EnterpriseResetRejected {
            get {
                return ResourceManager.GetString("EnterpriseResetRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Workspace ONE Access URL here.
        /// </summary>
        internal static string EnterVmwareIdentityManagerUrlHere {
            get {
                return ResourceManager.GetString("EnterVmwareIdentityManagerUrlHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entitlement Service.
        /// </summary>
        internal static string EntitlementService {
            get {
                return ResourceManager.GetString("EntitlementService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when syncing a child Organization Group with the OEM Provisioning Service..
        /// </summary>
        internal static string ErrorInChildOgOemProvisioningServiceHostRegistrySync {
            get {
                return ResourceManager.GetString("ErrorInChildOgOemProvisioningServiceHostRegistrySync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel..
        /// </summary>
        internal static string ErrorSslConnection {
            get {
                return ResourceManager.GetString("ErrorSslConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while processing the {0} data.
        /// </summary>
        internal static string ErrorWhileProcessingTheArg {
            get {
                return ResourceManager.GetString("ErrorWhileProcessingTheArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred while updating the auto-generated API keys.
        /// </summary>
        internal static string ErrorWhileUpdatingAutoGeneratedKeys {
            get {
                return ResourceManager.GetString("ErrorWhileUpdatingAutoGeneratedKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Everything within reach.
        /// </summary>
        internal static string EverythingWithinReach {
            get {
                return ResourceManager.GetString("EverythingWithinReach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More intuitive, tag-based search functionality makes finding the components you need fast and easy. Search by feature, category, use case and keyword so you can rapidly narrow down what you’re looking for along with links to helpful set-up guides and more..
        /// </summary>
        internal static string EverythingWithinReachDescription {
            get {
                return ResourceManager.GetString("EverythingWithinReachDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided certificate has expired.
        /// </summary>
        internal static string ExpiredCertificate {
            get {
                return ResourceManager.GetString("ExpiredCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export XML.
        /// </summary>
        internal static string ExportXml {
            get {
                return ResourceManager.GetString("ExportXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Workspace ONE Access and Access Management settings to provide employees with seamless access to a comprehensive unified app catalog including web, native and virtual apps..
        /// </summary>
        internal static string ExternalDirectoryIntegrationDescription {
            get {
                return ResourceManager.GetString("ExternalDirectoryIntegrationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning.
        /// </summary>
        internal static string FactoryProvisioning {
            get {
                return ResourceManager.GetString("FactoryProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning Service URL.
        /// </summary>
        internal static string FactoryProvisioningUrl {
            get {
                return ResourceManager.GetString("FactoryProvisioningUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning URL.
        /// </summary>
        internal static string FactoryProvisioningUrl_Description {
            get {
                return ResourceManager.GetString("FactoryProvisioningUrl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to accept Workspace ONE Access end user license agreement..
        /// </summary>
        internal static string FailedToAccepVidmEula {
            get {
                return ResourceManager.GetString("FailedToAccepVidmEula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to generate Tunnel Proxy Config..
        /// </summary>
        internal static string FailedToGenerateMagConfig {
            get {
                return ResourceManager.GetString("FailedToGenerateMagConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to generate Tunnel Config..
        /// </summary>
        internal static string FailedToGenerateTunnelConfig {
            get {
                return ResourceManager.GetString("FailedToGenerateTunnelConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to authenticate with Workspace ONE Access..
        /// </summary>
        internal static string FailedToGetSessionToken {
            get {
                return ResourceManager.GetString("FailedToGetSessionToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to map local domains to Workspace ONE Access. Please check the connection and try again..
        /// </summary>
        internal static string FailedToMapLocalDomainsToVidm {
            get {
                return ResourceManager.GetString("FailedToMapLocalDomainsToVidm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Ping VMware Enterprise System Connector.
        /// </summary>
        internal static string FailedtoPingVMESC {
            get {
                return ResourceManager.GetString("FailedtoPingVMESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Featured Applications.
        /// </summary>
        internal static string FeaturedApplications {
            get {
                return ResourceManager.GetString("FeaturedApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is currently not available..
        /// </summary>
        internal static string FeatureNotAvailable {
            get {
                return ResourceManager.GetString("FeatureNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Settings.
        /// </summary>
        internal static string FieldsetConnectionSettings {
            get {
                return ResourceManager.GetString("FieldsetConnectionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Settings.
        /// </summary>
        internal static string FieldsetServerSettings {
            get {
                return ResourceManager.GetString("FieldsetServerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Extensions.
        /// </summary>
        internal static string FileExtensions {
            get {
                return ResourceManager.GetString("FileExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Failed: Work with your System Administrator to get details from the logs..
        /// </summary>
        internal static string FilePathTestFailed {
            get {
                return ResourceManager.GetString("FilePathTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to File Storage Successful..
        /// </summary>
        internal static string FilePathTestSuccess {
            get {
                return ResourceManager.GetString("FilePathTestSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Type Supported.
        /// </summary>
        internal static string FileTypeSupported {
            get {
                return ResourceManager.GetString("FileTypeSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Global State Status Off.
        /// </summary>
        internal static string FirewallGlobalStateStatusOff {
            get {
                return ResourceManager.GetString("FirewallGlobalStateStatusOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Global State Status On.
        /// </summary>
        internal static string FirewallGlobalStateStatusOn {
            get {
                return ResourceManager.GetString("FirewallGlobalStateStatusOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning Service is unavailable.
        /// </summary>
        internal static string FPSServiceIsNotReachable {
            get {
                return ResourceManager.GetString("FPSServiceIsNotReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning Service is up and running.
        /// </summary>
        internal static string FPSServiceIsReachable {
            get {
                return ResourceManager.GetString("FPSServiceIsReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From the {0}.
        /// </summary>
        internal static string FromTheArgs {
            get {
                return ResourceManager.GetString("FromTheArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Front End Certificate.
        /// </summary>
        internal static string FrontEndCertificate {
            get {
                return ResourceManager.GetString("FrontEndCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frontend Hostname.
        /// </summary>
        internal static string FrontendHostName {
            get {
                return ResourceManager.GetString("FrontendHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Device.
        /// </summary>
        internal static string FullDeviceTunnelMode {
            get {
                return ResourceManager.GetString("FullDeviceTunnelMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streamline employees&apos; Workspace ONE enrollment process by customizing and managing device enrollment configurations to restrict or allow certain types of devices, group devices automatically, set ownership types and more..
        /// </summary>
        internal static string GeneralEnrollmentDescription {
            get {
                return ResourceManager.GetString("GeneralEnrollmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize lookup fields and apply wherever lookup fields appear..
        /// </summary>
        internal static string GeneralLookupFieldDescription {
            get {
                return ResourceManager.GetString("GeneralLookupFieldDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize and manage message templates used to communicate with employees..
        /// </summary>
        internal static string GeneralMessageTemplateDescription {
            get {
                return ResourceManager.GetString("GeneralMessageTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define how device and user information will be managed within Workspace ONE, which can be helpful for bring your own device (BYOD) deployments or local privacy regulations compliance..
        /// </summary>
        internal static string GeneralPrivacyDescription {
            get {
                return ResourceManager.GetString("GeneralPrivacyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure shared devices for multi-user functionality, including how employees interact with their devices and data maintained between employees&apos; devices..
        /// </summary>
        internal static string GeneralSharedDeviceDescription {
            get {
                return ResourceManager.GetString("GeneralSharedDeviceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go To Configurations.
        /// </summary>
        internal static string GoToConfigurations {
            get {
                return ResourceManager.GetString("GoToConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Catalog (Android).
        /// </summary>
        internal static string GreenBoxAndroid {
            get {
                return ResourceManager.GetString("GreenBoxAndroid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Catalog (iOS).
        /// </summary>
        internal static string GreenBoxIos {
            get {
                return ResourceManager.GetString("GreenBoxIos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Catalog (macOS).
        /// </summary>
        internal static string GreenBoxMacOs {
            get {
                return ResourceManager.GetString("GreenBoxMacOs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Catalog (Windows Desktop).
        /// </summary>
        internal static string GreenBoxWindows {
            get {
                return ResourceManager.GetString("GreenBoxWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Attribute.
        /// </summary>
        internal static string GroupAttribute {
            get {
                return ResourceManager.GetString("GroupAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups &amp; Settings.
        /// </summary>
        internal static string GroupsAndSettings {
            get {
                return ResourceManager.GetString("GroupsAndSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GSX API Token.
        /// </summary>
        internal static string GsxApiToken {
            get {
                return ResourceManager.GetString("GsxApiToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API token from Apple GSX. This value refreshes over time and on some connection tests. If this needs to be edited, please retreive a new token from Apple GSX..
        /// </summary>
        internal static string GsxApiTokenDescription {
            get {
                return ResourceManager.GetString("GsxApiTokenDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter GSX API Token and try again..
        /// </summary>
        internal static string GsxApiTokenIsRequired {
            get {
                return ResourceManager.GetString("GsxApiTokenIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication Token is not valid..
        /// </summary>
        internal static string GsxBadRequestError {
            get {
                return ResourceManager.GetString("GsxBadRequestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please upload a valid GSX certificate and try again..
        /// </summary>
        internal static string GsxCertificateIsRequired {
            get {
                return ResourceManager.GetString("GsxCertificateIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed due to unauthorized request..
        /// </summary>
        internal static string GsxForbiddenError {
            get {
                return ResourceManager.GetString("GsxForbiddenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple GSX reported an internal server error..
        /// </summary>
        internal static string GsxInternalServerError {
            get {
                return ResourceManager.GetString("GsxInternalServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to migrate..
        /// </summary>
        internal static string GsxRestMigrationLink {
            get {
                return ResourceManager.GetString("GsxRestMigrationLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple will be deprecating the current version of the AppleCare APIs in the fall of 2019. In order to maintain functionality, please migrate to the latest supported version..
        /// </summary>
        internal static string GsxRestMigrationPrompt {
            get {
                return ResourceManager.GetString("GsxRestMigrationPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple GSX did not authorize the call..
        /// </summary>
        internal static string GsxUnauthorizedError {
            get {
                return ResourceManager.GetString("GsxUnauthorizedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hardware Security.
        /// </summary>
        internal static string HardwareSecurity {
            get {
                return ResourceManager.GetString("HardwareSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting Device Health Attestation information from Windows devices. Health attestation is a hardware backed security posture check where Secure Boot status, ELAM status, code integrity check and other values are collected from the device TPM and used to check the compromised status of a device..
        /// </summary>
        internal static string HealthAttestationSampleInfo {
            get {
                return ResourceManager.GetString("HealthAttestationSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health Attestation Sample.
        /// </summary>
        internal static string HealthAttestationSampleInMinutes {
            get {
                return ResourceManager.GetString("HealthAttestationSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health Attestation Sample Time Mode.
        /// </summary>
        internal static string HealthAttestationSampleTimeMode {
            get {
                return ResourceManager.GetString("HealthAttestationSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health Monitoring.
        /// </summary>
        internal static string HealthMonitoring {
            get {
                return ResourceManager.GetString("HealthMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heartbeat Interval.
        /// </summary>
        internal static string HeartbeatInterval {
            get {
                return ResourceManager.GetString("HeartbeatInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for the device heartbeat. This sample is a low footprint sample that provides the device IP information, GPS data sample and device check-in status..
        /// </summary>
        internal static string HeartbeatIntervalInfo {
            get {
                return ResourceManager.GetString("HeartbeatIntervalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose if devices should be associated with an enrollment user or not. User-based is preferred when a specific user needs to be associated with the device. User-based also allows for optimal app license allocation. For scenarios in which a single user will not be associated with the device (such as kiosks), Device-based is preferred. If you are operating on a closed network or cannot communicate with Google Play, select AOSP/Closed Network..
        /// </summary>
        internal static string HelpMessageAndroidWorkManagementType {
            get {
                return ResourceManager.GetString("HelpMessageAndroidWorkManagementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Comments.
        /// </summary>
        internal static string HideComments {
            get {
                return ResourceManager.GetString("HideComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to hide the ability to add and view comments of the apps for your end-users..
        /// </summary>
        internal static string HideCommentsMsg {
            get {
                return ResourceManager.GetString("HideCommentsMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Accuracy.
        /// </summary>
        internal static string HighAccuracy {
            get {
                return ResourceManager.GetString("HighAccuracy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to Enable Hub Services.
        /// </summary>
        internal static string HowToEnableHubServices {
            get {
                return ResourceManager.GetString("HowToEnableHubServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to obtain the Tenant Directory ID info.
        /// </summary>
        internal static string HowToObtainTenantDirectoryInfo {
            get {
                return ResourceManager.GetString("HowToObtainTenantDirectoryInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source of Authentication for Intelligent Hub.
        /// </summary>
        internal static string HubAuthenticationSource {
            get {
                return ResourceManager.GetString("HubAuthenticationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the provider that Intelligent Hub will use for authentication. Workspace ONE UEM is the default..
        /// </summary>
        internal static string HubAuthenticationSourceToolTip {
            get {
                return ResourceManager.GetString("HubAuthenticationSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting applies only to older versions of Intelligent Hub..
        /// </summary>
        internal static string HubCatalogSettingHelp {
            get {
                return ResourceManager.GetString("HubCatalogSettingHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Configuration.
        /// </summary>
        internal static string HubConfiguration {
            get {
                return ResourceManager.GetString("HubConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review and edit settings below to configure employees’ Intelligent Hub experience including Hub Services, device management, authentication source and catalog settings..
        /// </summary>
        internal static string HubConfigurationDescription {
            get {
                return ResourceManager.GetString("HubConfigurationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Configurations.
        /// </summary>
        internal static string HubConfigurations {
            get {
                return ResourceManager.GetString("HubConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub App Catalog settings have moved to Workspace ONE Hub Services..
        /// </summary>
        internal static string HubMigrationBanner {
            get {
                return ResourceManager.GetString("HubMigrationBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To manage App Catalog settings, launch Workspace ONE Hub Services..
        /// </summary>
        internal static string HubMigrationBannerDescription {
            get {
                return ResourceManager.GetString("HubMigrationBannerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Services.
        /// </summary>
        internal static string HubServices {
            get {
                return ResourceManager.GetString("HubServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Intelligent Hub configurations.
        /// </summary>
        internal static string HubServicesConfigurations {
            get {
                return ResourceManager.GetString("HubServicesConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View and manage Workspace ONE Intelligent Hub configurations settings..
        /// </summary>
        internal static string HubServicesConfigurationsHelp {
            get {
                return ResourceManager.GetString("HubServicesConfigurationsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Services lets you provide employees with a single destination to access, discover and connect with corporate resources, teams and workflows. Enable Hub Services to deliver helpful, new features, including:.
        /// </summary>
        internal static string HubServicesDescription {
            get {
                return ResourceManager.GetString("HubServicesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Services was not detected. If you have Cloud Workspace ONE Access, go to {0} and enter your Workspace ONE Access URL into the Hub Services URL setting and then return to this page. If you don’t, contact your VMware representative to enable Hub Services..
        /// </summary>
        internal static string HubServicesDetectionFailedError {
            get {
                return ResourceManager.GetString("HubServicesDetectionFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WORKSPACE ONE ACCESS.
        /// </summary>
        internal static string IDENTITYMANAGER {
            get {
                return ResourceManager.GetString("IDENTITYMANAGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Verification.
        /// </summary>
        internal static string IdentityVerification {
            get {
                return ResourceManager.GetString("IdentityVerification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IDnomic.
        /// </summary>
        internal static string IDnomic {
            get {
                return ResourceManager.GetString("IDnomic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IIS Origin.
        /// </summary>
        internal static string IISOrigin {
            get {
                return ResourceManager.GetString("IISOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to impacted..
        /// </summary>
        internal static string impacted {
            get {
                return ResourceManager.GetString("impacted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Security Identifier.
        /// </summary>
        internal static string IncludeSecurityIdentifier {
            get {
                return ResourceManager.GetString("IncludeSecurityIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Failed: The user account does not have the required &apos;write&apos; permissions for the File storage path..
        /// </summary>
        internal static string IncorrectUserPermission {
            get {
                return ResourceManager.GetString("IncorrectUserPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether or not certificate profile commands will go through certificate batching logic. When enabled, certificate profile install commands for new enrollments will skip batching logic. When disabled, certificate profile install commands for new enrollments will go through certificate batching logic..
        /// </summary>
        internal static string Installcertificateprofileswithoutbatchinginfo {
            get {
                return ResourceManager.GetString("Installcertificateprofileswithoutbatchinginfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Compliance Policy Confirmed.
        /// </summary>
        internal static string InstallCompliancePolicyConfirmed {
            get {
                return ResourceManager.GetString("InstallCompliancePolicyConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Compliance Policy Failed.
        /// </summary>
        internal static string InstallCompliancePolicyFailed {
            get {
                return ResourceManager.GetString("InstallCompliancePolicyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Compliance Policy Rejected.
        /// </summary>
        internal static string InstallCompliancePolicyRejected {
            get {
                return ResourceManager.GetString("InstallCompliancePolicyRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Compliance Policy Requested.
        /// </summary>
        internal static string InstallCompliancePolicyRequested {
            get {
                return ResourceManager.GetString("InstallCompliancePolicyRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Product.
        /// </summary>
        internal static string InstallProduct_Description {
            get {
                return ResourceManager.GetString("InstallProduct_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Application.
        /// </summary>
        internal static string IntelligentHubApplication {
            get {
                return ResourceManager.GetString("IntelligentHubApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Intelligent Hub is a single destination where employees can securely access, discover, connect with and take action on corporate resources, teams, and workflows wherever they are and from any device. Review and edit settings to configure the Intelligent Hub app, experience, functionality, and access to enterprise resources..
        /// </summary>
        internal static string IntelligentHubDescription {
            get {
                return ResourceManager.GetString("IntelligentHubDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Allowlist Domain.
        /// </summary>
        internal static string InvalidAllowlistDomain {
            get {
                return ResourceManager.GetString("InvalidAllowlistDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded certificate does not have a valid certificate chain.
        /// </summary>
        internal static string InvalidCertificateChainUploaded {
            get {
                return ResourceManager.GetString("InvalidCertificateChainUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid JSON or XML format in custom settings.
        /// </summary>
        internal static string InvalidJsonOrXmlFormat {
            get {
                return ResourceManager.GetString("InvalidJsonOrXmlFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data entered for macOS application.
        /// </summary>
        internal static string InvalidMacOsApplicationData {
            get {
                return ResourceManager.GetString("InvalidMacOsApplicationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MEM config selected for password rotation is not MEM direct Google flavor..
        /// </summary>
        internal static string InvalidMemConfigPassedForGSuitePasswordRotation {
            get {
                return ResourceManager.GetString("InvalidMemConfigPassedForGSuitePasswordRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Port Number.
        /// </summary>
        internal static string InvalidPortNumber {
            get {
                return ResourceManager.GetString("InvalidPortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Protocol.
        /// </summary>
        internal static string InvalidSyslogProtocol {
            get {
                return ResourceManager.GetString("InvalidSyslogProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data entered for Windows application.
        /// </summary>
        internal static string InvalidWindowsApplicationData {
            get {
                return ResourceManager.GetString("InvalidWindowsApplicationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is enabled, MDM assumes management of the application if it is installed by the user prior to pushing through MDM. On supervised devices, the app is managed silently without requiring user intervention. On unsupervised devices, users are prompted to accept management by MDM. 
        ///
        ///The app is not reinstalled and the user will not lose any data. Managing the app allows you to send down management settings like configuration values, VPN etc.
        ///
        ///This setting will not take effect if the console pr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IosAllowManagementInfo {
            get {
                return ResourceManager.GetString("IosAllowManagementInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS and macOS (DEP only).
        /// </summary>
        internal static string IosAndMacOSDepOnly {
            get {
                return ResourceManager.GetString("IosAndMacOSDepOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS application inactivity rule has duplicated application identifier..
        /// </summary>
        internal static string IosAppInactivityRuleDuplicate {
            get {
                return ResourceManager.GetString("IosAppInactivityRuleDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS application inactivity rule is not valid. Please verify the application identifier is provided and the inactive days is in range 1-90..
        /// </summary>
        internal static string IosAppInactivityRuleNotValid {
            get {
                return ResourceManager.GetString("IosAppInactivityRuleNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS application version rule has duplicated application identifier..
        /// </summary>
        internal static string IosAppVersionRuleDuplicate {
            get {
                return ResourceManager.GetString("IosAppVersionRuleDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS application version rule is not valid. Please verify the application identifier or the version format is correct..
        /// </summary>
        internal static string IosAppVersionRuleNotValid {
            get {
                return ResourceManager.GetString("IosAppVersionRuleNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the required minimum iOS version number that a user should have to gain secure access to the app..
        /// </summary>
        internal static string IosMinimumRequiredOsVersionInfo {
            get {
                return ResourceManager.GetString("IosMinimumRequiredOsVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the recommended minimum iOS version number that a user should have to gain secure access to the app..
        /// </summary>
        internal static string IosMinimumWarningOsVersionInfo {
            get {
                return ResourceManager.GetString("IosMinimumWarningOsVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS operating system version field is not populated..
        /// </summary>
        internal static string IosOsVersionNotSet {
            get {
                return ResourceManager.GetString("IosOsVersionNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS Single App Mode.
        /// </summary>
        internal static string iOSSingleAppMode {
            get {
                return ResourceManager.GetString("iOSSingleAppMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In single app mode, iOS device is locked into a single application until the payload is removed/changed. The home button is disabled, and the device returns to the specified application automatically upon wake or reboot. This is only for supervised devices.
        /// </summary>
        internal static string IosSingleAppModeInfo {
            get {
                return ResourceManager.GetString("IosSingleAppModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iPad Air 3.
        /// </summary>
        internal static string iPadAir3 {
            get {
                return ResourceManager.GetString("iPadAir3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iPad Mini 5.
        /// </summary>
        internal static string iPadMini5 {
            get {
                return ResourceManager.GetString("iPadMini5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iPod Touch 7th Generation.
        /// </summary>
        internal static string IpodTouch7 {
            get {
                return ResourceManager.GetString("IpodTouch7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Post-Enrollment Onboarding Experience.
        /// </summary>
        internal static string IsCustomOnboardingExperienceEnabled {
            get {
                return ResourceManager.GetString("IsCustomOnboardingExperienceEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this setting is enabled, Intelligent Hub will display an onboarding experience UI to users immediately after it is installed on the macOS device after enrollment. The onboarding experience provides status information on apps and resources that are actively being installed, and notifies the user when the process is complete..
        /// </summary>
        internal static string IsCustomOnboardingExperienceEnabledTooltip {
            get {
                return ResourceManager.GetString("IsCustomOnboardingExperienceEnabledTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Product Provisioning Command Release Enabled.
        /// </summary>
        internal static string IsProductProvisioningCommandReleaseEnabled_Description {
            get {
                return ResourceManager.GetString("IsProductProvisioningCommandReleaseEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer Certificate.
        /// </summary>
        internal static string IssuerCertificate {
            get {
                return ResourceManager.GetString("IssuerCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust Service.
        /// </summary>
        internal static string IsTrustServiceEnabled {
            get {
                return ResourceManager.GetString("IsTrustServiceEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Understand the Risks.
        /// </summary>
        internal static string IUnderstandTheRisk {
            get {
                return ResourceManager.GetString("IUnderstandTheRisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JCCH Gléas.
        /// </summary>
        internal static string JcchGleas {
            get {
                return ResourceManager.GetString("JcchGleas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job Log Level.
        /// </summary>
        internal static string JobLogLevel_Description {
            get {
                return ResourceManager.GetString("JobLogLevel_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Join the VMware Customer Experience Improvement Program.
        /// </summary>
        internal static string JoinTheVmwareCeip {
            get {
                return ResourceManager.GetString("JoinTheVmwareCeip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KNOX license key is required when KNOX containers are enabled.
        /// </summary>
        internal static string KnoxLicenseKeyRequired {
            get {
                return ResourceManager.GetString("KnoxLicenseKeyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Korea.
        /// </summary>
        internal static string Korea {
            get {
                return ResourceManager.GetString("Korea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP - Active Directory.
        /// </summary>
        internal static string LdapActiveDirectory {
            get {
                return ResourceManager.GetString("LdapActiveDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP definition not found for the given Organization group.
        /// </summary>
        internal static string LDAPDefinitionNotFound {
            get {
                return ResourceManager.GetString("LDAPDefinitionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP - Lotus Domino.
        /// </summary>
        internal static string LdapLotusDomino {
            get {
                return ResourceManager.GetString("LdapLotusDomino", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP - Novell e-Directory.
        /// </summary>
        internal static string LdapNovelleDirectory {
            get {
                return ResourceManager.GetString("LdapNovelleDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LDAP - Other LDAP.
        /// </summary>
        internal static string LdapOtherLdap {
            get {
                return ResourceManager.GetString("LdapOtherLdap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Workspace ONE Access simplifies employee experience and reduces IT complexity..
        /// </summary>
        internal static string LearnHowWorkspaceOneAccess {
            get {
                return ResourceManager.GetString("LearnHowWorkspaceOneAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more {0}..
        /// </summary>
        internal static string LearnMoreParam {
            get {
                return ResourceManager.GetString("LearnMoreParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Application.
        /// </summary>
        internal static string LegacyAgentApplication {
            get {
                return ResourceManager.GetString("LegacyAgentApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy App Management.
        /// </summary>
        internal static string LegacyAppManagement {
            get {
                return ResourceManager.GetString("LegacyAppManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware&apos;s Privacy Policy.
        /// </summary>
        internal static string LegalPrivacyLinkLabel {
            get {
                return ResourceManager.GetString("LegalPrivacyLinkLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See {0} for information about the different types of data collected through this product, such as analytics, personal information and more..
        /// </summary>
        internal static string LegalPrivacyReviewInformation {
            get {
                return ResourceManager.GetString("LegalPrivacyReviewInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Less Details.
        /// </summary>
        internal static string LessDetails {
            get {
                return ResourceManager.GetString("LessDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Range Processor: The Organization group name is not existing in the DB OR is not allowed.
        /// </summary>
        internal static string LGNameNotExistingInDB {
            get {
                return ResourceManager.GetString("LGNameNotExistingInDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        internal static string Licenses {
            get {
                return ResourceManager.GetString("Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn how.
        /// </summary>
        internal static string LinkWorkspaceOneAccess {
            get {
                return ResourceManager.GetString("LinkWorkspaceOneAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Address.
        /// </summary>
        internal static string LocalAddress {
            get {
                return ResourceManager.GetString("LocalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Basic User Sync allows you to use Workspace ONE UEM Basic Users with Workspace ONE Access. Once enabled, Local Basic User Sync cannot be disabled..
        /// </summary>
        internal static string LocalBasicUserSyncDescription {
            get {
                return ResourceManager.GetString("LocalBasicUserSyncDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Basic User Sync.
        /// </summary>
        internal static string LocalBasicUserSyncJob {
            get {
                return ResourceManager.GetString("LocalBasicUserSyncJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First, choose the Locale language and download the label key template to search for the label text fields you wish to modify. When updating a label, enter {0} into the {1} column for that label. Save changes and then select the file to upload. Then, select Upload to save your changes, which will be displayed in the Label Content Editor list..
        /// </summary>
        internal static string LocalizationEditorImportDescription {
            get {
                return ResourceManager.GetString("LocalizationEditorImportDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to enable Local Basic User Sync.
        /// </summary>
        internal static string LocalSyncEnableFailed {
            get {
                return ResourceManager.GetString("LocalSyncEnableFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location Data Accuracy.
        /// </summary>
        internal static string LocationDataAccuracy {
            get {
                return ResourceManager.GetString("LocationDataAccuracy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Balanced: Provides the best balance of power and accuracy with about 100 meters of accuracy.
        ///
        ///High Accuracy: Provides the best possible accuracy, but requires the most power.
        ///
        ///Low Power: Requires a lower amount of power with about 10 kilometers of accuracy.
        ///
        ///No Power: Provides the least amount of accuracy and requires no power..
        /// </summary>
        internal static string LocationDataAccuracyTooltip {
            get {
                return ResourceManager.GetString("LocationDataAccuracyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location data is collected to assist in locating lost devices. It may also be collected to distribute functionality and content only when you are in a certain geo-fenced location. A list of information being collected from this device can be found below..
        /// </summary>
        internal static string LocationIsCollected {
            get {
                return ResourceManager.GetString("LocationIsCollected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location location is not collected.
        /// </summary>
        internal static string LocationIsNotCollected {
            get {
                return ResourceManager.GetString("LocationIsNotCollected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize lookup fields and apply wherever lookup fields appear..
        /// </summary>
        internal static string LookupFieldsDescription {
            get {
                return ResourceManager.GetString("LookupFieldsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Power.
        /// </summary>
        internal static string LowPower {
            get {
                return ResourceManager.GetString("LowPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully qualified path on local server to the Intelligent Hub files for macOS devices.
        /// </summary>
        internal static string MacAgentDownloadUrl {
            get {
                return ResourceManager.GetString("MacAgentDownloadUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MacOs application deleted successfully..
        /// </summary>
        internal static string MacOsApplicationDeleteSuccess {
            get {
                return ResourceManager.GetString("MacOsApplicationDeleteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS application already exists.
        /// </summary>
        internal static string MacOsApplicationFound {
            get {
                return ResourceManager.GetString("MacOsApplicationFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS application does not exist.
        /// </summary>
        internal static string MacOsApplicationNotFound {
            get {
                return ResourceManager.GetString("MacOsApplicationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS application saved successfully.
        /// </summary>
        internal static string MacOsApplicationSaveSuccess {
            get {
                return ResourceManager.GetString("MacOsApplicationSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS Intelligent Hub File Path.
        /// </summary>
        internal static string MacOsIntelligentHubFilePath {
            get {
                return ResourceManager.GetString("MacOsIntelligentHubFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This path contains the seeded Intelligent Hub installer and supplementary configuration files for deployment and auto-upgrade of client devices..
        /// </summary>
        internal static string MacOsIntelligentHubFilePathHelpText {
            get {
                return ResourceManager.GetString("MacOsIntelligentHubFilePathHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for macOS seeded apps upgrade.
        /// </summary>
        internal static string MacOsIntelligentHubUpdateCheckJob {
            get {
                return ResourceManager.GetString("MacOsIntelligentHubUpdateCheckJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Content Gateway provides a secure and effective method for end users to access content from internal repositories. Use VMware Content Gateway along with Content applications like VMware Content Locker to provide secure access to the corporate content from content repositories or internal file shares..
        /// </summary>
        internal static string MagLanding {
            get {
                return ResourceManager.GetString("MagLanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please refer to the VMware Tunnel Installation and Admin Guides for details around the installation requirements and procedure..
        /// </summary>
        internal static string MAGLanding2 {
            get {
                return ResourceManager.GetString("MAGLanding2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Certificate upload failed. Please verify the certificate is correct and try again..
        /// </summary>
        internal static string MAGPublicCertificateError {
            get {
                return ResourceManager.GetString("MAGPublicCertificateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel - Proxy Settings have not been defined at this Organization Group. To configure Proxy for application tunneling, click the link below..
        /// </summary>
        internal static string MagSettingsConfigurationWarning {
            get {
                return ResourceManager.GetString("MagSettingsConfigurationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Thumbprint Mismatch Error.
        /// </summary>
        internal static string MAGThumbPrintMismatchError {
            get {
                return ResourceManager.GetString("MAGThumbPrintMismatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Page.
        /// </summary>
        internal static string MainPage {
            get {
                return ResourceManager.GetString("MainPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Pages.
        /// </summary>
        internal static string MainPages {
            get {
                return ResourceManager.GetString("MainPages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friendly name - Platform.
        /// </summary>
        internal static string ManageApplicationsGridApplicationNameColumn {
            get {
                return ResourceManager.GetString("ManageApplicationsGridApplicationNameColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These applications will be available for use in Device Traffic Rules..
        /// </summary>
        internal static string ManageApplicationsHeaderText {
            get {
                return ResourceManager.GetString("ManageApplicationsHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Windows or macOS Application.
        /// </summary>
        internal static string ManageApplicationWindowsMacOS {
            get {
                return ResourceManager.GetString("ManageApplicationWindowsMacOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add, Edit or Delete Windows or macOS application. .
        /// </summary>
        internal static string ManageApplicationWindowsMacOSInfo {
            get {
                return ResourceManager.GetString("ManageApplicationWindowsMacOSInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Apple ID.
        /// </summary>
        internal static string ManagedAppleID {
            get {
                return ResourceManager.GetString("ManagedAppleID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Apple ID Format.
        /// </summary>
        internal static string ManagedAppleIDFormat {
            get {
                return ResourceManager.GetString("ManagedAppleIDFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a custom format if the end-user&apos;s managed Apple ID is not the same as the end-user&apos;s email address in UEM. This will be used to authenticate users signing into Shared iPads enrolled via Apple Business Manager..
        /// </summary>
        internal static string ManagedAppleIDInfoMessage {
            get {
                return ResourceManager.GetString("ManagedAppleIDInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Apple IDs are user accounts created in Apple Business Manager and used to authenticate users on Apple devices during enrollment of Shared iPads. If you are not using Apple devices for this purpose, you can disregard this attribute..
        /// </summary>
        internal static string ManagedAppleIdToolTip {
            get {
                return ResourceManager.GetString("ManagedAppleIdToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Volume Purchase Program lets you distribute apps from the App and B2B stores to Apple devices without an Apple ID. Using Locations in Apple Business Manager you can easily transfer licenses between accounts and sync to Volume Purchase Program tokens..
        /// </summary>
        internal static string ManagedDistributionVPPDescription {
            get {
                return ResourceManager.GetString("ManagedDistributionVPPDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage the available Device Traffic Rule sets..
        /// </summary>
        internal static string ManageDTRSHeaderText {
            get {
                return ResourceManager.GetString("ManageDTRSHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Management Mode.
        /// </summary>
        internal static string ManagementMode {
            get {
                return ResourceManager.GetString("ManagementMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Traffic Assignments.
        /// </summary>
        internal static string ManageTrafficAssignments {
            get {
                return ResourceManager.GetString("ManageTrafficAssignments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Applications.
        /// </summary>
        internal static string ManageTunnelEnabledApplications {
            get {
                return ResourceManager.GetString("ManageTunnelEnabledApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to add, edit, delete available applications..
        /// </summary>
        internal static string ManageTunnelEnabledApplicationsInfo {
            get {
                return ResourceManager.GetString("ManageTunnelEnabledApplicationsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Degree of Parallelism.
        /// </summary>
        internal static string MaxDegreeOfParallelism_Description {
            get {
                return ResourceManager.GetString("MaxDegreeOfParallelism_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If session management is set to {0} minutes or higher, you will automatically be logged out after this time has expired..
        /// </summary>
        internal static string MaxForcedTimeoutTooltip {
            get {
                return ResourceManager.GetString("MaxForcedTimeoutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Period Allowed Offline Time Unit.
        /// </summary>
        internal static string MaximumPeriodAllowedOfflineTimeUnit {
            get {
                return ResourceManager.GetString("MaximumPeriodAllowedOfflineTimeUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Queue Commands (Max).
        /// </summary>
        internal static string MaximumPublishedCommandsMultiplier {
            get {
                return ResourceManager.GetString("MaximumPublishedCommandsMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the maximum number of allowed commands in queue. Certificate Profile Publish Frequency will continue to publish until they reach this limit. Once devices consume the commands, more commands will be queued up. The value you put in here is multipled by the &apos;Certificate Profile Publish Frequency&apos; to get that max number. This number can be increased to improve certificate batching, however it is recommended to closely monitor CA and DS server performance..
        /// </summary>
        internal static string MaximumPublishedCommandsMultiplierInfo {
            get {
                return ResourceManager.GetString("MaximumPublishedCommandsMultiplierInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Job Retry Count.
        /// </summary>
        internal static string MaxJobRetryCount_Description {
            get {
                return ResourceManager.GetString("MaxJobRetryCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Percentage of Job Failure.
        /// </summary>
        internal static string MaxPercentageOfJobFailure_Description {
            get {
                return ResourceManager.GetString("MaxPercentageOfJobFailure_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number cannot be greater than {0}.
        /// </summary>
        internal static string MaxPortValidationMsg {
            get {
                return ResourceManager.GetString("MaxPortValidationMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Time Allowed for Provisioning to Complete.
        /// </summary>
        internal static string MaxTimeOnWindowsOobeProgressScreen {
            get {
                return ResourceManager.GetString("MaxTimeOnWindowsOobeProgressScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure this value to set a maximum timeout on the OOBE Status screen. After the timeout, the provisioning will be considered complete and the remaining apps and policies will be deployed in the background..
        /// </summary>
        internal static string MaxTimeOnWindowsOobeProgressScreenToolTip {
            get {
                return ResourceManager.GetString("MaxTimeOnWindowsOobeProgressScreenToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MDM discovery URL.
        /// </summary>
        internal static string MDMDiscoveryURL {
            get {
                return ResourceManager.GetString("MDMDiscoveryURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The frequency (minutes) at which Sample Job is triggered.
        /// </summary>
        internal static string MDMSampleSchedulerIntervalHelp {
            get {
                return ResourceManager.GetString("MDMSampleSchedulerIntervalHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password rotation for the selected G Suite user failed..
        /// </summary>
        internal static string MEMGSuitePasswordRotationFailed {
            get {
                return ResourceManager.GetString("MEMGSuitePasswordRotationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge Device Records Failure.
        /// </summary>
        internal static string MergeDeviceRecordsFailure {
            get {
                return ResourceManager.GetString("MergeDeviceRecordsFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge Device Records Success.
        /// </summary>
        internal static string MergeDeviceRecordsSuccess {
            get {
                return ResourceManager.GetString("MergeDeviceRecordsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata Service URL.
        /// </summary>
        internal static string MetadataServiceUrl {
            get {
                return ResourceManager.GetString("MetadataServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This URL is used to synchronize current server&apos;s metadata in order to obtain most up-to-date information about device models, platforms, manufacturers, operating systems, etc..
        /// </summary>
        internal static string MetadataServiceUrlDescription {
            get {
                return ResourceManager.GetString("MetadataServiceUrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Sampling Interval (hours).
        /// </summary>
        internal static string MinimumSamplingIntervalHours {
            get {
                return ResourceManager.GetString("MinimumSamplingIntervalHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval (hours) within which Sample Job should query all MDM sample schedules.
        /// </summary>
        internal static string MinimumSamplingIntervalHoursHelp {
            get {
                return ResourceManager.GetString("MinimumSamplingIntervalHoursHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password should be atleast {0} characters.
        /// </summary>
        internal static string MinPasswordValidationMsg {
            get {
                return ResourceManager.GetString("MinPasswordValidationMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number cannot be less than {0}.
        /// </summary>
        internal static string MinPortValidationMsg {
            get {
                return ResourceManager.GetString("MinPortValidationMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modern.
        /// </summary>
        internal static string Modern {
            get {
                return ResourceManager.GetString("Modern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modern Agent.
        /// </summary>
        internal static string ModernAgent {
            get {
                return ResourceManager.GetString("ModernAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More Details.
        /// </summary>
        internal static string MoreDetails {
            get {
                return ResourceManager.GetString("MoreDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native Apps.
        /// </summary>
        internal static string NativeApps {
            get {
                return ResourceManager.GetString("NativeApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither the subnet mask nor router address is set.
        /// </summary>
        internal static string NeitherSubnetNorRouterAddressSet {
            get {
                return ResourceManager.GetString("NeitherSubnetNorRouterAddressSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Failed: Unable to find the file storage folder for the path provided..
        /// </summary>
        internal static string NetworkNameNotFound {
            get {
                return ResourceManager.GetString("NetworkNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Failed: Unable to reach the file storage path provided..
        /// </summary>
        internal static string NetworkPathNotFound {
            get {
                return ResourceManager.GetString("NetworkPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Range Processor: Network range assignment is not enabled at this Organization Group.
        /// </summary>
        internal static string NetworkRangeAssignmentNotEnabledAtOg {
            get {
                return ResourceManager.GetString("NetworkRangeAssignmentNotEnabledAtOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network User Login Complete.
        /// </summary>
        internal static string NetworkUserLoginComplete {
            get {
                return ResourceManager.GetString("NetworkUserLoginComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Trigger.
        /// </summary>
        internal static string NewTrigger_Description {
            get {
                return ResourceManager.GetString("NewTrigger_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Tunnel Configuration.
        /// </summary>
        internal static string NewTunnelConfig {
            get {
                return ResourceManager.GetString("NewTunnelConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User doesn&apos;t have access to the specified entity.
        /// </summary>
        internal static string NoAccessToUser {
            get {
                return ResourceManager.GetString("NoAccessToUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Certificate Authorities have been configured..
        /// </summary>
        internal static string NoCertificatesConfigured {
            get {
                return ResourceManager.GetString("NoCertificatesConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Settings.
        /// </summary>
        internal static string NoCustomSettings {
            get {
                return ResourceManager.GetString("NoCustomSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No default Security Group.
        /// </summary>
        internal static string NoDefaultSecurityGroup {
            get {
                return ResourceManager.GetString("NoDefaultSecurityGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-Compliant device sample must be between 1 hour and 30 days (inclusive)..
        /// </summary>
        internal static string NonCompliantDeviceSampleIntervalErrorMessage {
            get {
                return ResourceManager.GetString("NonCompliantDeviceSampleIntervalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-repudiation.
        /// </summary>
        internal static string NonRepudiation {
            get {
                return ResourceManager.GetString("NonRepudiation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Power.
        /// </summary>
        internal static string NoPower {
            get {
                return ResourceManager.GetString("NoPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Norwegian.
        /// </summary>
        internal static string Norwegian {
            get {
                return ResourceManager.GetString("Norwegian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spaces not allowed.
        /// </summary>
        internal static string NoSpacesAllowed {
            get {
                return ResourceManager.GetString("NoSpacesAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User not authorized.
        /// </summary>
        internal static string NotAuthorized {
            get {
                return ResourceManager.GetString("NotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This selection cannot be reversed..
        /// </summary>
        internal static string NoteAndroidAllowAospClosedNetwork {
            get {
                return ResourceManager.GetString("NoteAndroidAllowAospClosedNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificate templates are configured..
        /// </summary>
        internal static string NoTemplatesConfigured {
            get {
                return ResourceManager.GetString("NoTemplatesConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow employees to receive notifications including password expiration, account information and other important updates..
        /// </summary>
        internal static string NotificationsDescription {
            get {
                return ResourceManager.GetString("NotificationsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifications Settings Updated.
        /// </summary>
        internal static string NotificationsSettingsUpdated {
            get {
                return ResourceManager.GetString("NotificationsSettingsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string NotifyEmailToNoneType {
            get {
                return ResourceManager.GetString("NotifyEmailToNoneType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify Product Install Status.
        /// </summary>
        internal static string NotifyProductInstallStatus_Description {
            get {
                return ResourceManager.GetString("NotifyProductInstallStatus_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not PAC Utility.
        /// </summary>
        internal static string NotPACUtility {
            get {
                return ResourceManager.GetString("NotPACUtility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks like you don&apos;t have any Tunnel Configurations.
        /// </summary>
        internal static string NoTunnelConfigsMsg {
            get {
                return ResourceManager.GetString("NoTunnelConfigsMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel configuration does not exist.
        /// </summary>
        internal static string NoTunnelConfiguration {
            get {
                return ResourceManager.GetString("NoTunnelConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to now.
        /// </summary>
        internal static string NowInSmallCaps {
            get {
                return ResourceManager.GetString("NowInSmallCaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin Username.
        /// </summary>
        internal static string NsxAdminUsername {
            get {
                return ResourceManager.GetString("NsxAdminUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Application not found..
        /// </summary>
        internal static string NsxApplicationNotFound {
            get {
                return ResourceManager.GetString("NsxApplicationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Applications.
        /// </summary>
        internal static string NsxApplications {
            get {
                return ResourceManager.GetString("NsxApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success, NSX configuration was saved.
        /// </summary>
        internal static string NsxConfigSavedSuccessfully {
            get {
                return ResourceManager.GetString("NsxConfigSavedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX configuration do not exist..
        /// </summary>
        internal static string NsxConfigurationDoesNotExist {
            get {
                return ResourceManager.GetString("NsxConfigurationDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Integration.
        /// </summary>
        internal static string NsxIntegration {
            get {
                return ResourceManager.GetString("NsxIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrate Tunnel with NSX to match per-app policies with security groups defined in NSX. This will enhance network and app security by minimizing the attack surface into your network..
        /// </summary>
        internal static string NsxIntegrationDesc {
            get {
                return ResourceManager.GetString("NsxIntegrationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Manager URL.
        /// </summary>
        internal static string NsxManagerUrl {
            get {
                return ResourceManager.GetString("NsxManagerUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NSX Manager URL. [http(s)://]hostname. The destination URL must contain the protocol and host name or IP address. (Example: https://nsx.example.com).
        /// </summary>
        internal static string NsxManagerUrlDesc {
            get {
                return ResourceManager.GetString("NsxManagerUrlDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define a security group for each app..
        /// </summary>
        internal static string NsxSecurityGroupsDesc {
            get {
                return ResourceManager.GetString("NsxSecurityGroupsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Security Groups.
        /// </summary>
        internal static string NsxSecurityGroupsTitle {
            get {
                return ResourceManager.GetString("NsxSecurityGroupsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX-T.
        /// </summary>
        internal static string NsxT {
            get {
                return ResourceManager.GetString("NsxT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX-V.
        /// </summary>
        internal static string NsxV {
            get {
                return ResourceManager.GetString("NsxV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NSX Version.
        /// </summary>
        internal static string NsxVersion {
            get {
                return ResourceManager.GetString("NsxVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of unread messages only.
        /// </summary>
        internal static string NumberOfUnreadMessageOnly {
            get {
                return ResourceManager.GetString("NumberOfUnreadMessageOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Client Management.
        /// </summary>
        internal static string OauthClientEdit {
            get {
                return ResourceManager.GetString("OauthClientEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to creating, modifying, and deleting OAuth Clients.
        /// </summary>
        internal static string OauthClientEditHelp {
            get {
                return ResourceManager.GetString("OauthClientEditHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A client ID and secret are used to prove the identity of apps when making Workspace ONE UEM API calls. Add clients below to register and generate client IDs and secrets.
        /// </summary>
        internal static string OAuthClientHelpText {
            get {
                return ResourceManager.GetString("OAuthClientHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Client Management.
        /// </summary>
        internal static string OAuthClientManagement {
            get {
                return ResourceManager.GetString("OAuthClientManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register clients to generate client IDs and secrets that can be used to prove the identity of apps when making Workspace ONE UEM API calls..
        /// </summary>
        internal static string OAuthClientMenuHelpText {
            get {
                return ResourceManager.GetString("OAuthClientMenuHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Client Management.
        /// </summary>
        internal static string OauthClientRead {
            get {
                return ResourceManager.GetString("OauthClientRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to reading and listing OAuth Clients.
        /// </summary>
        internal static string OauthClientReadHelp {
            get {
                return ResourceManager.GetString("OauthClientReadHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Clients.
        /// </summary>
        internal static string OAuthClients {
            get {
                return ResourceManager.GetString("OAuthClients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Client Service.
        /// </summary>
        internal static string OAuthClientService {
            get {
                return ResourceManager.GetString("OAuthClientService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will need to update your Identity Providers&apos; settings with the &apos;{0}&apos; attribute for optimum security..
        /// </summary>
        internal static string ObjectGuidAttributeConfigurationRequired {
            get {
                return ResourceManager.GetString("ObjectGuidAttributeConfigurationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Provisioning.
        /// </summary>
        internal static string OEMProvisioningSection {
            get {
                return ResourceManager.GetString("OEMProvisioningSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initiate OEM Provisioning Service certificate pinning sync..
        /// </summary>
        internal static string OemProvisioningServiceHostRegistryInitiateSyncFailedError {
            get {
                return ResourceManager.GetString("OemProvisioningServiceHostRegistryInitiateSyncFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Provisioning Service is unavailable.
        /// </summary>
        internal static string OEMProvisioningServiceIsNotReachable {
            get {
                return ResourceManager.GetString("OEMProvisioningServiceIsNotReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Provisioning Service is up and running.
        /// </summary>
        internal static string OEMProvisioningServiceIsReachable {
            get {
                return ResourceManager.GetString("OEMProvisioningServiceIsReachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Provisioning Service URL.
        /// </summary>
        internal static string OEMProvisioningUrl {
            get {
                return ResourceManager.GetString("OEMProvisioningUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Update Sample.
        /// </summary>
        internal static string OEMUpdateSample {
            get {
                return ResourceManager.GetString("OEMUpdateSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting Driver and Firmware update status from specific OEMs. The data includes patch level, update date, criticality, category etc..
        /// </summary>
        internal static string OEMUpdateSampleInfo {
            get {
                return ResourceManager.GetString("OEMUpdateSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Updates Sample.
        /// </summary>
        internal static string OEMUpdateSampleInMinutes {
            get {
                return ResourceManager.GetString("OEMUpdateSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Updates Sample Time Mode.
        /// </summary>
        internal static string OEMUpdateSampleTimeMode {
            get {
                return ResourceManager.GetString("OEMUpdateSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to configure Microsoft Intune® App Protection Policies, you will need to provide Intune admin credentials below to connect your tenant to Workspace ONE..
        /// </summary>
        internal static string Office365AuthenticationInstruction {
            get {
                return ResourceManager.GetString("Office365AuthenticationInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy was deleted on the Microsoft Intune portal. Click Delete Settings to delete the policy settings from UEM. {0}.
        /// </summary>
        internal static string Office365DeletedPolicyNotification {
            get {
                return ResourceManager.GetString("Office365DeletedPolicyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Office 365.
        /// </summary>
        internal static string Office365Label {
            get {
                return ResourceManager.GetString("Office365Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Office365 MAM Android Application Policy ID.
        /// </summary>
        internal static string Office365MamAndroidApplicationPolicyId_Description {
            get {
                return ResourceManager.GetString("Office365MamAndroidApplicationPolicyId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy was deleted successfully..
        /// </summary>
        internal static string Office365MamApplicationPolicyDeleteSuccessful {
            get {
                return ResourceManager.GetString("Office365MamApplicationPolicyDeleteSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred while deleting the policy and has been logged..
        /// </summary>
        internal static string Office365MamApplicationPolicyDeleteUnsuccessful {
            get {
                return ResourceManager.GetString("Office365MamApplicationPolicyDeleteUnsuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy was synced successfully..
        /// </summary>
        internal static string Office365MamApplicationPolicySyncSuccessful {
            get {
                return ResourceManager.GetString("Office365MamApplicationPolicySyncSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred while syncing the policy and has been logged..
        /// </summary>
        internal static string Office365MamApplicationPolicySyncUnsuccessful {
            get {
                return ResourceManager.GetString("Office365MamApplicationPolicySyncUnsuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Office365 MAM Application Policy Timestamp.
        /// </summary>
        internal static string Office365MamApplicationPolicyTimestamp_Description {
            get {
                return ResourceManager.GetString("Office365MamApplicationPolicyTimestamp_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Office365 MAM iOS Application Policy ID.
        /// </summary>
        internal static string Office365MamIosApplicationPolicyId_Description {
            get {
                return ResourceManager.GetString("Office365MamIosApplicationPolicyId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Receive data between other apps&quot;.
        /// </summary>
        internal static string Office365PolicySettingAllowedInboundDataTransferSources {
            get {
                return ResourceManager.GetString("Office365PolicySettingAllowedInboundDataTransferSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Restrict cut, copy, and paste between other apps&quot;.
        /// </summary>
        internal static string Office365PolicySettingAllowedOutboundClipboardSharingLevel {
            get {
                return ResourceManager.GetString("Office365PolicySettingAllowedOutboundClipboardSharingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Send org data to other apps&quot;.
        /// </summary>
        internal static string Office365PolicySettingAllowedOutboundDataTransferDestinations {
            get {
                return ResourceManager.GetString("Office365PolicySettingAllowedOutboundDataTransferDestinations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Sync policy managed app data with native apps&quot;.
        /// </summary>
        internal static string Office365PolicySettingContactSyncBlocked {
            get {
                return ResourceManager.GetString("Office365PolicySettingContactSyncBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Prevent Backups&quot;.
        /// </summary>
        internal static string Office365PolicySettingDataBackupBlocked {
            get {
                return ResourceManager.GetString("Office365PolicySettingDataBackupBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Restrict Web Content to Display in Managed Browser&quot;.
        /// </summary>
        internal static string Office365PolicySettingManagedBrowserToOpenLinksRequired {
            get {
                return ResourceManager.GetString("Office365PolicySettingManagedBrowserToOpenLinksRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Max PIN attempts&quot;.
        /// </summary>
        internal static string Office365PolicySettingMaximumPinRetries {
            get {
                return ResourceManager.GetString("Office365PolicySettingMaximumPinRetries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Minimum PIN length&quot;.
        /// </summary>
        internal static string Office365PolicySettingMinimumPinLength {
            get {
                return ResourceManager.GetString("Office365PolicySettingMinimumPinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Work or school account credentials for access&quot;.
        /// </summary>
        internal static string Office365PolicySettingOrganizationalCredentialsRequired {
            get {
                return ResourceManager.GetString("Office365PolicySettingOrganizationalCredentialsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;PIN type&quot;.
        /// </summary>
        internal static string Office365PolicySettingPinCharacterSet {
            get {
                return ResourceManager.GetString("Office365PolicySettingPinCharacterSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;PIN for access&quot;.
        /// </summary>
        internal static string Office365PolicySettingPinRequired {
            get {
                return ResourceManager.GetString("Office365PolicySettingPinRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Printing org data&quot;.
        /// </summary>
        internal static string Office365PolicySettingPrintBlocked {
            get {
                return ResourceManager.GetString("Office365PolicySettingPrintBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Save copies of org data&quot;.
        /// </summary>
        internal static string Office365PolicySettingSaveAsBlocked {
            get {
                return ResourceManager.GetString("Office365PolicySettingSaveAsBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy settings were updated on the Microsoft Intune portal and are out of sync with Workspace ONE UEM. Click Sync Settings to update this policy in UEM. {0}.
        /// </summary>
        internal static string Office365SyncPolicyNotification {
            get {
                return ResourceManager.GetString("Office365SyncPolicyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} policies are different for Android policy and iOS policy in Azure portal. These settings need to be the same for Workspace ONE UEM to sync the Android and iOS policy. Contact IT administrator to resolve the issue..
        /// </summary>
        internal static string Office365UnsyncedDoublePolicyNotification {
            get {
                return ResourceManager.GetString("Office365UnsyncedDoublePolicyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following policy settings are different for Android policy and iOS policy in Azure Portal. These settings needs to be the same for Workspace ONE UEM to sync the Android and iOS policy. Contact IT administrator to resolve the issue. {0}.
        /// </summary>
        internal static string Office365UnsyncedMultiplePolicyNotification {
            get {
                return ResourceManager.GetString("Office365UnsyncedMultiplePolicyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} policy is different for Android policy and iOS policy in Azure Portal. This setting needs to be the same for Workspace ONE UEM to sync the Android and iOS policy. Contact IT administrator to resolve the issue..
        /// </summary>
        internal static string Office365UnsyncedSinglePolicyNotification {
            get {
                return ResourceManager.GetString("Office365UnsyncedSinglePolicyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offline Domain Join.
        /// </summary>
        internal static string OfflineDomainJoinLabel {
            get {
                return ResourceManager.GetString("OfflineDomainJoinLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization requires a customer code before configuring Chrome EMM settings.
        /// </summary>
        internal static string OgMissingCustomerCode {
            get {
                return ResourceManager.GetString("OgMissingCustomerCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only if App Data can&apos;t be cleared.
        /// </summary>
        internal static string OnlyIfAppDataCanNotBeCleared {
            get {
                return ResourceManager.GetString("OnlyIfAppDataCanNotBeCleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job to pull device registration information from OEM Provisioning Service.
        /// </summary>
        internal static string OPSDeviceRegistrationJob {
            get {
                return ResourceManager.GetString("OPSDeviceRegistrationJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Group Name.
        /// </summary>
        internal static string OrganizationGroupName {
            get {
                return ResourceManager.GetString("OrganizationGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested organization group wasn&apos;t found in the system.
        /// </summary>
        internal static string OrganizationGroupNotFound {
            get {
                return ResourceManager.GetString("OrganizationGroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Group UUID.
        /// </summary>
        internal static string OrganizationGroupUuid {
            get {
                return ResourceManager.GetString("OrganizationGroupUuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Suggestions....
        /// </summary>
        internal static string OtherSuggestions {
            get {
                return ResourceManager.GetString("OtherSuggestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OU Identifier.
        /// </summary>
        internal static string OUIdentifier {
            get {
                return ResourceManager.GetString("OUIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Proxies.
        /// </summary>
        internal static string OutboundProxies {
            get {
                return ResourceManager.GetString("OutboundProxies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Proxy.
        /// </summary>
        internal static string OutboundProxy {
            get {
                return ResourceManager.GetString("OutboundProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Proxy Deleted Successfully.
        /// </summary>
        internal static string OutboundProxyDeleteSuccess {
            get {
                return ResourceManager.GetString("OutboundProxyDeleteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide details about the outbound proxies to use with this Tunnel Server configuration..
        /// </summary>
        internal static string OutboundProxyDescription {
            get {
                return ResourceManager.GetString("OutboundProxyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This proxy is being used by a server traffic rule. Please remove the association to delete this proxy configuration.
        /// </summary>
        internal static string OutboundProxyRemoveToolTip {
            get {
                return ResourceManager.GetString("OutboundProxyRemoveToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Proxy Saved Successfully.
        /// </summary>
        internal static string OutboundProxySaveSuccess {
            get {
                return ResourceManager.GetString("OutboundProxySaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Job Log Level Refused.
        /// </summary>
        internal static string OverrideJobLogLevelRefused {
            get {
                return ResourceManager.GetString("OverrideJobLogLevelRefused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adaptiva.
        /// </summary>
        internal static string P2PAdaptivaSetting {
            get {
                return ResourceManager.GetString("P2PAdaptivaSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution provides peer-to-peer app distribution capabilities for Windows devices on your internal network, which will improve app download speeds and eliminate the need for multiple distribution points..
        /// </summary>
        internal static string P2PBranchCacheDescription {
            get {
                return ResourceManager.GetString("P2PBranchCacheDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution.
        /// </summary>
        internal static string P2PBranchCacheEnabled {
            get {
                return ResourceManager.GetString("P2PBranchCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Profiles Page.
        /// </summary>
        internal static string P2PBranchCacheMovedToDeviceProfilesPage {
            get {
                return ResourceManager.GetString("P2PBranchCacheMovedToDeviceProfilesPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution Settings have moved to the {0}.
        /// </summary>
        internal static string P2PBranchCacheProfileLandingNew {
            get {
                return ResourceManager.GetString("P2PBranchCacheProfileLandingNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution.
        /// </summary>
        internal static string P2PBranchCacheSetting {
            get {
                return ResourceManager.GetString("P2PBranchCacheSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel PAC Reader.
        /// </summary>
        internal static string PACUtility {
            get {
                return ResourceManager.GetString("PACUtility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode Timeout Time Unit.
        /// </summary>
        internal static string PasscodeTimeoutTimeUnit {
            get {
                return ResourceManager.GetString("PasscodeTimeoutTimeUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords do not match.
        /// </summary>
        internal static string PasswordDoNotMatch {
            get {
                return ResourceManager.GetString("PasswordDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password expiration period must be greater than password notification period.
        /// </summary>
        internal static string PasswordExpirationMustBeGreaterThanPasswordNotification {
            get {
                return ResourceManager.GetString("PasswordExpirationMustBeGreaterThanPasswordNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch Management.
        /// </summary>
        internal static string PatchManagement {
            get {
                return ResourceManager.GetString("PatchManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This field is optional. Specify Path attribute only for command line tools like Curl. Path is only supported for macOS 10.15+.
        /// </summary>
        internal static string PathDescription {
            get {
                return ResourceManager.GetString("PathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to People.
        /// </summary>
        internal static string People {
            get {
                return ResourceManager.GetString("People", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let employees view organizational charts and easily search for and contact colleagues..
        /// </summary>
        internal static string PeopleDescription {
            get {
                return ResourceManager.GetString("PeopleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-App.
        /// </summary>
        internal static string PerApp {
            get {
                return ResourceManager.GetString("PerApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per Application.
        /// </summary>
        internal static string PerAppTunnelMode {
            get {
                return ResourceManager.GetString("PerAppTunnelMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peripherals.
        /// </summary>
        internal static string Peripherals {
            get {
                return ResourceManager.GetString("Peripherals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal App Privacy Policy.
        /// </summary>
        internal static string PersonalAppPrivacyPolicy {
            get {
                return ResourceManager.GetString("PersonalAppPrivacyPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have personal app privacy set to &apos;do not collect&apos; for one or more device types and you also have app list based compliance policies created at one or more OGs in the hierarchy. To honor your end-user privacy on these devices, moving forward personal app information will not be collected even if they have app-based compliance policies associated with them. Please make sure you do not have policies to mark device compliance status based on applications that could be sideloaded by end-users or personal app [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PersonalAppPrivacyPolicyMessage {
            get {
                return ResourceManager.GetString("PersonalAppPrivacyPolicyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Improvement Programs can only be accessed at Global organization group..
        /// </summary>
        internal static string PipSettingsCanBeAccessedAtGlobalOnly {
            get {
                return ResourceManager.GetString("PipSettingsCanBeAccessedAtGlobalOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform Features.
        /// </summary>
        internal static string PlatformFeatures {
            get {
                return ResourceManager.GetString("PlatformFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform OS Values.
        /// </summary>
        internal static string PlatformOSValues {
            get {
                return ResourceManager.GetString("PlatformOSValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform Setup.
        /// </summary>
        internal static string PlatformSetup {
            get {
                return ResourceManager.GetString("PlatformSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a value greater than or equal to {0}..
        /// </summary>
        internal static string PleaseEnterValueGreaterThanOrEqualToArg {
            get {
                return ResourceManager.GetString("PleaseEnterValueGreaterThanOrEqualToArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please generate the Access Token..
        /// </summary>
        internal static string PleaseGenerateAccessToken {
            get {
                return ResourceManager.GetString("PleaseGenerateAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select an App Tunnel Mode.
        /// </summary>
        internal static string PleaseSelectAnAppTunnelMode {
            get {
                return ResourceManager.GetString("PleaseSelectAnAppTunnelMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Allow Crash Reporting.
        /// </summary>
        internal static string PolicyAllowCrashReporting_Description {
            get {
                return ResourceManager.GetString("PolicyAllowCrashReporting_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Engine Backoff.
        /// </summary>
        internal static string PolicyEngineBackoff_Description {
            get {
                return ResourceManager.GetString("PolicyEngineBackoff_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Engine Max Concurrent Products.
        /// </summary>
        internal static string PolicyEngineMaxConcurrentProducts_Description {
            get {
                return ResourceManager.GetString("PolicyEngineMaxConcurrentProducts_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Engine Max Try Count.
        /// </summary>
        internal static string PolicyEngineMaxTryCount_Description {
            get {
                return ResourceManager.GetString("PolicyEngineMaxTryCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Engine Queue Auditing.
        /// </summary>
        internal static string PolicyEngineQueueAuditing_Description {
            get {
                return ResourceManager.GetString("PolicyEngineQueueAuditing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Sync Interval.
        /// </summary>
        internal static string PolicySyncInterval_Description {
            get {
                return ResourceManager.GetString("PolicySyncInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic: The connection to the remote PowerShell endpoint is made using the Basic authentication type.
        ///Negotiate: The connection to the remote PowerShell endpoint is made using Kerberos or NTLM over HTTPS. The server uses Kerberos to authenticate a domain account and NTLM for a local computer account. The username should be specified in the form of domain\username for domain users or servername\username for local users on a server computer.
        ///Kerberos: The connection is made using Kerberos authentication over [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PowerShellAuthenticationWithModernAuthTypeTooltip {
            get {
                return ResourceManager.GetString("PowerShellAuthenticationWithModernAuthTypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary User Account.
        /// </summary>
        internal static string PrimaryUserAccountCreation {
            get {
                return ResourceManager.GetString("PrimaryUserAccountCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When privacy is enabled for personal applications, the system will only collect and/or display applications that are defined within the Application Management or Compliance modules.  If utilizing Product Provisioning or iOS Single App Mode, please ensure that collection is enabled..
        /// </summary>
        internal static string PrivacyEnabledPersonalAppMessage {
            get {
                return ResourceManager.GetString("PrivacyEnabledPersonalAppMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy Policy Link.
        /// </summary>
        internal static string PrivacyPolicyLink_Description {
            get {
                return ResourceManager.GetString("PrivacyPolicyLink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applicable only for iOS devices.
        /// </summary>
        internal static string PrivacyRemoteControlTooltip {
            get {
                return ResourceManager.GetString("PrivacyRemoteControlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy Warning.
        /// </summary>
        internal static string PrivacyWarning {
            get {
                return ResourceManager.GetString("PrivacyWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Cache.
        /// </summary>
        internal static string ProductCache_Description {
            get {
                return ResourceManager.GetString("ProductCache_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Deployment Granularity.
        /// </summary>
        internal static string ProductDeploymentGranularity {
            get {
                return ResourceManager.GetString("ProductDeploymentGranularity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Deployment Granularity.
        /// </summary>
        internal static string ProductDeploymentGranularity_Description {
            get {
                return ResourceManager.GetString("ProductDeploymentGranularity_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting allows the Administrator to select whether data will be transferred through Relay Servers always per product, or by default with the fail-over to the Workspace ONE UEM server..
        /// </summary>
        internal static string ProductDeploymentGranularityHelp {
            get {
                return ResourceManager.GetString("ProductDeploymentGranularityHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Download Retry Count.
        /// </summary>
        internal static string ProductDownloadRetryCount {
            get {
                return ResourceManager.GetString("ProductDownloadRetryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting defines the number of times Hub retries to download the product from a Relay server..
        /// </summary>
        internal static string ProductDownloadRetryCountTooltip {
            get {
                return ResourceManager.GetString("ProductDownloadRetryCountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Provisioning Command Release Batch Size.
        /// </summary>
        internal static string ProductProvisioningCommandReleaseBatchSize_Description {
            get {
                return ResourceManager.GetString("ProductProvisioningCommandReleaseBatchSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If utilizing Product Provisioning, please ensure that collection is enabled..
        /// </summary>
        internal static string ProductProvisioningPrivacyInfo {
            get {
                return ResourceManager.GetString("ProductProvisioningPrivacyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Set Batch Size.
        /// </summary>
        internal static string ProductSetBatchSize_Description {
            get {
                return ResourceManager.GetString("ProductSetBatchSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password change successful. Queuing profile updates for the devices.
        /// </summary>
        internal static string ProfileInstallCommandTriggerForGSuitePasswordRotation {
            get {
                return ResourceManager.GetString("ProfileInstallCommandTriggerForGSuitePasswordRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Refresh Interval.
        /// </summary>
        internal static string ProfileRefreshInterval {
            get {
                return ResourceManager.GetString("ProfileRefreshInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Automatic Updates.
        /// </summary>
        internal static string ProtectionAgentAutomaticUpdates {
            get {
                return ResourceManager.GetString("ProtectionAgentAutomaticUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a valid IMEI number (15 digits).
        /// </summary>
        internal static string ProvideValidImeiNumber {
            get {
                return ResourceManager.GetString("ProvideValidImeiNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the Status Tracking Page for OOBE.
        /// </summary>
        internal static string ProvisionEntitiesOnWindowsOobeEnrollment {
            get {
                return ResourceManager.GetString("ProvisionEntitiesOnWindowsOobeEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this setting will display the Status tracking page during the Out of Box Enrollment (OOBE) which displays the provisioning status of the device and informs the user which apps, resources and policies have been installed..
        /// </summary>
        internal static string ProvisionEntitiesOnWindowsOobeEnrollmentToolTip {
            get {
                return ResourceManager.GetString("ProvisionEntitiesOnWindowsOobeEnrollmentToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Package Capacity.
        /// </summary>
        internal static string ProvisioningPackageCapacity_Description {
            get {
                return ResourceManager.GetString("ProvisioningPackageCapacity_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Package Max File Size.
        /// </summary>
        internal static string ProvisioningPackageMaxFileSize {
            get {
                return ResourceManager.GetString("ProvisioningPackageMaxFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Package Max File Size.
        /// </summary>
        internal static string ProvisioningPackageMaxFileSize_Description {
            get {
                return ResourceManager.GetString("ProvisioningPackageMaxFileSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default HTML message template that notifies an administrator that the provisioning package has been created and available for download..
        /// </summary>
        internal static string ProvisioningPackageNotificationMTD {
            get {
                return ResourceManager.GetString("ProvisioningPackageNotificationMTD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Package Overage Allowed.
        /// </summary>
        internal static string ProvisioningPackageOverageAllowed {
            get {
                return ResourceManager.GetString("ProvisioningPackageOverageAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Package Overage Allowed.
        /// </summary>
        internal static string ProvisioningPackageOverageAllowed_Description {
            get {
                return ResourceManager.GetString("ProvisioningPackageOverageAllowed_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Portal HMAC.
        /// </summary>
        internal static string ProvisioningPortalHmac_Description {
            get {
                return ResourceManager.GetString("ProvisioningPortalHmac_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Product Delete Notes Restricted.
        /// </summary>
        internal static string ProvisioningProductDeleteNotesRestricted_Description {
            get {
                return ResourceManager.GetString("ProvisioningProductDeleteNotesRestricted_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Product Delete Restricted.
        /// </summary>
        internal static string ProvisioningProductDeleteRestricted_Description {
            get {
                return ResourceManager.GetString("ProvisioningProductDeleteRestricted_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Product New Delete Notes Restricted.
        /// </summary>
        internal static string ProvisioningProductNewDeleteNotesRestricted_Description {
            get {
                return ResourceManager.GetString("ProvisioningProductNewDeleteNotesRestricted_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Product New Delete Restricted.
        /// </summary>
        internal static string ProvisioningProductNewDeleteRestricted_Description {
            get {
                return ResourceManager.GetString("ProvisioningProductNewDeleteRestricted_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provisioning Profile List Sample.
        /// </summary>
        internal static string ProvisioningProfileListSample_Description {
            get {
                return ResourceManager.GetString("ProvisioningProfileListSample_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy action for Windows apps is currently not supported. Please revise your rules and save again..
        /// </summary>
        internal static string ProxyActionErrorWindowsApps {
            get {
                return ResourceManager.GetString("ProxyActionErrorWindowsApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This proxy is being used by a server traffic rule:{0}. Please remove the association to delete this proxy configuration.
        /// </summary>
        internal static string ProxyBeingUsedArgs {
            get {
                return ResourceManager.GetString("ProxyBeingUsedArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy: {0} does not belong to the Tunnel configuration.
        /// </summary>
        internal static string ProxyDoesntBelongToTunnelConfigArgs {
            get {
                return ResourceManager.GetString("ProxyDoesntBelongToTunnelConfigArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please type only the hostname. Ex. example.com.
        /// </summary>
        internal static string ProxyFormatValidationError {
            get {
                return ResourceManager.GetString("ProxyFormatValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the port on SEG server box used for listening to the incoming requests. (Default:443).
        /// </summary>
        internal static string ProxyLinuxInternalPortTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxInternalPortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This port is used by SEG, when running in a clustered mode, to communicate to the other SEGs in the cluster.  Do not use the same port as the Distributed Cache. (Default: 41232). If deploying on UAG, this value is not configurable..
        /// </summary>
        internal static string ProxyLinuxSegClusteringPortTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxSegClusteringPortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This port is used for SEG when running in a clustered mode, to communicate to the Distributed Cache. Do not use the same port as Clustering. (Default: 5701). If deploying on UAG, this value is not configurable..
        /// </summary>
        internal static string ProxyLinuxSegDistributedCachePortTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxSegDistributedCachePortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External address for incoming mail traffic and policy updates from the UEM Console. This also serves as the FQDN if using TLS Port Sharing on UAG.
        ///(Ex: https://seg.soandso.com:8443).
        /// </summary>
        internal static string ProxyLinuxSegUrlAndPortTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxSegUrlAndPortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the hostname or IP address of each SEG in the cluster..
        /// </summary>
        internal static string ProxyLinuxServerIpsTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxServerIpsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If deploying SEG on UAG, this is required..
        /// </summary>
        internal static string ProxyLinuxUseSslForSegTooltip {
            get {
                return ResourceManager.GetString("ProxyLinuxUseSslForSegTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy: {0} not found.
        /// </summary>
        internal static string ProxyNotFoundArgs {
            get {
                return ResourceManager.GetString("ProxyNotFoundArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate proxy exists..
        /// </summary>
        internal static string ProxyWithSameNameAndPortExists {
            get {
                return ResourceManager.GetString("ProxyWithSameNameAndPortExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Key Infrastructure.
        /// </summary>
        internal static string PublicKeyInfrastructure {
            get {
                return ResourceManager.GetString("PublicKeyInfrastructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public SSL.
        /// </summary>
        internal static string PublicSSL {
            get {
                return ResourceManager.GetString("PublicSSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy Catalog (Android).
        /// </summary>
        internal static string PublishAndroidAppCatalog {
            get {
                return ResourceManager.GetString("PublishAndroidAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish the catalog to devices in this Organization Group. Legacy Catalog settings will deliver the catalog as a webclip/shortcut profile. Intelligent Hub Catalog settings will deliver the catalog within Intelligent Hub..
        /// </summary>
        internal static string PublishAppCatalogInfo {
            get {
                return ResourceManager.GetString("PublishAppCatalogInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish the catalog to devices in this Organization Group. Legacy Catalog settings will deliver the catalog as a webclip/shortcut profile..
        /// </summary>
        internal static string PublishAppCatalogInfoMultiHubEnabledGreenField {
            get {
                return ResourceManager.GetString("PublishAppCatalogInfoMultiHubEnabledGreenField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish the catalog to devices in this Organization Group. Legacy Catalog settings will deliver the catalog as a webclip/shortcut profile. Intelligent Hub App Catalog settings have moved to Workspace ONE Hub Services. The read-only settings apply to older versions of Intelligent Hub. Navigate to Workspace ONE Hub Services to learn more..
        /// </summary>
        internal static string PublishAppCatalogInfoWithMigration {
            get {
                return ResourceManager.GetString("PublishAppCatalogInfoWithMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy Catalog (macOS).
        /// </summary>
        internal static string PublishAppleMacOsxAppCatalog {
            get {
                return ResourceManager.GetString("PublishAppleMacOsxAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publish Workspace ONE Intelligent Hub.
        /// </summary>
        internal static string PublishAwProtectionAgent {
            get {
                return ResourceManager.GetString("PublishAwProtectionAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy Catalog (iOS).
        /// </summary>
        internal static string PublishIosAppCatalog {
            get {
                return ResourceManager.GetString("PublishIosAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy Catalog (Windows Desktop).
        /// </summary>
        internal static string PublishWinRtAppCatalog {
            get {
                return ResourceManager.GetString("PublishWinRtAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Relay Server Inactive State Factor.
        /// </summary>
        internal static string PullRelayServerInactiveStateFactor {
            get {
                return ResourceManager.GetString("PullRelayServerInactiveStateFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Relay Server Inactive State Factor.
        /// </summary>
        internal static string PullRelayServerInactiveStateFactor_Description {
            get {
                return ResourceManager.GetString("PullRelayServerInactiveStateFactor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Relay Server In Progress Cut Off Time.
        /// </summary>
        internal static string PullRelayServerInProgressCutOffTime {
            get {
                return ResourceManager.GetString("PullRelayServerInProgressCutOffTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Relay Server In Progress Cut Off Time.
        /// </summary>
        internal static string PullRelayServerInProgressCutOffTime_Description {
            get {
                return ResourceManager.GetString("PullRelayServerInProgressCutOffTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Service Based Relay Server Help Link.
        /// </summary>
        internal static string PullServiceBasedRelayServerHelpLink {
            get {
                return ResourceManager.GetString("PullServiceBasedRelayServerHelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull Service Based Relay Server Help Link.
        /// </summary>
        internal static string PullServiceBasedRelayServerHelpLink_Description {
            get {
                return ResourceManager.GetString("PullServiceBasedRelayServerHelpLink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purge Job.
        /// </summary>
        internal static string PurgeJob {
            get {
                return ResourceManager.GetString("PurgeJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed System Apps and Push to CDN Job.
        /// </summary>
        internal static string PushLauncherToCdnJob {
            get {
                return ResourceManager.GetString("PushLauncherToCdnJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python 3 Path.
        /// </summary>
        internal static string Python3ExecutablePath {
            get {
                return ResourceManager.GetString("Python3ExecutablePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the path for running Python 3 scripts. The binary must be codesigned and with 755 permissions, or else Intelligent Hub will fallback to the default path of /usr/local/hub/python3. Symlink paths are permitted, and spaces do not need to be escaped..
        /// </summary>
        internal static string Python3ExecutablePathTooltip {
            get {
                return ResourceManager.GetString("Python3ExecutablePathTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Batch Size.
        /// </summary>
        internal static string QueueBatchSize_Description {
            get {
                return ResourceManager.GetString("QueueBatchSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Devices In PE On Sample Change.
        /// </summary>
        internal static string QueueDevicesInPEOnSampleChange_Description {
            get {
                return ResourceManager.GetString("QueueDevicesInPEOnSampleChange_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Start Guide.
        /// </summary>
        internal static string QuickStartGuide {
            get {
                return ResourceManager.GetString("QuickStartGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reached Cloud Connector running version {0} at {1} ({2}).
        /// </summary>
        internal static string ReachedCloudConnectorRunningVersion {
            get {
                return ResourceManager.GetString("ReachedCloudConnectorRunningVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recurrence Frequency Must be Greater Than or Equal To {0} hours.
        /// </summary>
        internal static string RecurrenceFrequencyGreaterThanEqualToArgHours {
            get {
                return ResourceManager.GetString("RecurrenceFrequencyGreaterThanEqualToArgHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please refer to the VMware Tunnel Guide for more details..
        /// </summary>
        internal static string ReferToTunnelGuide {
            get {
                return ResourceManager.GetString("ReferToTunnelGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regenerate Certificate.
        /// </summary>
        internal static string RegenerateCertificate {
            get {
                return ResourceManager.GetString("RegenerateCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regenerating these certificates will cause Tunnel Proxy to stop functioning and will require setup and configuration to be performed on each Tunnel Proxy server before they can be used again..
        /// </summary>
        internal static string RegenerateProxySslCertificateDescription {
            get {
                return ResourceManager.GetString("RegenerateProxySslCertificateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register a New Client.
        /// </summary>
        internal static string RegisterYatsClient {
            get {
                return ResourceManager.GetString("RegisterYatsClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry Entry for Friendly Name (AirWatch 4.0 Agent Onwards).
        /// </summary>
        internal static string RegistryEntryForFriendlyName {
            get {
                return ResourceManager.GetString("RegistryEntryForFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: VMware recommends not enabling this feature. When enabled, the software will no longer require that apps be deleted and reinstalled when one user stops using a shared device and another user begins using the same device.
        ///
        ///This means that the next user may have access to the original user’s app data, including any personal or sensitive data. Ensuring the security of app data by end users using the same device is your sole responsibility.
        ///
        ///VMware is not liable for any damages in connection with y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReinstallAppOnLogoutNeverDescription {
            get {
                return ResourceManager.GetString("ReinstallAppOnLogoutNeverDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reinstall Android Apps.
        /// </summary>
        internal static string ReinstallAppsOnLogOut {
            get {
                return ResourceManager.GetString("ReinstallAppsOnLogOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an app is assigned to the staging user and end-users logging in and out of the device, choose one of following preferred app management behaviors: Always reinstall app between users, never reinstall app between users, or only reinstall app if the Hub cannot clear app data between user sessions..
        /// </summary>
        internal static string ReinstallAppsOnLogoutTooltip {
            get {
                return ResourceManager.GetString("ReinstallAppsOnLogoutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relay Server Content Transfer.
        /// </summary>
        internal static string RelayServerContentTransfer_Description {
            get {
                return ResourceManager.GetString("RelayServerContentTransfer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Address.
        /// </summary>
        internal static string RemoteAddress {
            get {
                return ResourceManager.GetString("RemoteAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location Information Sample.
        /// </summary>
        internal static string RemoteFindSample {
            get {
                return ResourceManager.GetString("RemoteFindSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting device location data.
        /// </summary>
        internal static string RemoteFindSampleInfo {
            get {
                return ResourceManager.GetString("RemoteFindSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location Information Sample.
        /// </summary>
        internal static string RemoteFindSampleInMinutes {
            get {
                return ResourceManager.GetString("RemoteFindSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample must be between 2 hours and 30 days (inclusive)..
        /// </summary>
        internal static string RemoteFindSampleIntervalErrorMessage {
            get {
                return ResourceManager.GetString("RemoteFindSampleIntervalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Find Sample Time Mode.
        /// </summary>
        internal static string RemoteFindSampleTimeMode {
            get {
                return ResourceManager.GetString("RemoteFindSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Management Confirmed.
        /// </summary>
        internal static string RemoteManagementConfirmed {
            get {
                return ResourceManager.GetString("RemoteManagementConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Management Failed.
        /// </summary>
        internal static string RemoteManagementFailed {
            get {
                return ResourceManager.GetString("RemoteManagementFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Management Refused.
        /// </summary>
        internal static string RemoteManagementRefused {
            get {
                return ResourceManager.GetString("RemoteManagementRefused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Management Requested.
        /// </summary>
        internal static string RemoteManagementRequested {
            get {
                return ResourceManager.GetString("RemoteManagementRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Compliance Policy Confirmed.
        /// </summary>
        internal static string RemoveCompliancePolicyConfirmed {
            get {
                return ResourceManager.GetString("RemoveCompliancePolicyConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Compliane Policy Failed.
        /// </summary>
        internal static string RemoveCompliancePolicyFailed {
            get {
                return ResourceManager.GetString("RemoveCompliancePolicyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Compliance Policy Rejected.
        /// </summary>
        internal static string RemoveCompliancePolicyRejected {
            get {
                return ResourceManager.GetString("RemoveCompliancePolicyRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Compliance Policy Requested.
        /// </summary>
        internal static string RemoveCompliancePolicyRequested {
            get {
                return ResourceManager.GetString("RemoveCompliancePolicyRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Certificate.
        /// </summary>
        internal static string ReplaceCertificate {
            get {
                return ResourceManager.GetString("ReplaceCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replacing the AirWatch Agent app.
        /// </summary>
        internal static string ReplacingAirwatchAgentApp {
            get {
                return ResourceManager.GetString("ReplacingAirwatchAgentApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require Intelligent Hub Enrollment for macOS.
        /// </summary>
        internal static string RequireAgentEnrollmentForMacOsX {
            get {
                return ResourceManager.GetString("RequireAgentEnrollmentForMacOsX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required * (?).
        /// </summary>
        internal static string RequiredFieldErrorMsg {
            get {
                return ResourceManager.GetString("RequiredFieldErrorMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Enrollment via Content, Boxer, and Web.
        /// </summary>
        internal static string RequireMDMEnrollment {
            get {
                return ResourceManager.GetString("RequireMDMEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REST API Key.
        /// </summary>
        internal static string RestApiKey {
            get {
                return ResourceManager.GetString("RestApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REST API usage is not available.
        /// </summary>
        internal static string RestApiUsageNotAvailable {
            get {
                return ResourceManager.GetString("RestApiUsageNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API server throttling limits, daily quota and current usage are listed below. Contact your System Administrator to change these settings..
        /// </summary>
        internal static string RestApiUsageTabInfo {
            get {
                return ResourceManager.GetString("RestApiUsageTabInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-sync device data from UEM to Azure Services.
        /// </summary>
        internal static string ReSyncDeviceData {
            get {
                return ResourceManager.GetString("ReSyncDeviceData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-sync device data from UEM to Azure service..
        /// </summary>
        internal static string ReSyncDeviceDataToolTip {
            get {
                return ResourceManager.GetString("ReSyncDeviceDataToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retain Agent Executables After Enterprise Wipe.
        /// </summary>
        internal static string RetainAgentExecutablesAfterEnterpriseWipe {
            get {
                return ResourceManager.GetString("RetainAgentExecutablesAfterEnterpriseWipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your identity provider will not be able to communicate with Workspace ONE UEM if this token is removed..
        /// </summary>
        internal static string RevokeAccessTokenAlert {
            get {
                return ResourceManager.GetString("RevokeAccessTokenAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RFS StandBy.
        /// </summary>
        internal static string RfsStandBy {
            get {
                return ResourceManager.GetString("RfsStandBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rugged Devices.
        /// </summary>
        internal static string RuggedDevices {
            get {
                return ResourceManager.GetString("RuggedDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rules.
        /// </summary>
        internal static string Rules {
            get {
                return ResourceManager.GetString("Rules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SafetyNet App Verification.
        /// </summary>
        internal static string SafetyNetAppVerification {
            get {
                return ResourceManager.GetString("SafetyNetAppVerification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Verification alerts the user if potentially harmful apps are installed on the device..
        /// </summary>
        internal static string SafetyNetAppVerificationTooltip {
            get {
                return ResourceManager.GetString("SafetyNetAppVerificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Salt Value.
        /// </summary>
        internal static string SaltValue {
            get {
                return ResourceManager.GetString("SaltValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Same HostName for Frontend/Backend server is not allowed in Cascade mode.
        /// </summary>
        internal static string SameHostNameFrontEndBackEndNotAllowed {
            get {
                return ResourceManager.GetString("SameHostNameFrontEndBackEndNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAML Authentication Setup Information.
        /// </summary>
        internal static string SamlAuthSetupInformation {
            get {
                return ResourceManager.GetString("SamlAuthSetupInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling SAML authentication for directory users will bypass other authentication modes. Ensure that the Identity Provider returns the &apos;{0}&apos; attribute as part of the SAML response..
        /// </summary>
        internal static string SamlAuthWarning {
            get {
                return ResourceManager.GetString("SamlAuthWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAML is not configured.
        /// </summary>
        internal static string SamlNotConfigured {
            get {
                return ResourceManager.GetString("SamlNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample must be between 1 day and 30 days (inclusive)..
        /// </summary>
        internal static string SampleGreaterThanOneDayErrorMessage {
            get {
                return ResourceManager.GetString("SampleGreaterThanOneDayErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample must be between 2 hours and 30 days (inclusive)..
        /// </summary>
        internal static string SampleIntervalBetweenTwoHoursAndThirtyDaysErrorMessage {
            get {
                return ResourceManager.GetString("SampleIntervalBetweenTwoHoursAndThirtyDaysErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample must be between 6 hours and 30 days (inclusive)..
        /// </summary>
        internal static string SampleIntervalErrorMessage {
            get {
                return ResourceManager.GetString("SampleIntervalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung E-FOTA.
        /// </summary>
        internal static string SamsungEfota {
            get {
                return ResourceManager.GetString("SamsungEfota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung Enterprise FOTA (Firmware Over-The-Air) allows you to manage and restrict firmware updates on Samsung devices running Android 7.0 Nougat and higher.  Enter your Samung E-FOTA settings provided by your licensed reseller below.  After saving these settings, create an Android Restrictions Profile and check &quot;Register Samsung E-FOTA&quot; to register and lock down assigned devices to their current firmware version.  To publish new firmware versions to devices, go to Devices &gt; Lifecycle &gt; Updates and select th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SamsungEfotaRegistrationInfo {
            get {
                return ResourceManager.GetString("SamsungEfotaRegistrationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAN Type.
        /// </summary>
        internal static string SanType {
            get {
                return ResourceManager.GetString("SanType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Certificate Authority.
        /// </summary>
        internal static string SaveCertificateAuthority {
            get {
                return ResourceManager.GetString("SaveCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved successfully, please refresh to load changes.
        /// </summary>
        internal static string SavedSuccessfullyPleaseRefreshToLoadChanges {
            get {
                return ResourceManager.GetString("SavedSuccessfullyPleaseRefreshToLoadChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving New SSL Public Keys To Pin.
        /// </summary>
        internal static string SavingNewSSLPublicKeysToPin {
            get {
                return ResourceManager.GetString("SavingNewSSLPublicKeysToPin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule OS Update Retry Job.
        /// </summary>
        internal static string ScheduleOSUpdateRetryJob {
            get {
                return ResourceManager.GetString("ScheduleOSUpdateRetryJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SCIM.
        /// </summary>
        internal static string SCIM {
            get {
                return ResourceManager.GetString("SCIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret token has been successfully generated. Now, copy and paste this token in your identity provider portal..
        /// </summary>
        internal static string ScimAuthTokenSuccessfulGeneration {
            get {
                return ResourceManager.GetString("ScimAuthTokenSuccessfulGeneration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SCIM (System for Cross-Domain Identity Management) Directory is a general purpose RESTful server that can be used by applications as a repository for shared identity information. Currently, Workspace ONE supports SCIM Configuration for Azure Active Directory..
        /// </summary>
        internal static string ScimConfigureInfoText {
            get {
                return ResourceManager.GetString("ScimConfigureInfoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SCIM Provisioning.
        /// </summary>
        internal static string ScimProvisioning {
            get {
                return ResourceManager.GetString("ScimProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please revoke the SCIM Provisioning access token for this organization group before switching to a different directory services configuration..
        /// </summary>
        internal static string ScimProvisioningAccessTokenNeedsToBeRevoked {
            get {
                return ResourceManager.GetString("ScimProvisioningAccessTokenNeedsToBeRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Access token found for this directory configuration..
        /// </summary>
        internal static string ScimProvisioningAccessTokenNotFound {
            get {
                return ResourceManager.GetString("ScimProvisioningAccessTokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access token already exists for this Directory Services configuration. Please revoke the existing token and regenerate a new token if needed..
        /// </summary>
        internal static string ScimProvisioningAuthTokenAlreadyExists {
            get {
                return ResourceManager.GetString("ScimProvisioningAuthTokenAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate the Access token..
        /// </summary>
        internal static string ScimProvisioningAuthTokenGenerationFailed {
            get {
                return ResourceManager.GetString("ScimProvisioningAuthTokenGenerationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to revoke the Access token..
        /// </summary>
        internal static string ScimProvisioningAuthTokenRevocationFailed {
            get {
                return ResourceManager.GetString("ScimProvisioningAuthTokenRevocationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access token has been revoked successfully..
        /// </summary>
        internal static string ScimProvisioningAuthTokenRevokedSuccessfully {
            get {
                return ResourceManager.GetString("ScimProvisioningAuthTokenRevokedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete and save your SCIM configuration to generate a secret token, and then paste it into your identity provider portal..
        /// </summary>
        internal static string ScimProvisioningConfigurationAuthToken {
            get {
                return ResourceManager.GetString("ScimProvisioningConfigurationAuthToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access token is configured only for SCIM Provisioning directory configuration. Please configure and save the SCIM configuration before you try performing the same operation again..
        /// </summary>
        internal static string ScimProvisioningTypeRequiredForAccessToken {
            get {
                return ResourceManager.GetString("ScimProvisioningTypeRequiredForAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scripts &amp; Sensors.
        /// </summary>
        internal static string ScriptsAndSensors {
            get {
                return ResourceManager.GetString("ScriptsAndSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SDK Settings &amp; Policies.
        /// </summary>
        internal static string SdkSettingsAndPolicies {
            get {
                return ResourceManager.GetString("SdkSettingsAndPolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search an app.
        /// </summary>
        internal static string SearchAnApp {
            get {
                return ResourceManager.GetString("SearchAnApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret Token.
        /// </summary>
        internal static string SecretToken {
            get {
                return ResourceManager.GetString("SecretToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure Boot Config Policy Allowlist.
        /// </summary>
        internal static string SecureBootConfigPolicyAllowlist_Description {
            get {
                return ResourceManager.GetString("SecureBootConfigPolicyAllowlist_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure Boot Config Policy Hash Check.
        /// </summary>
        internal static string SecureBootConfigPolicyHashCheck_Description {
            get {
                return ResourceManager.GetString("SecureBootConfigPolicyHashCheck_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure Channel Server Certificate Not Trusted.
        /// </summary>
        internal static string SecureChannelServerCertificateNotTrusted {
            get {
                return ResourceManager.GetString("SecureChannelServerCertificateNotTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Group - Compliant Devices.
        /// </summary>
        internal static string SecurityGroupCompliantDevices {
            get {
                return ResourceManager.GetString("SecurityGroupCompliantDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security group do not exist..
        /// </summary>
        internal static string SecurityGroupDoesNotExist {
            get {
                return ResourceManager.GetString("SecurityGroupDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Group - Non-Compliant Devices.
        /// </summary>
        internal static string SecurityGroupNonCompliantDevices {
            get {
                return ResourceManager.GetString("SecurityGroupNonCompliantDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Security Identifier (SID) in certificate.
        /// </summary>
        internal static string SecurityIdentifierEnabled {
            get {
                return ResourceManager.GetString("SecurityIdentifierEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this flag automatically includes the SID attribute from LDAP in the certificates subject name for added security..
        /// </summary>
        internal static string SecurityIdentifierEnabledInfo {
            get {
                return ResourceManager.GetString("SecurityIdentifierEnabledInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting the Security Information Sample which contains the passcode status, firewall status and anti-virus status on the device..
        /// </summary>
        internal static string SecurityInformationSampleInfo {
            get {
                return ResourceManager.GetString("SecurityInformationSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Information Sample.
        /// </summary>
        internal static string SecurityInformationSampleInMinutes {
            get {
                return ResourceManager.GetString("SecurityInformationSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Information Sample Time Mode.
        /// </summary>
        internal static string SecurityInformationSampleTimeMode {
            get {
                return ResourceManager.GetString("SecurityInformationSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security patch date field is not populated..
        /// </summary>
        internal static string SecurityPatchDateNotSet {
            get {
                return ResourceManager.GetString("SecurityPatchDateNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security patch date is saved as UTC date format..
        /// </summary>
        internal static string SecurityPatchDateToolTip {
            get {
                return ResourceManager.GetString("SecurityPatchDateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent man-in-the-middle (MITM) attacks with enhanced security that provides an additional layer of trust between hosts and devices..
        /// </summary>
        internal static string SecuritySSLPinningDescription {
            get {
                return ResourceManager.GetString("SecuritySSLPinningDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed System Apps Job.
        /// </summary>
        internal static string SeedSystemAppsJob {
            get {
                return ResourceManager.GetString("SeedSystemAppsJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore any SSL errors for communication between SEG and the AirWatch infrastructure.
        /// </summary>
        internal static string SegIgnoreSslErrorsWithAwToolTip {
            get {
                return ResourceManager.GetString("SegIgnoreSslErrorsWithAwToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select option.
        /// </summary>
        internal static string SelectOption {
            get {
                return ResourceManager.GetString("SelectOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Security Group.
        /// </summary>
        internal static string SelectSecurityGroup {
            get {
                return ResourceManager.GetString("SelectSecurityGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Enable to use Adaptiva Public Certificate.
        /// </summary>
        internal static string SelectToEnableAdaptivaPublicCertificate {
            get {
                return ResourceManager.GetString("SelectToEnableAdaptivaPublicCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Action Source.
        /// </summary>
        internal static string ServerActionSource {
            get {
                return ResourceManager.GetString("ServerActionSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Authentication.
        /// </summary>
        internal static string ServerAuthentication {
            get {
                return ResourceManager.GetString("ServerAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The limit imposed on an OG for a 1 minute interval. 0 turns off service throttling..
        /// </summary>
        internal static string ServerThrottlingToolTip {
            get {
                return ResourceManager.GetString("ServerThrottlingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add rules based on your network configuration that will be applied to the app traffic flow from the Tunnel server(s)..
        /// </summary>
        internal static string ServerTrafficRuleDescription {
            get {
                return ResourceManager.GetString("ServerTrafficRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Traffic Rules.
        /// </summary>
        internal static string ServerTrafficRules {
            get {
                return ResourceManager.GetString("ServerTrafficRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Logs.
        /// </summary>
        internal static string ServiceLogs {
            get {
                return ResourceManager.GetString("ServiceLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Status.
        /// </summary>
        internal static string ServiceStatus {
            get {
                return ResourceManager.GetString("ServiceStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution reduces network traffic and the time it takes to install Win32 apps for deployments using branch office structures. Additional infrastructure and licensing may be required for advanced deployments..
        /// </summary>
        internal static string SettingsAdaptivaSettingDescription {
            get {
                return ResourceManager.GetString("SettingsAdaptivaSettingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChromeBook Agent Settings.
        /// </summary>
        internal static string Settingschromebookagentsettings {
            get {
                return ResourceManager.GetString("Settingschromebookagentsettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an Organization Group below or upload an XML file from another environment to compare Organization Group settings side by side. The XML file can be exported from the Settings Summary page..
        /// </summary>
        internal static string SettingsComparisonNote {
            get {
                return ResourceManager.GetString("SettingsComparisonNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings Configurations.
        /// </summary>
        internal static string SettingsConfigurations {
            get {
                return ResourceManager.GetString("SettingsConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to the Configurations sub-menu under the Groups and Settings main-menu.
        /// </summary>
        internal static string SettingsConfigurationsHelp {
            get {
                return ResourceManager.GetString("SettingsConfigurationsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting can be enabled only at organization group of type &quot;Customer&quot;..
        /// </summary>
        internal static string SettingsOnlyValidAtCustomer {
            get {
                return ResourceManager.GetString("SettingsOnlyValidAtCustomer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Below is a list of all settings in your environment. To compare Organization Groups side by side, export the XML file and go to the Settings Comparison page to proceed..
        /// </summary>
        internal static string SettingsSummaryNote {
            get {
                return ResourceManager.GetString("SettingsSummaryNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh the page and retest the connection. If the test connection continues to fail, please retry EMM registration..
        /// </summary>
        internal static string SetUpRequired {
            get {
                return ResourceManager.GetString("SetUpRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Logout.
        /// </summary>
        internal static string SharedDeviceAutoLogout {
            get {
                return ResourceManager.GetString("SharedDeviceAutoLogout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Logout After.
        /// </summary>
        internal static string SharedDeviceAutoLogoutAfter {
            get {
                return ResourceManager.GetString("SharedDeviceAutoLogoutAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Device/CICO.
        /// </summary>
        internal static string SharedDeviceCICO {
            get {
                return ResourceManager.GetString("SharedDeviceCICO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Android Device Passcode.
        /// </summary>
        internal static string SharedDeviceClearAndroidDevicePasscode {
            get {
                return ResourceManager.GetString("SharedDeviceClearAndroidDevicePasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear iOS Device Passcode.
        /// </summary>
        internal static string SharedDeviceCleariOSDevicePasscode {
            get {
                return ResourceManager.GetString("SharedDeviceCleariOSDevicePasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logout Settings.
        /// </summary>
        internal static string SharedDeviceLogoutSettings {
            get {
                return ResourceManager.GetString("SharedDeviceLogoutSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Device Passcodes cannot be null.
        /// </summary>
        internal static string SharedDevicePasswordsCannotBeNull {
            get {
                return ResourceManager.GetString("SharedDevicePasswordsCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, iPads will enroll in Shared mode where users will log in using their Managed Apple ID. Shared devices with Apple Business Manager require iOS 13.4 or greater..
        /// </summary>
        internal static string ShareDevicesTooltip {
            get {
                return ResourceManager.GetString("ShareDevicesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ship-To Account Number.
        /// </summary>
        internal static string ShipToAccountNumber {
            get {
                return ResourceManager.GetString("ShipToAccountNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ship-To Account Number is required.
        /// </summary>
        internal static string ShipToAccountNumberIsRequired {
            get {
                return ResourceManager.GetString("ShipToAccountNumberIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show user Privacy Prompt for log collection.
        /// </summary>
        internal static string ShowUserPrivacyPromptForLogCollection {
            get {
                return ResourceManager.GetString("ShowUserPrivacyPromptForLogCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this is enabled, the user will be prompted with a privacy prompt if they initiate a Hub Log Collect and Send action. The privacy prompt will contain information about what data is collected in the logs and require the user&apos;s acceptance before the logs are transmitted..
        /// </summary>
        internal static string ShowUserPrivacyPromptForLogCollectionTooltip {
            get {
                return ResourceManager.GetString("ShowUserPrivacyPromptForLogCollectionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing Service Certificate Auto Rotation Job.
        /// </summary>
        internal static string SigningServiceCertificateAutoRotationJob {
            get {
                return ResourceManager.GetString("SigningServiceCertificateAutoRotationJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SignProfiles.
        /// </summary>
        internal static string SignProfiles {
            get {
                return ResourceManager.GetString("SignProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site URLs page.
        /// </summary>
        internal static string SiteUrlsPage {
            get {
                return ResourceManager.GetString("SiteUrlsPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skeleton Profile Generation Job.
        /// </summary>
        internal static string SkeletonProfileGenerationJob {
            get {
                return ResourceManager.GetString("SkeletonProfileGenerationJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Biometric ID.
        /// </summary>
        internal static string SkipBiometric {
            get {
                return ResourceManager.GetString("SkipBiometric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to configure Biometric ID during the Setup Assistant..
        /// </summary>
        internal static string SkipBiometricTooltip {
            get {
                return ResourceManager.GetString("SkipBiometricTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Account Setup.
        /// </summary>
        internal static string SkipPrimaryAccountCreation {
            get {
                return ResourceManager.GetString("SkipPrimaryAccountCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices enrolled through Intelligent Hub will be MDM managed by default. Enable and select the appropriate Smart Groups below to allow devices to enroll without MDM management. Enrollment can be enabled based on the following criteria when utilizing smart groups: OS Version, Ownership Type, and User Group. Use Adaptive Management app policies to control device management levels for iOS devices enrolled without management..
        /// </summary>
        internal static string SmartGroupManagementMode {
            get {
                return ResourceManager.GetString("SmartGroupManagementMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SOCKS.
        /// </summary>
        internal static string SOCKS {
            get {
                return ResourceManager.GetString("SOCKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Management.
        /// </summary>
        internal static string SoftwareManagement {
            get {
                return ResourceManager.GetString("SoftwareManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound File Name.
        /// </summary>
        internal static string SoundFileName {
            get {
                return ResourceManager.GetString("SoundFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL.
        /// </summary>
        internal static string SSL {
            get {
                return ResourceManager.GetString("SSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL.
        /// </summary>
        internal static string SslProvider {
            get {
                return ResourceManager.GetString("SslProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start exploring Drop ship Provisioning.
        /// </summary>
        internal static string StartExploringDropshipProvisioning {
            get {
                return ResourceManager.GetString("StartExploringDropshipProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Server Traffic Rules to utilize third-party web proxies configured in your network including outbound proxies..
        /// </summary>
        internal static string STRCardDescription {
            get {
                return ResourceManager.GetString("STRCardDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Traffic Rule uuid does not belong to the Tunnel Configuration..
        /// </summary>
        internal static string STRDoesntBelongToTunnelConfig {
            get {
                return ResourceManager.GetString("STRDoesntBelongToTunnelConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success, Server Traffic Rules have been applied.
        /// </summary>
        internal static string STRSuccessMsg {
            get {
                return ResourceManager.GetString("STRSuccessMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscriptions.
        /// </summary>
        internal static string Subscriptions {
            get {
                return ResourceManager.GetString("Subscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applicable only for Android and macOS devices.
        /// </summary>
        internal static string SupportedDeviceTypesForDeviceLogRequest {
            get {
                return ResourceManager.GetString("SupportedDeviceTypesForDeviceLogRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend Product Provisioning.
        /// </summary>
        internal static string SuspendProductProvisioning {
            get {
                return ResourceManager.GetString("SuspendProductProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend Product Provisioning.
        /// </summary>
        internal static string SuspendProductProvisioning_Description {
            get {
                return ResourceManager.GetString("SuspendProductProvisioning_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspicious Activity Logs.
        /// </summary>
        internal static string SuspiciousActivityLogs {
            get {
                return ResourceManager.GetString("SuspiciousActivityLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Suspicious Activity Log settings are enabled, devices will log every Bluetooth and USB connection that occurs except Bluetooth headsets and USB charging. To access Suspicious Activity Logs, Syslog settings must be correctly configured {0}..
        /// </summary>
        internal static string SuspiciousActivityLogsMessage {
            get {
                return ResourceManager.GetString("SuspiciousActivityLogsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Action Number.
        /// </summary>
        internal static string SyncActionNumber {
            get {
                return ResourceManager.GetString("SyncActionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Azure Services.
        /// </summary>
        internal static string SyncAzureServices {
            get {
                return ResourceManager.GetString("SyncAzureServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync from Azure Services to UEM to update the status of Azure device partner compliance since the last successful sync..
        /// </summary>
        internal static string SyncAzureServicesToolTip {
            get {
                return ResourceManager.GetString("SyncAzureServicesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Device Updates.
        /// </summary>
        internal static string SyncDeviceUpdatesJob {
            get {
                return ResourceManager.GetString("SyncDeviceUpdatesJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User attribute sync with directory failed. Please refer to console events..
        /// </summary>
        internal static string SyncFailedReferConsoleEvents {
            get {
                return ResourceManager.GetString("SyncFailedReferConsoleEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Metadata.
        /// </summary>
        internal static string SyncMetadataServiceJob {
            get {
                return ResourceManager.GetString("SyncMetadataServiceJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync with NSX.
        /// </summary>
        internal static string SyncWithNsx {
            get {
                return ResourceManager.GetString("SyncWithNsx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Information and Event Management (SIEM) technology collects information about security alerts generated by network hardware and software components, and generates reports to help you monitor activity, perform log audits, and respond to incidents. Workspace ONE integrates with your SIEM tools by sending event logs using Syslog..
        /// </summary>
        internal static string SyslogDescription {
            get {
                return ResourceManager.GetString("SyslogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syslog Hostname.
        /// </summary>
        internal static string SyslogHostName {
            get {
                return ResourceManager.GetString("SyslogHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create, customize and assign unique Terms of Use for each Organization Group. Ensure employees agree to each policy by defining and enforcing Terms of Use for console usage, device enrollment, and SDK integrated Application usage..
        /// </summary>
        internal static string SystemEULADescription {
            get {
                return ResourceManager.GetString("SystemEULADescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Proxy Setting.
        /// </summary>
        internal static string SystemProxySetting {
            get {
                return ResourceManager.GetString("SystemProxySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Proxy Settings.
        /// </summary>
        internal static string SystemProxySettings {
            get {
                return ResourceManager.GetString("SystemProxySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template OG.
        /// </summary>
        internal static string TemplateOg {
            get {
                return ResourceManager.GetString("TemplateOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Over HTTP/2.
        /// </summary>
        internal static string TestApnsHttp2Connection {
            get {
                return ResourceManager.GetString("TestApnsHttp2Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests connection between Workspace ONE UEM and the Apple HTTP/2 API endpoint. By default, APNs messages are sent over the Apple legacy binary interface, not the HTTP/2 endpoint. This test will confirm whether or not this connection is successful. In the future, Workspace ONE UEM will update default settings to send APNs messages over the Apple HTTP/2 based API..
        /// </summary>
        internal static string TestApnsHttp2ConnectionDescription {
            get {
                return ResourceManager.GetString("TestApnsHttp2ConnectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Dynamic Decay.
        /// </summary>
        internal static string ThreadDynamicDecay {
            get {
                return ResourceManager.GetString("ThreadDynamicDecay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Dynamic Decay.
        /// </summary>
        internal static string ThreadDynamicDecay_Description {
            get {
                return ResourceManager.GetString("ThreadDynamicDecay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Max.
        /// </summary>
        internal static string ThreadMax {
            get {
                return ResourceManager.GetString("ThreadMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Max.
        /// </summary>
        internal static string ThreadMax_Description {
            get {
                return ResourceManager.GetString("ThreadMax_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Min.
        /// </summary>
        internal static string ThreadMin {
            get {
                return ResourceManager.GetString("ThreadMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread Min.
        /// </summary>
        internal static string ThreadMin_Description {
            get {
                return ResourceManager.GetString("ThreadMin_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timer Interval.
        /// </summary>
        internal static string TimerInterval_Description {
            get {
                return ResourceManager.GetString("TimerInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timer On.
        /// </summary>
        internal static string TimerOn {
            get {
                return ResourceManager.GetString("TimerOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timer On.
        /// </summary>
        internal static string TimerOn_Description {
            get {
                return ResourceManager.GetString("TimerOn_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeSchedule.
        /// </summary>
        internal static string TimeSchedules {
            get {
                return ResourceManager.GetString("TimeSchedules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token Parameter.
        /// </summary>
        internal static string TokenParameter {
            get {
                return ResourceManager.GetString("TokenParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Assignments.
        /// </summary>
        internal static string TotalAssignments {
            get {
                return ResourceManager.GetString("TotalAssignments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Rules.
        /// </summary>
        internal static string TotalRules {
            get {
                return ResourceManager.GetString("TotalRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add rules to Tunnel, Block or Bypass the network traffic using VMware Tunnel.
        /// </summary>
        internal static string TrafficRulesDescription {
            get {
                return ResourceManager.GetString("TrafficRulesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Certificate.
        /// </summary>
        internal static string TunnelAddCertificate {
            get {
                return ResourceManager.GetString("TunnelAddCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tunnel application mapping does not exists.
        /// </summary>
        internal static string TunnelApplicationMappingNotExist {
            get {
                return ResourceManager.GetString("TunnelApplicationMappingNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tunnel application API did not return any applications..
        /// </summary>
        internal static string TunnelApplicationNotExist {
            get {
                return ResourceManager.GetString("TunnelApplicationNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate load failed. Please, verify the certificate password.
        /// </summary>
        internal static string TunnelCertLoadFailedWithGivenPassword {
            get {
                return ResourceManager.GetString("TunnelCertLoadFailedWithGivenPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default all the components use AirWatch issued certificates. To use Enterprise CA certificates for client-server authentication, please select the &apos;Third Party&apos; option.
        /// </summary>
        internal static string TunnelClientCertProviderTooltip {
            get {
                return ResourceManager.GetString("TunnelClientCertProviderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        internal static string TunnelConfigAdd {
            get {
                return ResourceManager.GetString("TunnelConfigAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string TunnelConfigDelete {
            get {
                return ResourceManager.GetString("TunnelConfigDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable.
        /// </summary>
        internal static string TunnelConfigDisable {
            get {
                return ResourceManager.GetString("TunnelConfigDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        internal static string TunnelConfigEdit {
            get {
                return ResourceManager.GetString("TunnelConfigEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable.
        /// </summary>
        internal static string TunnelConfigEnable {
            get {
                return ResourceManager.GetString("TunnelConfigEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel not configured. Click here to setup..
        /// </summary>
        internal static string TunnelConfigMissing {
            get {
                return ResourceManager.GetString("TunnelConfigMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error, {0}.
        /// </summary>
        internal static string TunnelConfigSaveFailed {
            get {
                return ResourceManager.GetString("TunnelConfigSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success, tunnel configuration was saved.
        /// </summary>
        internal static string TunnelConfigSaveSuccess {
            get {
                return ResourceManager.GetString("TunnelConfigSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Configuration.
        /// </summary>
        internal static string TunnelConfiguration {
            get {
                return ResourceManager.GetString("TunnelConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure fundamental Tunnel architecture to establish connectivity and trust within your environment..
        /// </summary>
        internal static string TunnelConfigurationInfoMessage {
            get {
                return ResourceManager.GetString("TunnelConfigurationInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Configurations.
        /// </summary>
        internal static string TunnelConfigurations {
            get {
                return ResourceManager.GetString("TunnelConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configurations {0} - {1} of {2}.
        /// </summary>
        internal static string TunnelConfigurationsPaginationText {
            get {
                return ResourceManager.GetString("TunnelConfigurationsPaginationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Connection.
        /// </summary>
        internal static string TunnelConnection {
            get {
                return ResourceManager.GetString("TunnelConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Cascade to deploy two instances with separate roles (DMZ and Internal).
        /// </summary>
        internal static string TunnelDeploymentTypeToolTip {
            get {
                return ResourceManager.GetString("TunnelDeploymentTypeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only domains entered will be resolved through the VMware Tunnel Gateway. All other domains will be resolved via the device&apos;s configured DNS..
        /// </summary>
        internal static string TunnelDomainsResolutionInfo {
            get {
                return ResourceManager.GetString("TunnelDomainsResolutionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Mode.
        /// </summary>
        internal static string TunnelMode {
            get {
                return ResourceManager.GetString("TunnelMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determine how Tunnel will communicate with Workspace ONE UEM and how device traffic will flow through your network..
        /// </summary>
        internal static string TunnelNetworkingHelpInfo {
            get {
                return ResourceManager.GetString("TunnelNetworkingHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        internal static string TunnelProxyAuthMethod {
            get {
                return ResourceManager.GetString("TunnelProxyAuthMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure Channel Certificate is missing for the organization group..
        /// </summary>
        internal static string TunnelSecureChannelCertMissing {
            get {
                return ResourceManager.GetString("TunnelSecureChannelCertMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel server active certificate already exists..
        /// </summary>
        internal static string TunnelServerActiveCertExists {
            get {
                return ResourceManager.GetString("TunnelServerActiveCertExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel server certificate password is missing..
        /// </summary>
        internal static string TunnelServerCertDoesNotHavePassword {
            get {
                return ResourceManager.GetString("TunnelServerCertDoesNotHavePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel server certificate private key is missing..
        /// </summary>
        internal static string TunnelServerCertDoesNotHavePrivateKey {
            get {
                return ResourceManager.GetString("TunnelServerCertDoesNotHavePrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel has not been defined at this Organization Group. To configure Tunnel for application tunneling, click the link below. Note that domain allowing will leverage Device Traffic Rules specified for each app..
        /// </summary>
        internal static string TunnelSettingsConfigurationWarning {
            get {
                return ResourceManager.GetString("TunnelSettingsConfigurationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default this setup uses an AirWatch Certificate for secure server/client communication. You may upload a third-party public SSL certificate to be used instead by selecting the &apos;Third Party&apos; option.
        /// </summary>
        internal static string TunnelSslProviderTooltip {
            get {
                return ResourceManager.GetString("TunnelSslProviderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel to API.
        /// </summary>
        internal static string TunnelToAPI {
            get {
                return ResourceManager.GetString("TunnelToAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UAG.
        /// </summary>
        internal static string UAG {
            get {
                return ResourceManager.GetString("UAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UEIP Enabled.
        /// </summary>
        internal static string UEIPEnabled_Description {
            get {
                return ResourceManager.GetString("UEIPEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Pinning was unable to be disabled or enabled. Please check the SSL Pinning configuration and try again..
        /// </summary>
        internal static string UnableToEnableOrDisablePinning {
            get {
                return ResourceManager.GetString("UnableToEnableOrDisablePinning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to fetch certificate profiles associated with managed CA. Please verify the Server URL of the Certificate Authority is correct..
        /// </summary>
        internal static string UnableToFetchCAProfiles {
            get {
                return ResourceManager.GetString("UnableToFetchCAProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unenroll Setting.
        /// </summary>
        internal static string UnenrollSetting {
            get {
                return ResourceManager.GetString("UnenrollSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unified App Catalog.
        /// </summary>
        internal static string UnifiedAppCatalog {
            get {
                return ResourceManager.GetString("UnifiedAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight commonly used apps, promote apps as part of a campaign, display frequently used apps and more..
        /// </summary>
        internal static string UnifiedAppCatalogDescription {
            get {
                return ResourceManager.GetString("UnifiedAppCatalogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unified App Catalog with App Ratings.
        /// </summary>
        internal static string UnifiedAppCatalogWithAppRatings {
            get {
                return ResourceManager.GetString("UnifiedAppCatalogWithAppRatings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique Random Password.
        /// </summary>
        internal static string UniqueRandomPassword {
            get {
                return ResourceManager.GetString("UniqueRandomPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a unique random password of 14 characters, with at least 2 symbols, 1 lowercase, 1 uppercase, and 1 digit. If enabled, it cannot be changed back to static password..
        /// </summary>
        internal static string UniqueRandomPasswordTooltip {
            get {
                return ResourceManager.GetString("UniqueRandomPasswordTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified AirWatch ID is not registered for Auto-Discovery.
        /// </summary>
        internal static string UnregisteredAirWatchID {
            get {
                return ResourceManager.GetString("UnregisteredAirWatchID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unregister Failed.
        /// </summary>
        internal static string UnregisterFailed {
            get {
                return ResourceManager.GetString("UnregisterFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unregister Successful.
        /// </summary>
        internal static string UnregisterSuccessful {
            get {
                return ResourceManager.GetString("UnregisterSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported Peer Distribution server version identified. Current server version is {1}. The Console only suppports version above {0}..
        /// </summary>
        internal static string UnsupportedAdaptivaServerVersion {
            get {
                return ResourceManager.GetString("UnsupportedAdaptivaServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update in progress....
        /// </summary>
        internal static string UpdateInProgress {
            get {
                return ResourceManager.GetString("UpdateInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Management.
        /// </summary>
        internal static string UpdateManagement {
            get {
                return ResourceManager.GetString("UpdateManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule for collecting the latest windows update information. This includes new patches that devices have discovered from their update source which can be from Microsoft Update or from a WSUS server based on the policy configuration..
        /// </summary>
        internal static string UpdateSampleInfo {
            get {
                return ResourceManager.GetString("UpdateSampleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated Sample.
        /// </summary>
        internal static string UpdateSampleInMinutes {
            get {
                return ResourceManager.GetString("UpdateSampleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated Sample Time Mode.
        /// </summary>
        internal static string UpdateSampleTimeMode {
            get {
                return ResourceManager.GetString("UpdateSampleTimeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Launcher.
        /// </summary>
        internal static string UploadLauncher {
            get {
                return ResourceManager.GetString("UploadLauncher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to upload the certificate during installation. This is not supported on UAG 3.6 and below..
        /// </summary>
        internal static string UploadLocallyTooltip {
            get {
                return ResourceManager.GetString("UploadLocallyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Server Certificate.
        /// </summary>
        internal static string UploadServerCertificate {
            get {
                return ResourceManager.GetString("UploadServerCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL not valid. Please check URL format and try again..
        /// </summary>
        internal static string UrlNotValidPleaseCheckUrlFormatAndTryAgain {
            get {
                return ResourceManager.GetString("UrlNotValidPleaseCheckUrlFormatAndTryAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URLs For Predefined Bookmarks In Workspace ONE Web.
        /// </summary>
        internal static string URLsForPredefinedBookmarksInBrowser {
            get {
                return ResourceManager.GetString("URLsForPredefinedBookmarksInBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB Connections.
        /// </summary>
        internal static string USBConnections {
            get {
                return ResourceManager.GetString("USBConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB Data.
        /// </summary>
        internal static string UsbData {
            get {
                return ResourceManager.GetString("UsbData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as a Digital Signature.
        /// </summary>
        internal static string UseAsADigitalSignature {
            get {
                return ResourceManager.GetString("UseAsADigitalSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use AutoGenerated API Key.
        /// </summary>
        internal static string UseAutoGeneratedAPIKey {
            get {
                return ResourceManager.GetString("UseAutoGeneratedAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this Action Button to update Workspace ONE Access-UEM configuration to use Auto-Generated UEM API Key.
        /// </summary>
        internal static string UseAutoGeneratedAPIKeyHelpText {
            get {
                return ResourceManager.GetString("UseAutoGeneratedAPIKeyHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use AWCM Throttle.
        /// </summary>
        internal static string UseAwcmThrottle {
            get {
                return ResourceManager.GetString("UseAwcmThrottle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use AWCM Throttle.
        /// </summary>
        internal static string UseAwcmThrottle_Description {
            get {
                return ResourceManager.GetString("UseAwcmThrottle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Use Different HostNames.
        /// </summary>
        internal static string UseDifferentHostNames {
            get {
                return ResourceManager.GetString("UseDifferentHostNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Legacy Policy Engine Logic.
        /// </summary>
        internal static string UseLegacyPolicyEngineLogic {
            get {
                return ResourceManager.GetString("UseLegacyPolicyEngineLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Legacy Policy Engine Logic.
        /// </summary>
        internal static string UseLegacyPolicyEngineLogic_Description {
            get {
                return ResourceManager.GetString("UseLegacyPolicyEngineLogic_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Server Traffic Rules with VMware Tunnel PAC Reader.
        /// </summary>
        internal static string UsePACUtility {
            get {
                return ResourceManager.GetString("UsePACUtility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the PAC Utility to automatically manage dynamic traffic rules. An additional component will need to be installed to communicate with your PAC file repository..
        /// </summary>
        internal static string UsePACUtilityTooltip {
            get {
                return ResourceManager.GetString("UsePACUtilityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Credentials.
        /// </summary>
        internal static string UserCredentials {
            get {
                return ResourceManager.GetString("UserCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user does not have permissions to access the requested organization group.
        /// </summary>
        internal static string UserDoesNotHaveAccessToSpecifiedOg {
            get {
                return ResourceManager.GetString("UserDoesNotHaveAccessToSpecifiedOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password change successful. No devices to update..
        /// </summary>
        internal static string UserDoesNotHaveAnyDeviceForGSuitePasswordRotation {
            get {
                return ResourceManager.GetString("UserDoesNotHaveAnyDeviceForGSuitePasswordRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User group selection mode.
        /// </summary>
        internal static string UserGroupSelectionMode {
            get {
                return ResourceManager.GetString("UserGroupSelectionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password change successful. No profile to update..
        /// </summary>
        internal static string UserHasNoValidProfileForGSuitePasswordRotation {
            get {
                return ResourceManager.GetString("UserHasNoValidProfileForGSuitePasswordRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User List Sample.
        /// </summary>
        internal static string UserListSample {
            get {
                return ResourceManager.GetString("UserListSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time interval at which the list of users on a Shared iPad will be refreshed on the server.
        /// </summary>
        internal static string UserListSampleToolTip {
            get {
                return ResourceManager.GetString("UserListSampleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Connection Failed: The user name or password is incorrect.
        /// </summary>
        internal static string UsernamePasswordIncorrect {
            get {
                return ResourceManager.GetString("UsernamePasswordIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration.
        /// </summary>
        internal static string UserSyncDuration {
            get {
                return ResourceManager.GetString("UserSyncDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Sync Failed.
        /// </summary>
        internal static string UserSyncFailed {
            get {
                return ResourceManager.GetString("UserSyncFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Sync In Progress.
        /// </summary>
        internal static string UserSyncInProgress {
            get {
                return ResourceManager.GetString("UserSyncInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Time.
        /// </summary>
        internal static string UserSyncStartedTime {
            get {
                return ResourceManager.GetString("UserSyncStartedTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        internal static string UserSyncStatus {
            get {
                return ResourceManager.GetString("UserSyncStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Sync Succeeded.
        /// </summary>
        internal static string UserSyncSucceeded {
            get {
                return ResourceManager.GetString("UserSyncSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please use secure (https) host connection for Content Server..
        /// </summary>
        internal static string UseSecureContentServerConnection {
            get {
                return ResourceManager.GetString("UseSecureContentServerConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Significant Location Change.
        /// </summary>
        internal static string UseSignificantLocationChange {
            get {
                return ResourceManager.GetString("UseSignificantLocationChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Proxy for Backwards Compatibility.
        /// </summary>
        internal static string UseTunnelProxyForBackwardCompatibility {
            get {
                return ResourceManager.GetString("UseTunnelProxyForBackwardCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this setting to support SDK-enabled apps that have not yet migrated from Proxy to Tunnel.
        /// </summary>
        internal static string UseTunnelProxyForBackwardCompatibilityTooltip {
            get {
                return ResourceManager.GetString("UseTunnelProxyForBackwardCompatibilityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only unique entries for App Bundle ID and Platform will be selected and displayed..
        /// </summary>
        internal static string UseUniqueApplicationEntries {
            get {
                return ResourceManager.GetString("UseUniqueApplicationEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation Failed.
        /// </summary>
        internal static string ValidationFailed {
            get {
                return ResourceManager.GetString("ValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No AirWatch Settings found in Workspace ONE Access. Please configure AirWatch Settings in Workspace ONE Access and try again..
        /// </summary>
        internal static string VidmAwConfigSettingsNotFound {
            get {
                return ResourceManager.GetString("VidmAwConfigSettingsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Access configuration failed..
        /// </summary>
        internal static string VidmConfigurationFailed {
            get {
                return ResourceManager.GetString("VidmConfigurationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Access configuration succeeded..
        /// </summary>
        internal static string VidmConfigurationSucceeded {
            get {
                return ResourceManager.GetString("VidmConfigurationSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} is no longer included with the AirWatch Cloud Connector Installer..
        /// </summary>
        internal static string VIDMConnectorInstallerInfo {
            get {
                return ResourceManager.GetString("VIDMConnectorInstallerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Access Connector Installer.
        /// </summary>
        internal static string VIDMConnectorInstallerInfoLink {
            get {
                return ResourceManager.GetString("VIDMConnectorInstallerInfoLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-In Identity Provider can only be associated with one directory type. Please check Built-In settings in Workspace ONE Access and try again..
        /// </summary>
        internal static string VidmInvalidBuiltInIdpAssociation {
            get {
                return ResourceManager.GetString("VidmInvalidBuiltInIdpAssociation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Organization Groups at and below this level must have a Group ID. Please update any missing Group IDs and try again..
        /// </summary>
        internal static string VidmLocationGroupsMissingGroupIDs {
            get {
                return ResourceManager.GetString("VidmLocationGroupsMissingGroupIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Configurations List.
        /// </summary>
        internal static string ViewConfigurationsList {
            get {
                return ResourceManager.GetString("ViewConfigurationsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to viewing Configurations List.
        /// </summary>
        internal static string ViewConfigurationsListHelp {
            get {
                return ResourceManager.GetString("ViewConfigurationsListHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to Obtain Tenant Directory ID Information.
        /// </summary>
        internal static string ViewInstructionObtainTenantDirectoryIdInformation {
            get {
                return ResourceManager.GetString("ViewInstructionObtainTenantDirectoryIdInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Workspace ONE Intelligent Hub configuration..
        /// </summary>
        internal static string ViewWSOneHubConfiguration {
            get {
                return ResourceManager.GetString("ViewWSOneHubConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to view Workspace ONE Intelligent Hub configuration..
        /// </summary>
        internal static string ViewWSOneHubConfigurationHelp {
            get {
                return ResourceManager.GetString("ViewWSOneHubConfigurationHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vm Unlock Failed.
        /// </summary>
        internal static string VmUnlockFailed {
            get {
                return ResourceManager.GetString("VmUnlockFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud Connector helps you securely communicate with your enterprise systems, including directory services, certificate authorities, and more. Requires a server with access to your corporate resources..
        /// </summary>
        internal static string VMwareEnterpriseSystemsConnectorDescription {
            get {
                return ResourceManager.GetString("VMwareEnterpriseSystemsConnectorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel.
        /// </summary>
        internal static string VmwareTunnel {
            get {
                return ResourceManager.GetString("VmwareTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Tunnel Proxy.
        /// </summary>
        internal static string VmwareTunnelProxy {
            get {
                return ResourceManager.GetString("VmwareTunnelProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VPN Endpoint Server SSL Certificate.
        /// </summary>
        internal static string VPNEndPointServerSSLCertificate {
            get {
                return ResourceManager.GetString("VPNEndPointServerSSLCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VPN Host Name.
        /// </summary>
        internal static string VPNHostName {
            get {
                return ResourceManager.GetString("VPNHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting apps tied to VPP account failed. Please contact support..
        /// </summary>
        internal static string VppDeletionFailed {
            get {
                return ResourceManager.GetString("VppDeletionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletion in progress. Please refresh the page..
        /// </summary>
        internal static string VppDeletionInProgress {
            get {
                return ResourceManager.GetString("VppDeletionInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Queue Throttling.
        /// </summary>
        internal static string WaitTimeBeforeConsideringInactive {
            get {
                return ResourceManager.GetString("WaitTimeBeforeConsideringInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the commands added by the Certificate Profile Publish Frequency are not consumed by the devices, the next batch will be queued in 30 minutes by default. This time interval can be lowered to improve certificate batching, however it is recommended to closely monitor CA and DS server performance..
        /// </summary>
        internal static string WaitTimeBeforeConsideringInactiveInfo {
            get {
                return ResourceManager.GetString("WaitTimeBeforeConsideringInactiveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WAPI.
        /// </summary>
        internal static string WAPI {
            get {
                return ResourceManager.GetString("WAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No security groups found..
        /// </summary>
        internal static string WarningNoSecurityGroups {
            get {
                return ResourceManager.GetString("WarningNoSecurityGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web token is not generated, please check EMM settings.
        /// </summary>
        internal static string WebTokenNotGenerated {
            get {
                return ResourceManager.GetString("WebTokenNotGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome To Configurations.
        /// </summary>
        internal static string WelcomeToConfigurations {
            get {
                return ResourceManager.GetString("WelcomeToConfigurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Where all the pieces fall into place.
        /// </summary>
        internal static string WhereAllThePiecesFallIntoPlace {
            get {
                return ResourceManager.GetString("WhereAllThePiecesFallIntoPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All the fundamental components you need to power your organization’s UEM, mobile security and user experience are still located exactly where you expect within {0}. But, now you can find these basic building blocks right here in one central, easier-to-access and more actionable location..
        /// </summary>
        internal static string WhereAllThePiecesFallIntoPlaceDescriptionArg {
            get {
                return ResourceManager.GetString("WhereAllThePiecesFallIntoPlaceDescriptionArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Application.
        /// </summary>
        internal static string Windows7AgentApplication {
            get {
                return ResourceManager.GetString("Windows7AgentApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Application.
        /// </summary>
        internal static string Windows8AgentApplicationSettings {
            get {
                return ResourceManager.GetString("Windows8AgentApplicationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows App Deployments.
        /// </summary>
        internal static string WindowsAppDeployments {
            get {
                return ResourceManager.GetString("WindowsAppDeployments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows application deleted successfully..
        /// </summary>
        internal static string WindowsApplicationDeleteSuccess {
            get {
                return ResourceManager.GetString("WindowsApplicationDeleteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows application already exists.
        /// </summary>
        internal static string WindowsApplicationFound {
            get {
                return ResourceManager.GetString("WindowsApplicationFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows application does not exist.
        /// </summary>
        internal static string WindowsApplicationNotFound {
            get {
                return ResourceManager.GetString("WindowsApplicationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows application saved successfully.
        /// </summary>
        internal static string WindowsApplicationSaveSuccess {
            get {
                return ResourceManager.GetString("WindowsApplicationSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Dell Auto-Enrollment.
        /// </summary>
        internal static string WindowsDellAutoEnrollment {
            get {
                return ResourceManager.GetString("WindowsDellAutoEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to configure software package deployment for traditional Win32 app package types such as exe, msi, msp, mst, zip folders and scripted package deployments. When disabled, this setting will only allow msi and modern UWP package types..
        /// </summary>
        internal static string WindowsPcMdmAppDeploymentsDescription {
            get {
                return ResourceManager.GetString("WindowsPcMdmAppDeploymentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE supports auto-enrollment of Windows Desktop devices purchased from Dell. Auto-enrollment simplifies the enrollment process by automatically enrolling registered devices. This feature also ensures all policies, apps and updates are applied before employees log into their desktops..
        /// </summary>
        internal static string WindowsPcMdmAutoEnrollmentDescription {
            get {
                return ResourceManager.GetString("WindowsPcMdmAutoEnrollmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Health Attestation is an advanced security feature on Windows 10 that keeps devices secure by collecting device health and boot parameters from devices and storing it in the secure Hardware TPM. Workspace ONE monitors device integrity during boot and on-demand and takes corrective actions based compliance rules. For on-premises setup, this feature requires Windows Server 2016 with the necessary features and roles enabled..
        /// </summary>
        internal static string WindowsPcMdmWindowsHealthAttestationDescription {
            get {
                return ResourceManager.GetString("WindowsPcMdmWindowsHealthAttestationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a provisioning package for bulk enrollment of Windows 10 devices using the Windows Configuration Designer, which can be applied using a removable storage device during setup or regular use of the device..
        /// </summary>
        internal static string WindowsPcMdmWindowsRuntimeProvisioningDescription {
            get {
                return ResourceManager.GetString("WindowsPcMdmWindowsRuntimeProvisioningDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agent Application.
        /// </summary>
        internal static string WindowsPhoneAgentApplication {
            get {
                return ResourceManager.GetString("WindowsPhoneAgentApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Rugged Relay Server Help Link.
        /// </summary>
        internal static string WindowsRuggedRelayServerHelpLink {
            get {
                return ResourceManager.GetString("WindowsRuggedRelayServerHelpLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Rugged Relay Server Help Link.
        /// </summary>
        internal static string WindowsRuggedRelayServerHelpLink_Description {
            get {
                return ResourceManager.GetString("WindowsRuggedRelayServerHelpLink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Rugged Workspace ONE UEM Resource Portal.
        /// </summary>
        internal static string WindowsRuggedWorkspaceOneUemResourcePortal {
            get {
                return ResourceManager.GetString("WindowsRuggedWorkspaceOneUemResourcePortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Rugged Workspace ONE UEM Resource Portal.
        /// </summary>
        internal static string WindowsRuggedWorkspaceOneUemResourcePortal_Description {
            get {
                return ResourceManager.GetString("WindowsRuggedWorkspaceOneUemResourcePortal_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime Auth Policy.
        /// </summary>
        internal static string WindowsRuntimeAuthPolicy_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimeAuthPolicy_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Drop Ship Provisioning.
        /// </summary>
        internal static string WindowsRuntimeConnected {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Autodiscovery Domain.
        /// </summary>
        internal static string WindowsRuntimeConnectedDomain {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Workspace ONE Drop Ship Provisioning enables the dynamic provisioning of devices in a manufacturer (OEM) facility. Enabling this feature will create a new staging user that can be assigned to applications in your Workspace ONE console. This staging user will be used to provision devices in the OEM facility.
        ///
        ///Note: Enabling this feature will allow the registration of device identifiers (UUID, Serial Number) mapped to this Organization Group and Autodiscovery Domain in a VMware Workspace ONE data cen [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WindowsRuntimeConnectedInfo {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        internal static string WindowsRuntimeConnectedPassword {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the password includes special characters ( &apos;&amp;&apos;, &apos;&gt;&apos; or &apos;&lt;&apos; ) , drop ship provisioning workflows that use this account for enrollment will fail. To change the password, go to the Users page..
        /// </summary>
        internal static string WindowsRuntimeConnectedPasswordHelpText {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedPasswordHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password is a required field..
        /// </summary>
        internal static string WindowsRuntimeConnectedPasswordIsRequiredField {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedPasswordIsRequiredField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain that devices are registered with for drop ship connected provisioning..
        /// </summary>
        internal static string WindowsRuntimeConnectedRegisteredDomainInfo {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedRegisteredDomainInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPN.
        /// </summary>
        internal static string WindowsRuntimeConnectedUpn {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedUpn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        internal static string WindowsRuntimeConnectedUsername {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop Ship Connected Provisioning Username.
        /// </summary>
        internal static string WindowsRuntimeConnectedUsernameHelpText {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedUsernameHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username is a required field..
        /// </summary>
        internal static string WindowsRuntimeConnectedUserNameIsRequiredField {
            get {
                return ResourceManager.GetString("WindowsRuntimeConnectedUserNameIsRequiredField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime Discovery URL.
        /// </summary>
        internal static string WindowsRuntimeDiscoveryUrl_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimeDiscoveryUrl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime Enrollment URL.
        /// </summary>
        internal static string WindowsRuntimeEnrollmentUrl_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimeEnrollmentUrl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Persistence.
        /// </summary>
        internal static string WindowsRuntimePersistence {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will disable Workspace ONE Persistence for all devices in this organization group. Would you like to continue?.
        /// </summary>
        internal static string WindowsRuntimePersistenceConfirmationPopupDetailMessage {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceConfirmationPopupDetailMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Workspace ONE Persistence.
        /// </summary>
        internal static string WindowsRuntimePersistenceConfirmationPopupHeaderMessage {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceConfirmationPopupHeaderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        internal static string WindowsRuntimePersistenceDomain {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have any domains registered for AirWatch Auto-Discovery. Please add Email Domains on the {0} page and navigate back to this screen..
        /// </summary>
        internal static string WindowsRuntimePersistenceDomainNotExists {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceDomainNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE persistence is a BIOS level feature that keeps devices managed by Workspace ONE, even if the device is wiped, lost, or stolen. 
        ///    After Persistence is enabled, devices are registered to the domain that was registered with auto-discovery service..
        /// </summary>
        internal static string WindowsRuntimePersistenceInfo {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to enable persistence, please retry..
        /// </summary>
        internal static string WindowsRuntimePersistenceOemProvisioningErrorMessage {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceOemProvisioningErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain that devices are registered with for persistence..
        /// </summary>
        internal static string WindowsRuntimePersistenceRegisteredDomainInfo {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceRegisteredDomainInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPN of the staging user that devices are registered with for persistence..
        /// </summary>
        internal static string WindowsRuntimePersistenceRegisteredUpnInfo {
            get {
                return ResourceManager.GetString("WindowsRuntimePersistenceRegisteredUpnInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enrollment of staging user for persistence failed..
        /// </summary>
        internal static string WindowsRunTimePersistenceUserErrorMessage {
            get {
                return ResourceManager.GetString("WindowsRunTimePersistenceUserErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime Policy Url.
        /// </summary>
        internal static string WindowsRuntimePolicyUrl_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimePolicyUrl_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enrollment of staging user for drop ship connected provisioning failed..
        /// </summary>
        internal static string WindowsRunTimeProvisioningUserErrorMessage {
            get {
                return ResourceManager.GetString("WindowsRunTimeProvisioningUserErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime Secret.
        /// </summary>
        internal static string WindowsRuntimeSecret_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimeSecret_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the password includes special characters ( &apos;&amp;&apos;, &apos;&gt;&apos; or &apos;&lt;&apos; ) , factory provisioning workflows that use this account for enrollment will fail. To change the password, go to the Users page..
        /// </summary>
        internal static string WindowsRuntimeSecretHelpText {
            get {
                return ResourceManager.GetString("WindowsRuntimeSecretHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Runtime UPN.
        /// </summary>
        internal static string WindowsRuntimeUpn_Description {
            get {
                return ResourceManager.GetString("WindowsRuntimeUpn_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Staging &amp; Provisioning.
        /// </summary>
        internal static string WindowsStagingAndProvisioning {
            get {
                return ResourceManager.GetString("WindowsStagingAndProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow employees to enroll using only their email address without need to enter management server address and Organization Group information..
        /// </summary>
        internal static string WindowsWindowsAutoDiscoveryDescription {
            get {
                return ResourceManager.GetString("WindowsWindowsAutoDiscoveryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows PC and QNX devices require no further steps here..
        /// </summary>
        internal static string WinpcStepsInfo {
            get {
                return ResourceManager.GetString("WinpcStepsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this setting is enabled, Intelligent Hub will display an onboarding experience UI to users immediately after it is installed on the windows device after enrollment. The onboarding experience provides status information on apps and resources that are actively being installed, and notifies the user when the process is complete..
        /// </summary>
        internal static string WinRTCustomOnboardingExperienceEnabledTooltip {
            get {
                return ResourceManager.GetString("WinRTCustomOnboardingExperienceEnabledTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe All SDK Apps.
        /// </summary>
        internal static string WipeSdkApplicationCluster {
            get {
                return ResourceManager.GetString("WipeSdkApplicationCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action: Wipe SDK App Data.
        /// </summary>
        internal static string WipeSdkApplicationDataAction {
            get {
                return ResourceManager.GetString("WipeSdkApplicationDataAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As the adoption of cloud-hosted identity brokering for multi-factor authentication and conditional access continues to grow, VMware Identity Manager has been renamed Workspace ONE Access to better reflect this evolution beyond just a user’s identity..
        /// </summary>
        internal static string WorkspaceOneAccessDescription {
            get {
                return ResourceManager.GetString("WorkspaceOneAccessDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Access for the Digital Workspace Evolves.
        /// </summary>
        internal static string WorkspaceOneAccessIntroduction {
            get {
                return ResourceManager.GetString("WorkspaceOneAccessIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware Identity Manager is now Workspace ONE Access.
        /// </summary>
        internal static string WorkspaceOneAccessTitle {
            get {
                return ResourceManager.GetString("WorkspaceOneAccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Assist.
        /// </summary>
        internal static string WorkspaceOneAssist {
            get {
                return ResourceManager.GetString("WorkspaceOneAssist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introducing the Workspace ONE Intelligent Hub app.
        /// </summary>
        internal static string WorkspaceOneIntelligenceHubIntroduction {
            get {
                return ResourceManager.GetString("WorkspaceOneIntelligenceHubIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Intelligent Hub.
        /// </summary>
        internal static string WorkspaceOneIntelligentHubConfigure {
            get {
                return ResourceManager.GetString("WorkspaceOneIntelligentHubConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize Workspace ONE to match your organization’s brand. Incorporate corporate logos, add approved fonts, corporate colors and more..
        /// </summary>
        internal static string WorkspaceOneIntelligentHubConfigureDescription {
            get {
                return ResourceManager.GetString("WorkspaceOneIntelligentHubConfigureDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AirWatch Agent productivity app has been renamed to the Intelligent Hub app. This new app gives you the flexibility you need to provide employees with a unified onboarding experience across virtually any iOS and Android device..
        /// </summary>
        internal static string WorkspaceOneIntelligentHubDescription1 {
            get {
                return ResourceManager.GetString("WorkspaceOneIntelligentHubDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hub Services makes delivering a true digital workspace experience easier than ever with helpful, new functionality including:.
        /// </summary>
        internal static string WorkspaceOneIntelligentHubDescription2 {
            get {
                return ResourceManager.GetString("WorkspaceOneIntelligentHubDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Tunnel.
        /// </summary>
        internal static string WorkspaceOneTunnel {
            get {
                return ResourceManager.GetString("WorkspaceOneTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WORKSPACE ONE UEM.
        /// </summary>
        internal static string WORKSPACEONEUEM {
            get {
                return ResourceManager.GetString("WORKSPACEONEUEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE UEM Console.
        /// </summary>
        internal static string WorkspaceOneUemConsole {
            get {
                return ResourceManager.GetString("WorkspaceOneUemConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE UEM Resource Portal.
        /// </summary>
        internal static string WorkspaceOneUemResourcePortal {
            get {
                return ResourceManager.GetString("WorkspaceOneUemResourcePortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE UEM Resource Portal.
        /// </summary>
        internal static string WorkspaceOneUemResourcePortal_Description {
            get {
                return ResourceManager.GetString("WorkspaceOneUemResourcePortal_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Web.
        /// </summary>
        internal static string WorkspaceOneWeb {
            get {
                return ResourceManager.GetString("WorkspaceOneWeb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrapping/Browser/SDK.
        /// </summary>
        internal static string WrappingBrowserSdkConfig {
            get {
                return ResourceManager.GetString("WrappingBrowserSdkConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! The client been successfully deleted..
        /// </summary>
        internal static string YatsCientDeletedSuccessfully {
            get {
                return ResourceManager.GetString("YatsCientDeletedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! The client below has been successfully registered..
        /// </summary>
        internal static string YatsCientRegisteredSuccessfully {
            get {
                return ResourceManager.GetString("YatsCientRegisteredSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success! The client has been successfully updated..
        /// </summary>
        internal static string YatsCientUpdatedSuccessfully {
            get {
                return ResourceManager.GetString("YatsCientUpdatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client name must be unique..
        /// </summary>
        internal static string YatsClientClientNameMustBeUnique {
            get {
                return ResourceManager.GetString("YatsClientClientNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0} will prevent this client from making REST API calls to Workspace ONE UEM and a new client ID and secret will need to be generated and distributed to client apps. Are you sure you want to continue?.
        /// </summary>
        internal static string YatsClientDeleteConfirmationMsg {
            get {
                return ResourceManager.GetString("YatsClientDeleteConfirmationMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter client description.
        /// </summary>
        internal static string YatsClientDescPlaceHolderText {
            get {
                return ResourceManager.GetString("YatsClientDescPlaceHolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This client name already exists. Try a different client name..
        /// </summary>
        internal static string YatsClientDuplicateNameErrorMessage {
            get {
                return ResourceManager.GetString("YatsClientDuplicateNameErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security token included in the request is invalid..
        /// </summary>
        internal static string YatsClientError {
            get {
                return ResourceManager.GetString("YatsClientError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This client ID and secret will be used to authenticate Workspace ONE UEM API calls..
        /// </summary>
        internal static string YatsClientInfoDesc1 {
            get {
                return ResourceManager.GetString("YatsClientInfoDesc1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secret access key displayed on this screen will not be saved in the Workspace ONE UEM console. Please copy it and save to a secure location to authenticate your API client..
        /// </summary>
        internal static string YatsClientInfoDesc2 {
            get {
                return ResourceManager.GetString("YatsClientInfoDesc2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See this {0} for more details on OAuth Client Management..
        /// </summary>
        internal static string YatsClientInfoDesc3 {
            get {
                return ResourceManager.GetString("YatsClientInfoDesc3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Below is the client ID and secret for {0}..
        /// </summary>
        internal static string YatsClientInfoHeader {
            get {
                return ResourceManager.GetString("YatsClientInfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter client name.
        /// </summary>
        internal static string YatsClientNamePlaceHolderText {
            get {
                return ResourceManager.GetString("YatsClientNamePlaceHolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No organization group found for the given organization group UUID..
        /// </summary>
        internal static string YatsClientNoOgFound {
            get {
                return ResourceManager.GetString("YatsClientNoOgFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth client not found.
        /// </summary>
        internal static string YatsClientOAutclientNotFound {
            get {
                return ResourceManager.GetString("YatsClientOAutclientNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a role with the appropriate privileges to make the required API calls..
        /// </summary>
        internal static string YatsClientRoleHelpText {
            get {
                return ResourceManager.GetString("YatsClientRoleHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This client will not be able to receive, refresh or create new tokens or make REST API calls to Workspace ONE UEM when disabled..
        /// </summary>
        internal static string YatsClientStatusHelpText {
            get {
                return ResourceManager.GetString("YatsClientStatusHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User does not have permission to perform this operation..
        /// </summary>
        internal static string YatsClientUnAuthorizedUser {
            get {
                return ResourceManager.GetString("YatsClientUnAuthorizedUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication failed. The credentials presented in the header failed validation..
        /// </summary>
        internal static string YatsClientValidationFailed {
            get {
                return ResourceManager.GetString("YatsClientValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start typing to select an Organization Group.
        /// </summary>
        internal static string YatsOGPlaceHolderText {
            get {
                return ResourceManager.GetString("YatsOGPlaceHolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start typing to select role.
        /// </summary>
        internal static string YatsRolePlaceHolderText {
            get {
                return ResourceManager.GetString("YatsRolePlaceHolderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your settings experience just got better.
        /// </summary>
        internal static string YourSettingsExperienceJustGotBetter {
            get {
                return ResourceManager.GetString("YourSettingsExperienceJustGotBetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zsh Path.
        /// </summary>
        internal static string ZshExecutablePath {
            get {
                return ResourceManager.GetString("ZshExecutablePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the path for running Zsh scripts. The binary must be codesigned and with 755 permissions, or else Intelligent Hub will fallback to the default path of /bin/zsh. Symlink paths are permitted, and spaces do not need to be escaped..
        /// </summary>
        internal static string ZshExecutablePathTooltip {
            get {
                return ResourceManager.GetString("ZshExecutablePathTooltip", resourceCulture);
            }
        }
    }
}
