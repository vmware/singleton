//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WanderingWiFi.AirWatch.Globalization.Resources.Apps {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LabelValues {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LabelValues() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WanderingWiFi.AirWatch.Globalization.Resources.Apps.LabelValues", typeof(LabelValues).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Organization group does not have access to the application.
        /// </summary>
        internal static string AccessDeniedForOG {
            get {
                return ResourceManager.GetString("AccessDeniedForOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE needs to be set up before Access Policies can be used. Go to {0} and complete the Workspace ONE setup. Once completed, log out and log back in to try again..
        /// </summary>
        internal static string AccessPoliciesIDMSetupArg {
            get {
                return ResourceManager.GetString("AccessPoliciesIDMSetupArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to e.g., VMware.
        /// </summary>
        internal static string AccountNameExample {
            get {
                return ResourceManager.GetString("AccountNameExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify Email Setting.
        /// </summary>
        internal static string AccountNotifyEmail {
            get {
                return ResourceManager.GetString("AccountNotifyEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Notifications.
        /// </summary>
        internal static string AccountNotifyEmailInfo {
            get {
                return ResourceManager.GetString("AccountNotifyEmailInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ENS2.
        /// </summary>
        internal static string AccountNotifyPush {
            get {
                return ResourceManager.GetString("AccountNotifyPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables the email notification service..
        /// </summary>
        internal static string AccountNotifyPushInfo {
            get {
                return ResourceManager.GetString("AccountNotifyPushInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically sign email.
        /// </summary>
        internal static string AccountSMIMESignByDefault {
            get {
                return ResourceManager.GetString("AccountSMIMESignByDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables S/MIME signing by default when compose view is launched.
        /// </summary>
        internal static string AccountSMIMESignByDefaultInfo {
            get {
                return ResourceManager.GetString("AccountSMIMESignByDefaultInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Calendar Setting.
        /// </summary>
        internal static string AccountSyncCalendar {
            get {
                return ResourceManager.GetString("AccountSyncCalendar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable syncing of calendar to the device.
        /// </summary>
        internal static string AccountSyncCalendarInfo {
            get {
                return ResourceManager.GetString("AccountSyncCalendarInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Contacts Setting.
        /// </summary>
        internal static string AccountSyncContact {
            get {
                return ResourceManager.GetString("AccountSyncContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable syncing of contacts to the device.
        /// </summary>
        internal static string AccountSyncContactInfo {
            get {
                return ResourceManager.GetString("AccountSyncContactInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Email Setting.
        /// </summary>
        internal static string AccountSyncEmail {
            get {
                return ResourceManager.GetString("AccountSyncEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable syncing of Email to the device.
        /// </summary>
        internal static string AccountSyncEmailInfo {
            get {
                return ResourceManager.GetString("AccountSyncEmailInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modern Authentication.
        /// </summary>
        internal static string AccountUseOAuth {
            get {
                return ResourceManager.GetString("AccountUseOAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, during enrollment, users are redirected to the login page for authentication.
        /// </summary>
        internal static string AccountUseOAuthInfo {
            get {
                return ResourceManager.GetString("AccountUseOAuthInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions Grid.
        /// </summary>
        internal static string ActionsGrid {
            get {
                return ResourceManager.GetString("ActionsGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Individual install and remove actions are restricted for apps that are part of a &apos;product&apos; package..
        /// </summary>
        internal static string ActionsNotShownForProductBasedApps {
            get {
                return ResourceManager.GetString("ActionsNotShownForProductBasedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate Application.
        /// </summary>
        internal static string ActivateApplication {
            get {
                return ResourceManager.GetString("ActivateApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Contingencies.
        /// </summary>
        internal static string AddContingencies {
            get {
                return ResourceManager.GetString("AddContingencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AIP Sensitivity Labels.
        /// </summary>
        internal static string AIPSensitivityLabels {
            get {
                return ResourceManager.GetString("AIPSensitivityLabels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All apps have already been imported.
        /// </summary>
        internal static string AllAppsImportedFromPlay {
            get {
                return ResourceManager.GetString("AllAppsImportedFromPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Apps.
        /// </summary>
        internal static string AllAppsTab {
            get {
                return ResourceManager.GetString("AllAppsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allotted.
        /// </summary>
        internal static string Alloted {
            get {
                return ResourceManager.GetString("Alloted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This allows or blocks the ability to archive emails.
        /// </summary>
        internal static string AllowActionArchiveInfo {
            get {
                return ResourceManager.GetString("AllowActionArchiveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, the Spam option in Workspace ONE Boxer is unavailable for the end-users. If enabled and the forwarding email address is not provided, the spam reports will be moved to the Junk Email..
        /// </summary>
        internal static string AllowActionSpamInfo {
            get {
                return ResourceManager.GetString("AllowActionSpamInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Annotations.
        /// </summary>
        internal static string AllowAnnotations {
            get {
                return ResourceManager.GetString("AllowAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the use of handwriting and highlighter tools..
        /// </summary>
        internal static string AllowAnnotationsTip {
            get {
                return ResourceManager.GetString("AllowAnnotationsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once admins approve and resume removals, protection will not be triggered for that app for the interval scheduled here to allow the removal action successfully. After the interval elapses, protection will again be triggered if the impacted devices reach the number configured in ‘devices affected filed’..
        /// </summary>
        internal static string AllowAppRemovalsWithoutProtectionTimeWindowHelp {
            get {
                return ResourceManager.GetString("AllowAppRemovalsWithoutProtectionTimeWindowHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Archiving Emails.
        /// </summary>
        internal static string AllowArchivingEmails {
            get {
                return ResourceManager.GetString("AllowArchivingEmails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or Disables download of attachments..
        /// </summary>
        internal static string AllowAttachmentsDownloadInfo {
            get {
                return ResourceManager.GetString("AllowAttachmentsDownloadInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables attachments for sending mails.
        /// </summary>
        internal static string AllowAttachmentsInfo {
            get {
                return ResourceManager.GetString("AllowAttachmentsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables note attachments feature. When disabled, no attachment types are allowed..
        /// </summary>
        internal static string AllowAttachmentsTip {
            get {
                return ResourceManager.GetString("AllowAttachmentsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables device camera option..
        /// </summary>
        internal static string AllowCameraTip {
            get {
                return ResourceManager.GetString("AllowCameraTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, Boxer is allowed to report crashes anonymously. We recommend keeping this enabled to allow us to see and fix crashes.
        /// </summary>
        internal static string AllowCrashReportingInfo {
            get {
                return ResourceManager.GetString("AllowCrashReportingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables attachments from external providers (iCloud, Dropbox, Google Drive, etc.) within Workspace ONE Boxer..
        /// </summary>
        internal static string AllowDocProvidersInfo {
            get {
                return ResourceManager.GetString("AllowDocProvidersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Document Scanner.
        /// </summary>
        internal static string AllowDocumentScanner {
            get {
                return ResourceManager.GetString("AllowDocumentScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables the document scanning feature..
        /// </summary>
        internal static string AllowDocumentScannerTip {
            get {
                return ResourceManager.GetString("AllowDocumentScannerTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Content brings your repositories setup in Workspace ONE Content into Boxer for saving and viewing files to and from your online repositories. SSO needs to be enabled for this configuration..
        /// </summary>
        internal static string AllowEnterpriseContentInfo {
            get {
                return ResourceManager.GetString("AllowEnterpriseContentInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Exchange.
        /// </summary>
        internal static string AllowExchange {
            get {
                return ResourceManager.GetString("AllowExchange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Gallery.
        /// </summary>
        internal static string AllowGallery {
            get {
                return ResourceManager.GetString("AllowGallery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables access and use of the device image gallery..
        /// </summary>
        internal static string AllowGalleryTip {
            get {
                return ResourceManager.GetString("AllowGalleryTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to enter hyperlinks..
        /// </summary>
        internal static string AllowHyperlinksTip {
            get {
                return ResourceManager.GetString("AllowHyperlinksTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow List.
        /// </summary>
        internal static string AllowList {
            get {
                return ResourceManager.GetString("AllowList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to True to enable local calendars in Workspace ONE Boxer. If disabled, the Local Contacts option in Workspace ONE Boxer is unavailable to the end-users..
        /// </summary>
        internal static string AllowLocalCalendarsInfo {
            get {
                return ResourceManager.GetString("AllowLocalCalendarsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose if you would like to disable the collection of anonymous metrics that help us make product decisions..
        /// </summary>
        internal static string AllowMetricsInfo {
            get {
                return ResourceManager.GetString("AllowMetricsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables attaching of files from other apps using open-in or share into Workspace ONE Boxer. When open-in or sharing of attachments is disabled, the message &apos;Your administrator has restricted attachments from external applications&apos; is displayed..
        /// </summary>
        internal static string AllowOpenInInfo {
            get {
                return ResourceManager.GetString("AllowOpenInInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Removals without Protection (hrs).
        /// </summary>
        internal static string AllowRemovalsForDuration {
            get {
                return ResourceManager.GetString("AllowRemovalsForDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow TextBoxes.
        /// </summary>
        internal static string AllowTextBoxes {
            get {
                return ResourceManager.GetString("AllowTextBoxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows text boxes..
        /// </summary>
        internal static string AllowTextBoxesTip {
            get {
                return ResourceManager.GetString("AllowTextBoxesTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow User Install Deferral.
        /// </summary>
        internal static string AllowUserInstallDeferralLabel {
            get {
                return ResourceManager.GetString("AllowUserInstallDeferralLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to allow the user to defer installation of this application.
        /// </summary>
        internal static string AllowUserInstallDeferralTooltip {
            get {
                return ResourceManager.GetString("AllowUserInstallDeferralTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows any user who has access to your environment URL and GroupID to create a user account and gain access to corporate resources. To help prevent unauthorized users from gaining access, deselect this option and go to Accounts&gt; Users&gt; List View&gt; ‘Add User’ to create user accounts..
        /// </summary>
        internal static string AllowUserRegistrationMessage {
            get {
                return ResourceManager.GetString("AllowUserRegistrationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Voice Recordings.
        /// </summary>
        internal static string AllowVoiceRecordings {
            get {
                return ResourceManager.GetString("AllowVoiceRecordings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables the use of audio recording..
        /// </summary>
        internal static string AllowVoiceRecordingsTip {
            get {
                return ResourceManager.GetString("AllowVoiceRecordingsTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} only supports single S/MIME certificate. Select this option only for primary managed email account..
        /// </summary>
        internal static string AndroidDerivedCredentialSmimeForFirstaccount {
            get {
                return ResourceManager.GetString("AndroidDerivedCredentialSmimeForFirstaccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application already exists under &apos;Product Provisioning&apos; and cannot be uploaded under &apos;Apps&amp;books&apos;.  You can delete the app instance from &apos;Product Provisioning&apos; and retry to upload. To avoid app removals, make sure that the devices entitled to retain the application are all part of the assignment..
        /// </summary>
        internal static string AppAlreadyExistsUnderProductProvisioning {
            get {
                return ResourceManager.GetString("AppAlreadyExistsUnderProductProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection thresholds have been configured to avoid undesired removal of applications from a large number of devices. These thresholds can be managed in All Settings &gt; Apps &gt; Workspace ONE &gt; {0}.
        ///        App removals will be held for administrator approval in the {1} when the number of devices receiving the app removal triggers reaches the configured threshold. Your team will be notified via email when this occurs.
        ///    .
        /// </summary>
        internal static string AppAssignmentPreviewMessage {
            get {
                return ResourceManager.GetString("AppAssignmentPreviewMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Avatars.
        /// </summary>
        internal static string AppAvatarsDefault {
            get {
                return ResourceManager.GetString("AppAvatarsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Bulk Action.
        /// </summary>
        internal static string AppBulkAction {
            get {
                return ResourceManager.GetString("AppBulkAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Categories.
        /// </summary>
        internal static string AppCategories {
            get {
                return ResourceManager.GetString("AppCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Compliance.
        /// </summary>
        internal static string AppCompliance {
            get {
                return ResourceManager.GetString("AppCompliance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Compliance Reported Compliant.
        /// </summary>
        internal static string AppComplianceReportedCompliant {
            get {
                return ResourceManager.GetString("AppComplianceReportedCompliant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Compliance Reported Non Compliant.
        /// </summary>
        internal static string AppComplianceReportedNonCompliant {
            get {
                return ResourceManager.GetString("AppComplianceReportedNonCompliant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Compliance Reported Unknown.
        /// </summary>
        internal static string AppComplianceReportedUnknown {
            get {
                return ResourceManager.GetString("AppComplianceReportedUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure this KVP applies across the entire app. Any configurations that apply only to a specific email account should be moved to ‘Custom Account Configuration’ in ‘Emails Settings’ to avoid disruption..
        /// </summary>
        internal static string AppConfigSectionMmaInfoMsg {
            get {
                return ResourceManager.GetString("AppConfigSectionMmaInfoMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversation Grouping.
        /// </summary>
        internal static string AppConversationViewDefault {
            get {
                return ResourceManager.GetString("AppConversationViewDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict to Default Browser.
        /// </summary>
        internal static string AppDefaultBrowser {
            get {
                return ResourceManager.GetString("AppDefaultBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browser Exceptions.
        /// </summary>
        internal static string AppDefaultBrowserExceptions {
            get {
                return ResourceManager.GetString("AppDefaultBrowserExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If hyperlinks are restricted in the Console, you can add a list of exceptions for domains/sites to always open in default/native browser. If hyperlinks are not restricted, you can add a list of exceptions for domains/sites to always open in Workspace ONE Web. Exception list will only match wildcards, subdomains, domains. Example: AppDefaultBrowserExceptions = [&quot;*.vmware.com&quot;, &quot;jira*.vmware.com&quot;, &quot;internal.vmware.com&quot;, &quot;vmware.com&quot;].
        /// </summary>
        internal static string AppDefaultBrowserExceptionsInfo {
            get {
                return ResourceManager.GetString("AppDefaultBrowserExceptionsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open all links in the default browser..
        /// </summary>
        internal static string AppDefaultBrowserTooltip {
            get {
                return ResourceManager.GetString("AppDefaultBrowserTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Caller ID.
        /// </summary>
        internal static string AppDefaultCallerID {
            get {
                return ResourceManager.GetString("AppDefaultCallerID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy the application automatically (Auto) or manually (On Demand) when needed..
        /// </summary>
        internal static string AppDeploymentInlineHelpPublic {
            get {
                return ResourceManager.GetString("AppDeploymentInlineHelpPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Details.
        /// </summary>
        internal static string AppDetails {
            get {
                return ResourceManager.GetString("AppDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Details View.
        /// </summary>
        internal static string AppDetailsView {
            get {
                return ResourceManager.GetString("AppDetailsView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Domains List.
        /// </summary>
        internal static string AppDomainsInternal {
            get {
                return ResourceManager.GetString("AppDomainsInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External Recipient Warning.
        /// </summary>
        internal static string AppDomainsWarning {
            get {
                return ResourceManager.GetString("AppDomainsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifies the end-user when they are sending a message to an external recipient..
        /// </summary>
        internal static string AppDomainsWarningInfo {
            get {
                return ResourceManager.GetString("AppDomainsWarningInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Swift SDK Key Wrapping Only Mode.
        /// </summary>
        internal static string AppEnableKeyWrappingOnlyMode {
            get {
                return ResourceManager.GetString("AppEnableKeyWrappingOnlyMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep enabled to take full advantage of key wrapping security features.
        /// </summary>
        internal static string AppEnableKeyWrappingOnlyModeInfo {
            get {
                return ResourceManager.GetString("AppEnableKeyWrappingOnlyModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Single Sign-On (SSO).
        /// </summary>
        internal static string AppForceActivateSSO {
            get {
                return ResourceManager.GetString("AppForceActivateSSO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This enables SSO, this key will be deprecated with SSO being always on. This is also required for a number of features including Enterprise Content..
        /// </summary>
        internal static string AppForceActivateSSOInfo {
            get {
                return ResourceManager.GetString("AppForceActivateSSOInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Group.
        /// </summary>
        internal static string AppGroup {
            get {
                return ResourceManager.GetString("AppGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Groups.
        /// </summary>
        internal static string AppGroups {
            get {
                return ResourceManager.GetString("AppGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Deferred.
        /// </summary>
        internal static string AppInstallDeferred {
            get {
                return ResourceManager.GetString("AppInstallDeferred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swift SDK Key Wrapping Only Mode.
        /// </summary>
        internal static string AppKeyWrappingOnlyMode {
            get {
                return ResourceManager.GetString("AppKeyWrappingOnlyMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This column determines whether an application is on the latest version or if there is an update available. This is only supported for apps available in the App Store..
        /// </summary>
        internal static string AppleUpdateAvailableHelpText {
            get {
                return ResourceManager.GetString("AppleUpdateAvailableHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application enabled for device-based assignment. Please note that all of the iOS 9+ and macOS 10.11+ devices will receive one license per device. These devices will not require an Apple ID for receiving the application..
        /// </summary>
        internal static string ApplicationApprovedFordeviceAssignment {
            get {
                return ResourceManager.GetString("ApplicationApprovedFordeviceAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application enabled for device-based assignment. Please note that all of the iOS 9+ and macOS 10.11+ devices will receive one license per device. These devices will not require an Apple ID for receiving the application. tvOS devices can only use Device Based Licenses and do not require admin action to use..
        /// </summary>
        internal static string ApplicationApprovedFordeviceAssignmentWithTvOS {
            get {
                return ResourceManager.GetString("ApplicationApprovedFordeviceAssignmentWithTvOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes.
        /// </summary>
        internal static string ApplicationAttributes {
            get {
                return ResourceManager.GetString("ApplicationAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App attributes are used to provide device specific details for applications to use during their operation such as a list of domains associated to a distinct organization..
        /// </summary>
        internal static string ApplicationAttributesTooltip {
            get {
                return ResourceManager.GetString("ApplicationAttributesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Bundle ID.
        /// </summary>
        internal static string ApplicationBundleId {
            get {
                return ResourceManager.GetString("ApplicationBundleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting the application will remove it from one or more assigned devices where it is managed by Workspace ONE and it will be retired in the console. Do you want to continue?.
        /// </summary>
        internal static string ApplicationCantDeleteRetireConfirmation {
            get {
                return ResourceManager.GetString("ApplicationCantDeleteRetireConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deactivating an application will uninstall all versions of the application from all devices where it is managed by Workspace ONE. Please proceed with caution..
        /// </summary>
        internal static string ApplicationDeactivateDescription {
            get {
                return ResourceManager.GetString("ApplicationDeactivateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark app UEM command stale after.
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTime {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android.
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTimeForAndroid {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTimeForAndroid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS.
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTimeForIos {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTimeForIos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS.
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTimeForMacOs {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTimeForMacOs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows.
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTimeForWindows {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTimeForWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set how many minutes after a device acknowledges the last UEM command (but has not completed the action) to mark the UEM command as “stale.” Stale commands will be re-triggered when apps are published. The app catalog will no longer display apps as “Processing” to end-users, but rather re-enable  “Install” or “Update” actions..
        /// </summary>
        internal static string ApplicationDeploymentStatusStaleTimeTooltip {
            get {
                return ResourceManager.GetString("ApplicationDeploymentStatusStaleTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Group Activated.
        /// </summary>
        internal static string ApplicationGroupActivated {
            get {
                return ResourceManager.GetString("ApplicationGroupActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Group Deactivated.
        /// </summary>
        internal static string ApplicationGroupDeactivated {
            get {
                return ResourceManager.GetString("ApplicationGroupDeactivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Group Deleted.
        /// </summary>
        internal static string ApplicationGroupDeleted {
            get {
                return ResourceManager.GetString("ApplicationGroupDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTICE: This application is included in a kiosk profile. Please update the profile after application removal..
        /// </summary>
        internal static string ApplicationInKiosk {
            get {
                return ResourceManager.GetString("ApplicationInKiosk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Max File Size With CDN.
        /// </summary>
        internal static string ApplicationMaxFileSizeWithCdn {
            get {
                return ResourceManager.GetString("ApplicationMaxFileSizeWithCdn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When CDN is enabled, the larger of the Max File Size and Max File Size with CDN values will be used for uploads for this Organization Group..
        /// </summary>
        internal static string ApplicationMaxFileSizeWithCdnToolTip {
            get {
                return ResourceManager.GetString("ApplicationMaxFileSizeWithCdnToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Publish Successful.
        /// </summary>
        internal static string ApplicationPublished {
            get {
                return ResourceManager.GetString("ApplicationPublished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Publish Failed.
        /// </summary>
        internal static string ApplicationPublishFailed {
            get {
                return ResourceManager.GetString("ApplicationPublishFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Publish Started.
        /// </summary>
        internal static string ApplicationPublishStarted {
            get {
                return ResourceManager.GetString("ApplicationPublishStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Reason Change.
        /// </summary>
        internal static string ApplicationReasonChange {
            get {
                return ResourceManager.GetString("ApplicationReasonChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retiring a version of an application will uninstall that version of the application from all devices where it is managed by Workspace ONE. If available, the next lower version of the application will be pushed to the devices. Please proceed with caution..
        /// </summary>
        internal static string ApplicationRetireDescription {
            get {
                return ResourceManager.GetString("ApplicationRetireDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Sample.
        /// </summary>
        internal static string ApplicationSample {
            get {
                return ResourceManager.GetString("ApplicationSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Source.
        /// </summary>
        internal static string ApplicationSource {
            get {
                return ResourceManager.GetString("ApplicationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications Setting.
        /// </summary>
        internal static string ApplicationsSetting {
            get {
                return ResourceManager.GetString("ApplicationsSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications Settings.
        /// </summary>
        internal static string ApplicationsSettings {
            get {
                return ResourceManager.GetString("ApplicationsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Transforms.
        /// </summary>
        internal static string ApplicationTransforms {
            get {
                return ResourceManager.GetString("ApplicationTransforms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application UEM Version already exists.
        /// </summary>
        internal static string ApplicationUemVersionAlreadyExists {
            get {
                return ResourceManager.GetString("ApplicationUemVersionAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} application user app rating {1} out of 5 stars.
        /// </summary>
        internal static string ApplicationUserAppRatingDescription {
            get {
                return ResourceManager.GetString("ApplicationUserAppRatingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application UUID.
        /// </summary>
        internal static string ApplicationUUID {
            get {
                return ResourceManager.GetString("ApplicationUUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Aggregation Mode.
        /// </summary>
        internal static string AppLogAggregationMode {
            get {
                return ResourceManager.GetString("AppLogAggregationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Aggregation URL.
        /// </summary>
        internal static string AppLogAggregationUrl {
            get {
                return ResourceManager.GetString("AppLogAggregationUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Flows Auto Enable Connectors.
        /// </summary>
        internal static string AppMobileFlowsAutoEnableConnectors {
            get {
                return ResourceManager.GetString("AppMobileFlowsAutoEnableConnectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Flows.
        /// </summary>
        internal static string AppMobileFlowsEnabled {
            get {
                return ResourceManager.GetString("AppMobileFlowsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Mobile Flows server information that Boxer can integrate with.
        /// </summary>
        internal static string AppMobileFlowsEnabledInfo {
            get {
                return ResourceManager.GetString("AppMobileFlowsEnabledInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Flows Host.
        /// </summary>
        internal static string AppMobileFlowsHost {
            get {
                return ResourceManager.GetString("AppMobileFlowsHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Flows Sync Hours.
        /// </summary>
        internal static string AppMobileFlowsSyncTimeHours {
            get {
                return ResourceManager.GetString("AppMobileFlowsSyncTimeHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not request Mobile Flow cards for emails sent earlier than this value (in hours).
        /// </summary>
        internal static string AppMobileFlowsSyncTimeHoursInfo {
            get {
                return ResourceManager.GetString("AppMobileFlowsSyncTimeHoursInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mobile Flows Authentication Server.
        /// </summary>
        internal static string AppMobileFlowsvIDM {
            get {
                return ResourceManager.GetString("AppMobileFlowsvIDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application name is required to view results..
        /// </summary>
        internal static string AppNameIsRequired {
            get {
                return ResourceManager.GetString("AppNameIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application does not exist or you are not authorized to access it..
        /// </summary>
        internal static string AppNotExistOrUnauthorizedAccess {
            get {
                return ResourceManager.GetString("AppNotExistOrUnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Passcode.
        /// </summary>
        internal static string AppPasscode {
            get {
                return ResourceManager.GetString("AppPasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Patch Update.
        /// </summary>
        internal static string AppPatchUpdate {
            get {
                return ResourceManager.GetString("AppPatchUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Phishing To.
        /// </summary>
        internal static string AppPhishEmailAddress {
            get {
                return ResourceManager.GetString("AppPhishEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the Email address that will receive the reported phishing email.
        /// </summary>
        internal static string AppPhishEmailAddressInfo {
            get {
                return ResourceManager.GetString("AppPhishEmailAddressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plain Text Mode.
        /// </summary>
        internal static string AppPlainTextMode {
            get {
                return ResourceManager.GetString("AppPlainTextMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select if you would like Boxer to only sync in plain text mode. No HTML content is allowed.
        /// </summary>
        internal static string AppPlainTextModeInfo {
            get {
                return ResourceManager.GetString("AppPlainTextModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Policies.
        /// </summary>
        internal static string AppPolicies {
            get {
                return ResourceManager.GetString("AppPolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purebred App ID.
        /// </summary>
        internal static string AppPurebredPackageName {
            get {
                return ResourceManager.GetString("AppPurebredPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package/bundle ID of the Purebred App. This ID will be used to verify the Purebred app on the device for use with Boxer..
        /// </summary>
        internal static string AppPurebredPackageNameInfo {
            get {
                return ResourceManager.GetString("AppPurebredPackageNameInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purebred App Signature.
        /// </summary>
        internal static string AppPurebredPublicKey {
            get {
                return ResourceManager.GetString("AppPurebredPublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public signature of the Purebred App. This key will be used to verify the Purebred app on the device for use with Boxer..
        /// </summary>
        internal static string AppPurebredPublicKeyInfo {
            get {
                return ResourceManager.GetString("AppPurebredPublicKeyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refetch Empty Links using Mime.
        /// </summary>
        internal static string AppRefetchEmptyLinksUsingMime {
            get {
                return ResourceManager.GetString("AppRefetchEmptyLinksUsingMime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For emails fetched via HTML that contain non-standard URL schemes (like for the RSA app) pointing to non-server domains, Exchange replaces the URL with two empty spaces. The KVP enables Boxer to detect this occurrence and re-download the affected body using MIME, which is not subject to the same URL replacement issue..
        /// </summary>
        internal static string AppRefetchEmptyLinksUsingMimeInfo {
            get {
                return ResourceManager.GetString("AppRefetchEmptyLinksUsingMimeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Removal Protection Log Devices.
        /// </summary>
        internal static string AppRemovalProtectionLogDevicesHeader {
            get {
                return ResourceManager.GetString("AppRemovalProtectionLogDevicesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies number of authentication retries.
        /// </summary>
        internal static string AppRetriesOnFailedInitialAuth {
            get {
                return ResourceManager.GetString("AppRetriesOnFailedInitialAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of authentication retries upon failure.
        /// </summary>
        internal static string AppRetriesOnFailedInitialAuthInfo {
            get {
                return ResourceManager.GetString("AppRetriesOnFailedInitialAuthInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Sample Information.
        /// </summary>
        internal static string AppSampleInformation {
            get {
                return ResourceManager.GetString("AppSampleInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Sample Last Seen.
        /// </summary>
        internal static string AppSampleLastSeen {
            get {
                return ResourceManager.GetString("AppSampleLastSeen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Sequencing.
        /// </summary>
        internal static string AppSequencingTab {
            get {
                return ResourceManager.GetString("AppSequencingTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip in-app tutorial.
        /// </summary>
        internal static string AppSkipTutorial {
            get {
                return ResourceManager.GetString("AppSkipTutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip the in app tutorial on first time launch.
        /// </summary>
        internal static string AppSkipTutorialTooltip {
            get {
                return ResourceManager.GetString("AppSkipTutorialTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Spam To.
        /// </summary>
        internal static string AppSpamForwardAddress {
            get {
                return ResourceManager.GetString("AppSpamForwardAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the Email address that will receive the reported spam email.
        /// </summary>
        internal static string AppSpamForwardAddressInfo {
            get {
                return ResourceManager.GetString("AppSpamForwardAddressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Managed Apps tab displays all macOS applications and software installers being managed in Workspace ONE UEM. The All Apps tab displays a read only macOS reported list of all .app bundles installed on the device. Availability of content in the All Apps tab is configured in the UEM Console Privacy settings for Personal Applications..
        /// </summary>
        internal static string AppsTabSegregationFeatureInformation {
            get {
                return ResourceManager.GetString("AppsTabSegregationFeatureInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Status.
        /// </summary>
        internal static string AppStatus {
            get {
                return ResourceManager.GetString("AppStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App EULA Update Notification.
        /// </summary>
        internal static string AppsTermsOfUseNotification {
            get {
                return ResourceManager.GetString("AppsTermsOfUseNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Store.
        /// </summary>
        internal static string AppStore {
            get {
                return ResourceManager.GetString("AppStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This column determines if an application was available in the App Store..
        /// </summary>
        internal static string AppStoreAppSourceHelpText {
            get {
                return ResourceManager.GetString("AppStoreAppSourceHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left Long Swipe default.
        /// </summary>
        internal static string AppSwipesLeftLongDefault {
            get {
                return ResourceManager.GetString("AppSwipesLeftLongDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left Short Swipe default.
        /// </summary>
        internal static string AppSwipesLeftShortDefault {
            get {
                return ResourceManager.GetString("AppSwipesLeftShortDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Long Swipe Default.
        /// </summary>
        internal static string AppSwipesRightLongDefault {
            get {
                return ResourceManager.GetString("AppSwipesRightLongDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Short Swipe Default.
        /// </summary>
        internal static string AppSwipesRightShortDefault {
            get {
                return ResourceManager.GetString("AppSwipesRightShortDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps with configuration errors.
        /// </summary>
        internal static string AppsWithConfigurationErrors {
            get {
                return ResourceManager.GetString("AppsWithConfigurationErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Updated Date.
        /// </summary>
        internal static string AppUpdatedDate {
            get {
                return ResourceManager.GetString("AppUpdatedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application update source.
        /// </summary>
        internal static string AppUpdateSource {
            get {
                return ResourceManager.GetString("AppUpdateSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App URL.
        /// </summary>
        internal static string AppUrl {
            get {
                return ResourceManager.GetString("AppUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE UEM maintains an internal version for each internal app package. This field is auto-populated with the &apos;App Version&apos;. This field is used to identify the latest version that has to be assigned and deployed to end-user devices..
        /// </summary>
        internal static string AppVersionDetailsHelp {
            get {
                return ResourceManager.GetString("AppVersionDetailsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each field is required and cannot exceed the maximum value for a 32-bit integer (2147483647)..
        /// </summary>
        internal static string AppVersionInformationFourDecimal {
            get {
                return ResourceManager.GetString("AppVersionInformationFourDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Version Needs Assignment.
        /// </summary>
        internal static string AppVersionNeedsAssignment {
            get {
                return ResourceManager.GetString("AppVersionNeedsAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The latest app version needs at least one assignment..
        /// </summary>
        internal static string AppVersionNeedsAssignmentInfo {
            get {
                return ResourceManager.GetString("AppVersionNeedsAssignmentInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The latest app version does not have an app assignment. Workflow assignments that use this app will continue to use the previous app version and its default policy. To use the new app version, create an app assignment..
        /// </summary>
        internal static string AppVersionNeedsAssignmentMessage {
            get {
                return ResourceManager.GetString("AppVersionNeedsAssignmentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Version Update Notification.
        /// </summary>
        internal static string AppVersionUpdateNotification {
            get {
                return ResourceManager.GetString("AppVersionUpdateNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Workflows.
        /// </summary>
        internal static string AppWorkflowsMenuDescription {
            get {
                return ResourceManager.GetString("AppWorkflowsMenuDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Workflows.
        /// </summary>
        internal static string AppWorkflowsMenuItem {
            get {
                return ResourceManager.GetString("AppWorkflowsMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        internal static string Architecture {
            get {
                return ResourceManager.GetString("Architecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Assigned.
        /// </summary>
        internal static string ArgAssignedCount {
            get {
                return ResourceManager.GetString("ArgAssignedCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Installed.
        /// </summary>
        internal static string ArgInstalledCount {
            get {
                return ResourceManager.GetString("ArgInstalledCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Not Installed.
        /// </summary>
        internal static string ArgNotInstalledCount {
            get {
                return ResourceManager.GetString("ArgNotInstalledCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version(s).
        /// </summary>
        internal static string ArgVersions {
            get {
                return ResourceManager.GetString("ArgVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARM Dependencies.
        /// </summary>
        internal static string ARMAppDependencies {
            get {
                return ResourceManager.GetString("ARMAppDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removals of your application have been paused since they reached the removal threshold..
        /// </summary>
        internal static string ArpMessage {
            get {
                return ResourceManager.GetString("ArpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} out of {1} were assigned.
        /// </summary>
        internal static string AssignedArgOutOfTotalInstalledArg {
            get {
                return ResourceManager.GetString("AssignedArgOutOfTotalInstalledArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assigned But Not Installed.
        /// </summary>
        internal static string AssignedButNotInstalled {
            get {
                return ResourceManager.GetString("AssignedButNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assigned Configuration.
        /// </summary>
        internal static string AssignedConfiguration {
            get {
                return ResourceManager.GetString("AssignedConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment cannot be removed for an app which is part of a workflow..
        /// </summary>
        internal static string AssignmentCannotBeRemovedForAnAppAssociatedWithWorkflow {
            get {
                return ResourceManager.GetString("AssignmentCannotBeRemovedForAnAppAssociatedWithWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignments Copied From.
        /// </summary>
        internal static string AssignmentCopiedFrom {
            get {
                return ResourceManager.GetString("AssignmentCopiedFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the refresh button below to display the version number assignments will be copied from..
        /// </summary>
        internal static string AssignmentCopiedFromMessage {
            get {
                return ResourceManager.GetString("AssignmentCopiedFromMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Assignment Created.
        /// </summary>
        internal static string AssignmentCreated {
            get {
                return ResourceManager.GetString("AssignmentCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Assignment Deleted.
        /// </summary>
        internal static string AssignmentDeleted {
            get {
                return ResourceManager.GetString("AssignmentDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Description.
        /// </summary>
        internal static string AssignmentDescriptionPlaceholder {
            get {
                return ResourceManager.GetString("AssignmentDescriptionPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the Smart Groups in this assignment have difference in app configuration or app attribute key-values or MST transform files, which have been separated to ensure accuracy. There will be no impact to end-users&apos; devices and no further action is needed..
        /// </summary>
        internal static string AssignmentGroupingInfoMessage {
            get {
                return ResourceManager.GetString("AssignmentGroupingInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Information.
        /// </summary>
        internal static string AssignmentInformation {
            get {
                return ResourceManager.GetString("AssignmentInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment and Install Details.
        /// </summary>
        internal static string AssignmentInstallDetails {
            get {
                return ResourceManager.GetString("AssignmentInstallDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation details of devices that have this application assigned from Workspace ONE.
        /// </summary>
        internal static string AssignmentInstallDetailsToolTip {
            get {
                return ResourceManager.GetString("AssignmentInstallDetailsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Name.
        /// </summary>
        internal static string AssignmentNamePlaceholder {
            get {
                return ResourceManager.GetString("AssignmentNamePlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Out of Date.
        /// </summary>
        internal static string AssignmentOutOfDate {
            get {
                return ResourceManager.GetString("AssignmentOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment Status.
        /// </summary>
        internal static string AssignmentStatus {
            get {
                return ResourceManager.GetString("AssignmentStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Assignment Updated.
        /// </summary>
        internal static string AssignmentUpdated {
            get {
                return ResourceManager.GetString("AssignmentUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up-to-date. App assigned and installed.
        /// </summary>
        internal static string AssignmentUpToDate {
            get {
                return ResourceManager.GetString("AssignmentUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more assignment rules do not have active Smart Group associated. Add a Smart Group or delete the assignment rules to continue..
        /// </summary>
        internal static string AtleastOneActiveAssignmentIsRequired {
            get {
                return ResourceManager.GetString("AtleastOneActiveAssignmentIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Atleast one smart group needs to be specified in assignments..
        /// </summary>
        internal static string AtleastOneAssignmentIsRequired {
            get {
                return ResourceManager.GetString("AtleastOneAssignmentIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attachment Download.
        /// </summary>
        internal static string AttachmentDownload {
            get {
                return ResourceManager.GetString("AttachmentDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting determines whether the user can open emails or their attachments in other applications. Select Preview Only to prevent from opening in any app, Allow List to specify the allowed apps, or Unrestricted to allow any apps..
        /// </summary>
        internal static string AttachmentsRestrictionMMAInfo {
            get {
                return ResourceManager.GetString("AttachmentsRestrictionMMAInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attach Photos.
        /// </summary>
        internal static string AttachPhotos {
            get {
                return ResourceManager.GetString("AttachPhotos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how to authenticate to your exchange server.
        /// </summary>
        internal static string AuthenticateExchangeServerTooltip {
            get {
                return ResourceManager.GetString("AuthenticateExchangeServerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No advanced configurations available for your selections.
        /// </summary>
        internal static string AuthenticationAdvancedSectionMessage {
            get {
                return ResourceManager.GetString("AuthenticationAdvancedSectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication Type.
        /// </summary>
        internal static string AuthenticationType {
            get {
                return ResourceManager.GetString("AuthenticationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Basic when authenticating with a user name and password, Certificate when using a certificate, and Both if you require a certificate and a password to authenticate with Exchange..
        /// </summary>
        internal static string AuthenticationTypeInfo {
            get {
                return ResourceManager.GetString("AuthenticationTypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out-of-date. App assigned but not installed.
        /// </summary>
        internal static string AutoAppAssignedButNotInstalled {
            get {
                return ResourceManager.GetString("AutoAppAssignedButNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out-of-date. App version assigned is not the same as the version installed.
        /// </summary>
        internal static string AutoAppAssignmentOutOfDate {
            get {
                return ResourceManager.GetString("AutoAppAssignmentOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrap Package assigned but device was already enrolled. It is available for on-demand deployment but has not been requested.
        /// </summary>
        internal static string AutoBootstrapPackageAssignedButNotInstalled {
            get {
                return ResourceManager.GetString("AutoBootstrapPackageAssignedButNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Patch Criticality.
        /// </summary>
        internal static string AvailablePatchCriticality {
            get {
                return ResourceManager.GetString("AvailablePatchCriticality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avatars.
        /// </summary>
        internal static string AvatarsDefault {
            get {
                return ResourceManager.GetString("AvatarsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt; Email Settings.
        /// </summary>
        internal static string BackLinkEmailSettings {
            get {
                return ResourceManager.GetString("BackLinkEmailSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None (badge count only).
        /// </summary>
        internal static string BadgeOnly {
            get {
                return ResourceManager.GetString("BadgeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic and Certificate.
        /// </summary>
        internal static string BasicAndCertificate {
            get {
                return ResourceManager.GetString("BasicAndCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This column determines if an application was downloaded from TestFlight and is considered a beta version of the app..
        /// </summary>
        internal static string BetaAppSourceHelpText {
            get {
                return ResourceManager.GetString("BetaAppSourceHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define any applications or processes that may block an installation from safely completing. You may also use this to prevent applications from being quit before saving..
        /// </summary>
        internal static string BlockingApplicationsInfoMessage {
            get {
                return ResourceManager.GetString("BlockingApplicationsInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define name of the Application. If the app is in /Applications/ folder, it can be defined as just the filename and the path will be automatically discovered..
        /// </summary>
        internal static string BlockingApplicationsTooltip {
            get {
                return ResourceManager.GetString("BlockingApplicationsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categorize the book package with pre-defined Categories or custom Categories for ease of access in the Book Catalog.
        /// </summary>
        internal static string BookCategoriesHelp {
            get {
                return ResourceManager.GetString("BookCategoriesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrap Package assigned and install command acknowledged.
        /// </summary>
        internal static string BootstrapPackageAssignedAndInstallCommandAcknowledged {
            get {
                return ResourceManager.GetString("BootstrapPackageAssignedAndInstallCommandAcknowledged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrap Package assigned but install command not acknowledged yet.
        /// </summary>
        internal static string BootstrapPackageAssignedButInstallCommandNotAcknowledged {
            get {
                return ResourceManager.GetString("BootstrapPackageAssignedButInstallCommandNotAcknowledged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration below will be recognized by Boxer apps version 5.21 and higher. For older versions, use the “credentials” payload in the custom SDK profile associated with this app.
        /// </summary>
        internal static string BoxerSmimeInfoMsg {
            get {
                return ResourceManager.GetString("BoxerSmimeInfoMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boxer Trust Store Only.
        /// </summary>
        internal static string BoxerTrustStoreOnly {
            get {
                return ResourceManager.GetString("BoxerTrustStoreOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Number.
        /// </summary>
        internal static string BuildNumber {
            get {
                return ResourceManager.GetString("BuildNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select filter to perform the operation on large number of devices..
        /// </summary>
        internal static string BulkActionExceptionMessage {
            get {
                return ResourceManager.GetString("BulkActionExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel Configuration will be synced on devices with valid assignments..
        /// </summary>
        internal static string BulkSyncTunnelConfigAlert {
            get {
                return ResourceManager.GetString("BulkSyncTunnelConfigAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle Id is required for managed distribution and accurate deployment of Custom Applications.
        /// </summary>
        internal static string Bundleidwarningforb2bapps {
            get {
                return ResourceManager.GetString("Bundleidwarningforb2bapps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far back a user can select to sync their calendar events..
        /// </summary>
        internal static string CalendarMaxSyncPeriodInfo {
            get {
                return ResourceManager.GetString("CalendarMaxSyncPeriodInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot allot more than {0} Licenses.
        /// </summary>
        internal static string CannotAllotMoreThanArgLicenses {
            get {
                return ResourceManager.GetString("CannotAllotMoreThanArgLicenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application license cannot be revoked. Please try with a valid VPP account Id..
        /// </summary>
        internal static string CannotRevokeLicense {
            get {
                return ResourceManager.GetString("CannotRevokeLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These policies apply only to Card versions 1.1 and later. To manage Exchange settings for earlier Card versions, go to Custom Settings in the SDK profile associated with this app..
        /// </summary>
        internal static string CardsVersionMessage {
            get {
                return ResourceManager.GetString("CardsVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cards configuration is ready for setup. Make sure the configurations that were ported over from custom settings of the SDK profile associated with this app are correct before publishing..
        /// </summary>
        internal static string CardsWarningToEditAllAssignments {
            get {
                return ResourceManager.GetString("CardsWarningToEditAllAssignments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Certificate Authentication, Configure/upload certificate in SDK profile..
        /// </summary>
        internal static string CertAuthenticationTip {
            get {
                return ResourceManager.GetString("CertAuthenticationTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When configuring multiple managed email accounts on your devices, from same exchange server, configure different certificate templates with different UPN..
        /// </summary>
        internal static string CertificateTemplateInfo {
            get {
                return ResourceManager.GetString("CertificateTemplateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate URL only.
        /// </summary>
        internal static string CertificateUrlOnly {
            get {
                return ResourceManager.GetString("CertificateUrlOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certifcate URL with Fallback.
        /// </summary>
        internal static string CertUrlWithFallback {
            get {
                return ResourceManager.GetString("CertUrlWithFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change When To Call Install Complete.
        /// </summary>
        internal static string ChangeWhenToCallInstallComplete {
            get {
                return ResourceManager.GetString("ChangeWhenToCallInstallComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing When to Call Install Complete criteria after an application has been installed on any devices will trigger reevaluation of the application on these devices. If the new criteria is not satisfied, the application will be removed from these devices. Due to the potential disruption this action may cause, an Admin PIN is required to enable changing the criteria..
        /// </summary>
        internal static string ChangeWhenToCallInstallCompleteDescription {
            get {
                return ResourceManager.GetString("ChangeWhenToCallInstallCompleteDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking Device Eligibility.
        /// </summary>
        internal static string CheckingDeviceEligibility {
            get {
                return ResourceManager.GetString("CheckingDeviceEligibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing this configuration will reset all its previously saved values, which will not be able to be retrieved.
        ///Are you sure you want to continue?.
        /// </summary>
        internal static string ClearConfigurationWarningText {
            get {
                return ResourceManager.GetString("ClearConfigurationWarningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Configuration Warning.
        /// </summary>
        internal static string ClearConfigurationWarningTitleText {
            get {
                return ResourceManager.GetString("ClearConfigurationWarningTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clipboard Enabled.
        /// </summary>
        internal static string ClipboardEnabled {
            get {
                return ResourceManager.GetString("ClipboardEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Clipboard Paste.
        /// </summary>
        internal static string ClipboardPasteActionEnabled {
            get {
                return ResourceManager.GetString("ClipboardPasteActionEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrates Workspace ONE Access with Virtual App and Desktop deployments of Horizon, Horizon Cloud, Citrix or ThinApp..
        /// </summary>
        internal static string CollectionMenuDescription {
            get {
                return ResourceManager.GetString("CollectionMenuDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collections.
        /// </summary>
        internal static string Collections {
            get {
                return ResourceManager.GetString("Collections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls access to virtual apps collections; applicable to directory admins only.
        /// </summary>
        internal static string CollectionsHelp {
            get {
                return ResourceManager.GetString("CollectionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to automatically perform an Enterprise Wipe on compromised devices..
        /// </summary>
        internal static string CompromisedProtectionTooltip {
            get {
                return ResourceManager.GetString("CompromisedProtectionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If.
        /// </summary>
        internal static string ConditionIf {
            get {
                return ResourceManager.GetString("ConditionIf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If {0}.
        /// </summary>
        internal static string ConditionIfArg {
            get {
                return ResourceManager.GetString("ConditionIfArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition not met.
        /// </summary>
        internal static string ConditionNotMet {
            get {
                return ResourceManager.GetString("ConditionNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter (If).
        /// </summary>
        internal static string ConditionPrefix {
            get {
                return ResourceManager.GetString("ConditionPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action (Then).
        /// </summary>
        internal static string ConditionSuffix {
            get {
                return ResourceManager.GetString("ConditionSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action (Then) Upgrade Application.
        /// </summary>
        internal static string ConditionSuffixUpgradeApp {
            get {
                return ResourceManager.GetString("ConditionSuffixUpgradeApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Then.
        /// </summary>
        internal static string ConditionThen {
            get {
                return ResourceManager.GetString("ConditionThen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Then {0}.
        /// </summary>
        internal static string ConditionThenArg {
            get {
                return ResourceManager.GetString("ConditionThenArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Condition.
        /// </summary>
        internal static string ConditionTitle {
            get {
                return ResourceManager.GetString("ConditionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Feedback for {0}.
        /// </summary>
        internal static string ConfigurationFeedbackFor {
            get {
                return ResourceManager.GetString("ConfigurationFeedbackFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Position Change Notice.
        /// </summary>
        internal static string ConfigurationPositionChangeNotice {
            get {
                return ResourceManager.GetString("ConfigurationPositionChangeNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure DLP settings for this account.
        /// </summary>
        internal static string ConfigureDLPSettingsTooltip {
            get {
                return ResourceManager.GetString("ConfigureDLPSettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured URL only.
        /// </summary>
        internal static string ConfiguredUrlOnly {
            get {
                return ResourceManager.GetString("ConfiguredUrlOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure email classification for this account.
        /// </summary>
        internal static string ConfigureEmailSeparationTooltip {
            get {
                return ResourceManager.GetString("ConfigureEmailSeparationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Registry Data.
        /// </summary>
        internal static string ConfigureRegistryData {
            get {
                return ResourceManager.GetString("ConfigureRegistryData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to check for a specific registry value.
        /// </summary>
        internal static string ConfigureRegistryDataHelpText {
            get {
                return ResourceManager.GetString("ConfigureRegistryDataHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Registry Values.
        /// </summary>
        internal static string ConfigureRegistryValues {
            get {
                return ResourceManager.GetString("ConfigureRegistryValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave this unchecked to verify only the existence of path.
        /// </summary>
        internal static string ConfigureRegistryValuesHelpText {
            get {
                return ResourceManager.GetString("ConfigureRegistryValuesHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how to sync email and calendar.
        /// </summary>
        internal static string ConfigureSyncEmailCalenderTooltip {
            get {
                return ResourceManager.GetString("ConfigureSyncEmailCalenderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a VPN configuration profile that you would like to use for this application. This setting is not applicable to tvOS devices..
        /// </summary>
        internal static string ConfigureVpnAtApplicationLevel {
            get {
                return ResourceManager.GetString("ConfigureVpnAtApplicationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deactivating an application will uninstall all versions of the application from all devices where it is managed by Workspace ONE. Are you sure you wish to deactivate this application?.
        /// </summary>
        internal static string ConfirmDeactivationApplicationRemoval {
            get {
                return ResourceManager.GetString("ConfirmDeactivationApplicationRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retiring a version of an application uninstalls that version of the app from all devices where it is managed by Workspace ONE. If Active, the next lower version of the app is pushed out to the devices it is assigned to. Are you sure you want to retire this application?.
        /// </summary>
        internal static string ConfirmRetirementApplicationRemoval {
            get {
                return ResourceManager.GetString("ConfirmRetirementApplicationRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversation Threading.
        /// </summary>
        internal static string ConversationThreading {
            get {
                return ResourceManager.GetString("ConversationThreading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy of.
        /// </summary>
        internal static string CopyOf {
            get {
                return ResourceManager.GetString("CopyOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy of - {0}.
        /// </summary>
        internal static string CopyOfArg {
            get {
                return ResourceManager.GetString("CopyOfArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve application. It no longer exists or might have been deleted..
        /// </summary>
        internal static string CouldnotRetrieveApp {
            get {
                return ResourceManager.GetString("CouldnotRetrieveApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve assignments for this application. It no longer exists or might have been deleted..
        /// </summary>
        internal static string CouldnotRetrieveAssignmentForApp {
            get {
                return ResourceManager.GetString("CouldnotRetrieveAssignmentForApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash Reporting.
        /// </summary>
        internal static string CrashReporting {
            get {
                return ResourceManager.GetString("CrashReporting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created on {0} by {1}.
        /// </summary>
        internal static string CreatedOnArgArgByArg {
            get {
                return ResourceManager.GetString("CreatedOnArgArgByArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Workflow.
        /// </summary>
        internal static string CreateWorkflow {
            get {
                return ResourceManager.GetString("CreateWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Workflows allow you to handle multiple app deployments or updates in a specific order based on criteria you define. Managing complex deployment requirements and updating apps that don’t meet your security and compliance policies is easier than ever..
        /// </summary>
        internal static string CreateWorkflowBannerDescription {
            get {
                return ResourceManager.GetString("CreateWorkflowBannerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More control over app deployment and updates.
        /// </summary>
        internal static string CreateWorkflowBannerHeader {
            get {
                return ResourceManager.GetString("CreateWorkflowBannerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently available for Windows desktop devices only..
        /// </summary>
        internal static string CreateWorkflowNote {
            get {
                return ResourceManager.GetString("CreateWorkflowNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current active App Version is: {0} and the application&apos;s UEM Version is: {1}..
        /// </summary>
        internal static string CurrentActiveAppAndUEMVersionArgs {
            get {
                return ResourceManager.GetString("CurrentActiveAppAndUEMVersionArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Deployment.
        /// </summary>
        internal static string CurrentDeployment {
            get {
                return ResourceManager.GetString("CurrentDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current UEM Version.
        /// </summary>
        internal static string CurrentUemVersion {
            get {
                return ResourceManager.GetString("CurrentUemVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Account Configuration.
        /// </summary>
        internal static string CustomAccountConfiguration {
            get {
                return ResourceManager.GetString("CustomAccountConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This enables the QuickJoin button found in calendar invites that have online meeting invites specifically for meetings that aren&apos;t in the standard format used by the cloud versions of online meeting services. If you have an on-premises setup you will want to configure this with your URLs..
        /// </summary>
        internal static string CustomOnlineMeetingUrlsInfo {
            get {
                return ResourceManager.GetString("CustomOnlineMeetingUrlsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deactivate Application.
        /// </summary>
        internal static string DeactivateApplication {
            get {
                return ResourceManager.GetString("DeactivateApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle avatars.
        /// </summary>
        internal static string DefaultAppAvatarsInfo {
            get {
                return ResourceManager.GetString("DefaultAppAvatarsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policies from this assignment will now be used by default for workflow assignments..
        /// </summary>
        internal static string DefaultAssignmentDescription {
            get {
                return ResourceManager.GetString("DefaultAssignmentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to use this assignment&apos;s policies as default instead?.
        /// </summary>
        internal static string DefaultAssignmentPrompt {
            get {
                return ResourceManager.GetString("DefaultAssignmentPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Default Policies.
        /// </summary>
        internal static string DefaultAssignmentPromptTitle {
            get {
                return ResourceManager.GetString("DefaultAssignmentPromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, devices that have this app assigned from workflows will receive these policies by default, unless overridden by another higher priority policy assignment for the devices. Only one policy can be marked as default for an app..
        /// </summary>
        internal static string DefaultAssignmentTooltip {
            get {
                return ResourceManager.GetString("DefaultAssignmentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Calendar Sync Period.
        /// </summary>
        internal static string DefaultCalendarSyncPeriod {
            get {
                return ResourceManager.GetString("DefaultCalendarSyncPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the exporting of contacts&apos; names and phone numbers by default. This setting requires the Caller ID option in the Workspace ONE UEM console to be set as Unrestricted..
        /// </summary>
        internal static string DefaultCallerIDInfo {
            get {
                return ResourceManager.GetString("DefaultCallerIDInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sets the Conversation view default to group emails or not group emails by conversation.
        /// </summary>
        internal static string DefaultConversationViewInfo {
            get {
                return ResourceManager.GetString("DefaultConversationViewInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Email Sync Period.
        /// </summary>
        internal static string DefaultEmailSyncPeriod {
            get {
                return ResourceManager.GetString("DefaultEmailSyncPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove this email account?.
        /// </summary>
        internal static string DeleteEmailAccountContent {
            get {
                return ResourceManager.GetString("DeleteEmailAccountContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Email Account.
        /// </summary>
        internal static string DeleteEmailAccountTitle {
            get {
                return ResourceManager.GetString("DeleteEmailAccountTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to delete the spam email from the end-user’s device after forwarding..
        /// </summary>
        internal static string DeleteOnSpamForwardInfo {
            get {
                return ResourceManager.GetString("DeleteOnSpamForwardInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this instance? This configuration will not be applied to the app anymore..
        /// </summary>
        internal static string DeleteTabContentLabel {
            get {
                return ResourceManager.GetString("DeleteTabContentLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Instance.
        /// </summary>
        internal static string DeleteTabTitleLabel {
            get {
                return ResourceManager.GetString("DeleteTabTitleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency Missing.
        /// </summary>
        internal static string DependencyMissing {
            get {
                return ResourceManager.GetString("DependencyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependent App Validation Failed.
        /// </summary>
        internal static string DependentAppValidationFailed {
            get {
                return ResourceManager.GetString("DependentAppValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays details of the deployment progress on assigned devices for this app version..
        /// </summary>
        internal static string DeploymentProgressToolTip {
            get {
                return ResourceManager.GetString("DeploymentProgressToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment Status.
        /// </summary>
        internal static string DeploymentStatus {
            get {
                return ResourceManager.GetString("DeploymentStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide time between {0}.
        /// </summary>
        internal static string DeploymentTimeInvalid {
            get {
                return ResourceManager.GetString("DeploymentTimeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X86 architecture file can be uploaded to deploy on X64 architecture machine.
        /// </summary>
        internal static string DeployX86FileToX64MachineInfo {
            get {
                return ResourceManager.GetString("DeployX86FileToX64MachineInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} only supports single authentication certificate. Select this option only for primary managed email account.
        ///For using {0} with Boxer app versions lower than 5.21, pass the custom KVP ‘PolicyDerivedCredentials’ from  ‘Application Configuration’ section..
        /// </summary>
        internal static string DerivedCredentialForFirstaccount {
            get {
                return ResourceManager.GetString("DerivedCredentialForFirstaccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PIV-D only supports single S/MIME certificate. Select this option only for primary managed email account.
        ///For using PIV-D with Boxer app versions lower than 5.21, pass the custom KVP ‘PolicyDerivedCredentials’ from  ‘Application Configuration’ section..
        /// </summary>
        internal static string DerivedCredentialSmimeForFirstaccount {
            get {
                return ResourceManager.GetString("DerivedCredentialSmimeForFirstaccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Descriptions.
        /// </summary>
        internal static string Descriptions {
            get {
                return ResourceManager.GetString("Descriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, and the end user deletes the app, it will be automatically reinstalled during the next Hub sync.
        ///If disabled, and if the end-user deletes the app, the application is not automatically reinstalled, unless pushed from the UEM Console or Catalog..
        /// </summary>
        internal static string DesiredStateManagementTooltip {
            get {
                return ResourceManager.GetString("DesiredStateManagementTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device and Boxer Trust Store.
        /// </summary>
        internal static string DeviceAndBoxerTrustStore {
            get {
                return ResourceManager.GetString("DeviceAndBoxerTrustStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Architecture.
        /// </summary>
        internal static string DeviceArchitecture {
            get {
                return ResourceManager.GetString("DeviceArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application eligible for device-based assignment. If you choose to enable this option, all of the iOS 9+ and macOS 10.11+ devices receive one license per device. Currently, you have {0} iOS 9+/macOS 10.11+ devices assigned. These devices will not require an Apple ID for receiving the app..
        /// </summary>
        internal static string DeviceAssignmentEnableCountArg {
            get {
                return ResourceManager.GetString("DeviceAssignmentEnableCountArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application eligible for device-based assignment. If you choose to enable this option, all of the iOS 9+ and macOS 10.11+ devices receive one license per device. Currently, you have {0} iOS 9+/macOS 10.11+ devices assigned. These devices will not require an Apple ID for receiving the app. tvOS devices can only use Device Based Licenses and do not require admin action to use..
        /// </summary>
        internal static string DeviceAssignmentEnableWithTvOSCountArg {
            get {
                return ResourceManager.GetString("DeviceAssignmentEnableWithTvOSCountArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This column determines if an application was installed using Device Based Licensing with the Volume Purchase Program..
        /// </summary>
        internal static string DeviceBasedVPPAppSourceHelpText {
            get {
                return ResourceManager.GetString("DeviceBasedVPPAppSourceHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Eligibility Check Failed.
        /// </summary>
        internal static string DeviceEligibilityCheckFailed {
            get {
                return ResourceManager.GetString("DeviceEligibilityCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To enable Device Guard, a Windows Enterprise license key is required in the {0}..
        /// </summary>
        internal static string DeviceGuardErrorArg {
            get {
                return ResourceManager.GetString("DeviceGuardErrorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Reported Reason.
        /// </summary>
        internal static string DeviceReportedReason {
            get {
                return ResourceManager.GetString("DeviceReportedReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Trust Store Only.
        /// </summary>
        internal static string DeviceTrustStoreOnly {
            get {
                return ResourceManager.GetString("DeviceTrustStoreOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device UUID.
        /// </summary>
        internal static string DeviceUuIdLookUpText {
            get {
                return ResourceManager.GetString("DeviceUuIdLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable App Configuration.
        /// </summary>
        internal static string DisableAppConfiguration {
            get {
                return ResourceManager.GetString("DisableAppConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling Application Configuration will delete the configuration and may remove or alter the app settings on the device..
        /// </summary>
        internal static string DisableAppConfigWarning {
            get {
                return ResourceManager.GetString("DisableAppConfigWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An app of size greater than {0} MB is uploaded. Disabling CDN is not allowed..
        /// </summary>
        internal static string DisableCDNWarning {
            get {
                return ResourceManager.GetString("DisableCDNWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables escrowing key on to the server. Disabling this will disable the &quot;Forgot Passcode&quot; feature (when using SDK login flow)..
        /// </summary>
        internal static string DisableKeyEscrowInfo {
            get {
                return ResourceManager.GetString("DisableKeyEscrowInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables escrowing key onto the server. When set to &apos;Yes&apos; this will disable &apos;forgot passcode&apos; feature (when using SDK login flow)..
        /// </summary>
        internal static string DisableKeyEscrowYesNoInfo {
            get {
                return ResourceManager.GetString("DisableKeyEscrowYesNoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display in App Catalog.
        /// </summary>
        internal static string DisplayInAppCatalog {
            get {
                return ResourceManager.GetString("DisplayInAppCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure this application to be shown or hidden in the Workspace ONE application catalog using this setting.
        /// </summary>
        internal static string DisplayInAppCatalogHelp {
            get {
                return ResourceManager.GetString("DisplayInAppCatalogHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DLP policies provide controlled exchange of data between managed and unmanaged applications on the device. To prevent data loss on this application, make it &quot;Managed Access&quot; and create &quot;Restriction&quot; profile policies for desired device types..
        /// </summary>
        internal static string DlpHelpText {
            get {
                return ResourceManager.GetString("DlpHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your personal application privacy policy is set to Do Not Collect for at least one device for at least one Organization Group in your hierarchy. The compliance policies associated with the application groups for personal applications of these devices will not be enforced..
        /// </summary>
        internal static string DoNotCollectApplicationListWarningForCompliancePolicy {
            get {
                return ResourceManager.GetString("DoNotCollectApplicationListWarningForCompliancePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The app will download automatically and install on your device..
        /// </summary>
        internal static string DownloadAutomaticallyAndInstall {
            get {
                return ResourceManager.GetString("DownloadAutomaticallyAndInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The app will download automatically and install in the Applications folder..
        /// </summary>
        internal static string DownloadAutomaticallyAndInstallInApplicationsFolder {
            get {
                return ResourceManager.GetString("DownloadAutomaticallyAndInstallInApplicationsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Feedback.
        /// </summary>
        internal static string DownloadFeedback {
            get {
                return ResourceManager.GetString("DownloadFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete the Provisioning Package (PPKG)?.
        /// </summary>
        internal static string DoYouWantToDeletePpkg {
            get {
                return ResourceManager.GetString("DoYouWantToDeletePpkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate App Config in {0} tab.
        /// </summary>
        internal static string DuplicateAppConfigInTab {
            get {
                return ResourceManager.GetString("DuplicateAppConfigInTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An assignment rule already exists with this name..
        /// </summary>
        internal static string DuplicateAssignmentName {
            get {
                return ResourceManager.GetString("DuplicateAssignmentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate {0} configured in {1} tab.
        /// </summary>
        internal static string DuplicateEmailSettings {
            get {
                return ResourceManager.GetString("DuplicateEmailSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add same Smart Group twice..
        /// </summary>
        internal static string DuplicateVppSmartGroupPresent {
            get {
                return ResourceManager.GetString("DuplicateVppSmartGroupPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Office Deployment Tool (ODT) cannot be used to install Volume license.
        /// </summary>
        internal static string E_FAIL {
            get {
                return ResourceManager.GetString("E_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tried to uninstall when there is no C2R Office on the machine..
        /// </summary>
        internal static string E_UNEXPECTED {
            get {
                return ResourceManager.GetString("E_UNEXPECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EAR App Update Available.
        /// </summary>
        internal static string EARAppUpdateAvailable {
            get {
                return ResourceManager.GetString("EARAppUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Notifications.
        /// </summary>
        internal static string EARAppUpdateMode {
            get {
                return ResourceManager.GetString("EARAppUpdateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to be notified each time a new version of this application becomes available..
        /// </summary>
        internal static string EARAppUpdateModeHelp {
            get {
                return ResourceManager.GetString("EARAppUpdateModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version of {0} v{1} is now available for upload.
        /// </summary>
        internal static string EARNewAppVersionAvailable {
            get {
                return ResourceManager.GetString("EARNewAppVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easily add Windows applications from the Enterprise App Repository.
        /// </summary>
        internal static string EasilyAddWindowsAppsFromEnterpriseAppRepository {
            get {
                return ResourceManager.GetString("EasilyAddWindowsAppsFromEnterpriseAppRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit App.
        /// </summary>
        internal static string EditApp {
            get {
                return ResourceManager.GetString("EditApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Application {0} Opens Dialog.
        /// </summary>
        internal static string EditApplicationArgOpensDialog {
            get {
                return ResourceManager.GetString("EditApplicationArgOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Configuration.
        /// </summary>
        internal static string EditConfiguration {
            get {
                return ResourceManager.GetString("EditConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Warning.
        /// </summary>
        internal static string EditWarning {
            get {
                return ResourceManager.GetString("EditWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing the configuration associated with this device will apply these changes to all the other devices in {0} smart groups. Are you sure you want to continue?.
        /// </summary>
        internal static string EditWarningMessage {
            get {
                return ResourceManager.GetString("EditWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Workflow.
        /// </summary>
        internal static string EditWorkflow {
            get {
                return ResourceManager.GetString("EditWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click Edit and enter your Admin PIN to change the When To Call Install Complete criteria after the application has been queued or installed on any devices. Note that specifying incorrect criteria will remove the app from devices..
        /// </summary>
        internal static string EditWtcicCriteriaHelpText {
            get {
                return ResourceManager.GetString("EditWtcicCriteriaHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Classification.
        /// </summary>
        internal static string EmailClassification {
            get {
                return ResourceManager.GetString("EmailClassification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Email Classification.
        /// </summary>
        internal static string EmailClassificationInfo {
            get {
                return ResourceManager.GetString("EmailClassificationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far back a user can select to sync their email messages..
        /// </summary>
        internal static string EmailMaxSyncPeriodInfo {
            get {
                return ResourceManager.GetString("EmailMaxSyncPeriodInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can still customize {0} settings for this app without requiring EMM Managed Access enrollment..
        /// </summary>
        internal static string EmmManagedAccessHelpInfo {
            get {
                return ResourceManager.GetString("EmmManagedAccessHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to true to enable paste feature. Paste is supported by default, if this key is not set..
        /// </summary>
        internal static string EnableClipboardPasteActionTip {
            get {
                return ResourceManager.GetString("EnableClipboardPasteActionTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to true to enable clipboard feature only between Workspace ONE apps..
        /// </summary>
        internal static string EnableClipboardTip {
            get {
                return ResourceManager.GetString("EnableClipboardTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the rules will be evaluated by supporting SDK apps..
        /// </summary>
        internal static string EnableComplianceOnDeviceTooltip {
            get {
                return ResourceManager.GetString("EnableComplianceOnDeviceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to enable device-based license assignment for the selected applications?.
        /// </summary>
        internal static string EnableDeviceAssignmentConfirmationBulk {
            get {
                return ResourceManager.GetString("EnableDeviceAssignmentConfirmationBulk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Device Guard After Installing Applications.
        /// </summary>
        internal static string EnableDeviceGuard {
            get {
                return ResourceManager.GetString("EnableDeviceGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable FastSync.
        /// </summary>
        internal static string EnableKeyEscrow {
            get {
                return ResourceManager.GetString("EnableKeyEscrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FastSync improves the background syncing and speed of subsequent syncs. FastSync settings are applied when Email Notification Service is enabled and configured.
        /// </summary>
        internal static string EnableKeyEscrowInfo {
            get {
                return ResourceManager.GetString("EnableKeyEscrowInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support umlauts in password.
        /// </summary>
        internal static string EnableNewAuthEncoding {
            get {
                return ResourceManager.GetString("EnableNewAuthEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to use ISO-8859-1 encoding for Boxer password to support special German&apos;s umlaut (ä and ß etc.) characters..
        /// </summary>
        internal static string EnableNewAuthEncodingInfo {
            get {
                return ResourceManager.GetString("EnableNewAuthEncodingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Disabled, Offline Access is restricted. When Enabled and Maximum Period Allowed Offline is set to 0, Offline Access is allowed for an indefinite period. When Enabled and non-zero Maximum Period Allowed Offline is exceeded, access is blocked.
        /// </summary>
        internal static string EnableOfflineAccessTooltip {
            get {
                return ResourceManager.GetString("EnableOfflineAccessTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Enabled, app will evaluate OS Version of device relative to configured rule and execute action when satisfied..
        /// </summary>
        internal static string EnableOsVersionTooltip {
            get {
                return ResourceManager.GetString("EnableOsVersionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Enabled, the app will evaluate the security patch date on the device to the configured rule and execute action if the patch is not up to date. This setting is applicable only to Android devices.
        /// </summary>
        internal static string EnableSecurityPatchDateTooltip {
            get {
                return ResourceManager.GetString("EnableSecurityPatchDateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption Certificate Authority.
        /// </summary>
        internal static string EncryptionCertificateAuthority {
            get {
                return ResourceManager.GetString("EncryptionCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption Certificate Template.
        /// </summary>
        internal static string EncryptionCertificateTemplate {
            get {
                return ResourceManager.GetString("EncryptionCertificateTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ENS2 API token.
        /// </summary>
        internal static string ENSAPIToken {
            get {
                return ResourceManager.GetString("ENSAPIToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API token provided by VMware to activate the Cloud ENS2 service..
        /// </summary>
        internal static string ENSAPITokenInfo {
            get {
                return ResourceManager.GetString("ENSAPITokenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieve a new token when you enter a new ENS2 server address. You cannot use a previously configured token with a new ENS2 server address..
        /// </summary>
        internal static string ENSFetchTokenInfo {
            get {
                return ResourceManager.GetString("ENSFetchTokenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve token. Make sure the ENS2 server address is correct and the ENS2 server is functional, and try again. If the issue persists, review the UEM Console logs and/or ENS2 server logs and contact VMware Support..
        /// </summary>
        internal static string ENSInvalidAPITokenMessage {
            get {
                return ResourceManager.GetString("ENSInvalidAPITokenMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ENS2 Server Address.
        /// </summary>
        internal static string ENSLinkAddress {
            get {
                return ResourceManager.GetString("ENSLinkAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The address of the ENS2 system for users to connect to..
        /// </summary>
        internal static string ENSLinkAddressInfo {
            get {
                return ResourceManager.GetString("ENSLinkAddressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieve Token.
        /// </summary>
        internal static string ENSRetrieveTokenBtnText {
            get {
                return ResourceManager.GetString("ENSRetrieveTokenBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieved ENS2 API Token..
        /// </summary>
        internal static string ENSValidAPITokenMessage {
            get {
                return ResourceManager.GetString("ENSValidAPITokenMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter app URL from Google Play Store.
        /// </summary>
        internal static string EnterAppUrlFromGooglePlayStore {
            get {
                return ResourceManager.GetString("EnterAppUrlFromGooglePlayStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Key-Value pairs to provide attributes to applications.
        /// </summary>
        internal static string EnterKeyValuePairsForApplicationAttributes {
            get {
                return ResourceManager.GetString("EnterKeyValuePairsForApplicationAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This app doesn&apos;t support app configuration. If you are using the SDK to configure the app, enter key-value pairs below.
        /// </summary>
        internal static string EnterKeyValuePairsToConfigureWhenAppNotSupport {
            get {
                return ResourceManager.GetString("EnterKeyValuePairsToConfigureWhenAppNotSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a number between {0} - {1}..
        /// </summary>
        internal static string EnterNumberBetweenArgAndArg {
            get {
                return ResourceManager.GetString("EnterNumberBetweenArgAndArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By clicking proceed below, you will be downloading software from a third-party website. VMware makes no representations or warranties regarding the quality, content, reliability or security practices of the third-party software and VMware shall have no liability if you elect to download and use the third-party software..
        /// </summary>
        internal static string EnterpriseAppCatalogDetailsLegalTooltip {
            get {
                return ResourceManager.GetString("EnterpriseAppCatalogDetailsLegalTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application catalog failed to load, please try reloading and contact administrator if problem persists..
        /// </summary>
        internal static string EnterpriseAppCatalogFailedToLoad {
            get {
                return ResourceManager.GetString("EnterpriseAppCatalogFailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Applications available through catalog, please try reloading and contact administrator if problem persists..
        /// </summary>
        internal static string EnterpriseAppCatalogNoApplications {
            get {
                return ResourceManager.GetString("EnterpriseAppCatalogNoApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise App Repository..
        /// </summary>
        internal static string EnterpriseAppRepository {
            get {
                return ResourceManager.GetString("EnterpriseAppRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the application as it should appear in the Intelligent Hub catalog..
        /// </summary>
        internal static string EnterpriseAppRepositoryAddAppName {
            get {
                return ResourceManager.GetString("EnterpriseAppRepositoryAddAppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Notifications.
        /// </summary>
        internal static string EnterpriseAppRepositoryAppUpdateMode {
            get {
                return ResourceManager.GetString("EnterpriseAppRepositoryAppUpdateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an option for application updates..
        /// </summary>
        internal static string EnterpriseAppRepositoryAppUpdateModeInfo {
            get {
                return ResourceManager.GetString("EnterpriseAppRepositoryAppUpdateModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string EnterpriseAppRepositoryAppUpdateModeNone {
            get {
                return ResourceManager.GetString("EnterpriseAppRepositoryAppUpdateModeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify.
        /// </summary>
        internal static string EnterpriseAppRepositoryAppUpdateModeNotify {
            get {
                return ResourceManager.GetString("EnterpriseAppRepositoryAppUpdateModeNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This column determines whether an application is signed using an enterprising signing certificate and not distributed via the App Store..
        /// </summary>
        internal static string EnterpriseAppSourceHelpText {
            get {
                return ResourceManager.GetString("EnterpriseAppSourceHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid value in the Build Version field.
        /// </summary>
        internal static string EnterValidBuildVersion {
            get {
                return ResourceManager.GetString("EnterValidBuildVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Valid Allowed Applications.
        /// </summary>
        internal static string EnterValidWhitelistedApplications {
            get {
                return ResourceManager.GetString("EnterValidWhitelistedApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entire Chain.
        /// </summary>
        internal static string EntireChain {
            get {
                return ResourceManager.GetString("EntireChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another scenario is running.
        /// </summary>
        internal static string ERROR_ANOTHER_RUNNING_SCENARIO {
            get {
                return ResourceManager.GetString("ERROR_ANOTHER_RUNNING_SCENARIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to complete the process. Possible reasons:
        ///
        ///    Installation cancelled by user
        ///    Installation cancelled by another installation
        ///    Out of disk space during installation
        ///    Unknown language ID.
        /// </summary>
        internal static string ERROR_COMPLETING_SCENARIO {
            get {
                return ResourceManager.GetString("ERROR_COMPLETING_SCENARIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible reasons:
        ///
        ///    Unknown SKUs
        ///    Content does&apos;t exist on CDN
        ///        such as trying to install an unsupported LAP, like zh-sg
        ///        CDN issue that content is not available
        ///    Signature check issue, such as failed the signature check for Office content
        ///    User cancelled.
        /// </summary>
        internal static string ERROR_COMPLETING_SCENARIO_NEED_CLEAN_UP {
            get {
                return ResourceManager.GetString("ERROR_COMPLETING_SCENARIO_NEED_CLEAN_UP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C2RClient command line error.
        /// </summary>
        internal static string ERROR_HANDLING_COMMAND_LINE {
            get {
                return ResourceManager.GetString("ERROR_HANDLING_COMMAND_LINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed any pre-req check.
        ///
        ///    SxS (Tried to install when 2016 MSI is installed)
        ///    Bit mismatch between the currently installed Office and the Office that was attempting to be installed (such as when you try to install a 32-bit version while 64-bit version is currently installed.).
        /// </summary>
        internal static string ERROR_INSTALL_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cancelled the installation.
        /// </summary>
        internal static string ERROR_INSTALL_USEREXIT {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_USEREXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot verify signature of the downloaded Office Deployment Tool (ODT).
        /// </summary>
        internal static string ERROR_INVALID_DATA {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start C2RClient.
        /// </summary>
        internal static string ERROR_PROCESSPOOL_INITIALIZATION {
            get {
                return ResourceManager.GetString("ERROR_PROCESSPOOL_INITIALIZATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to queue installation scenario in C2RClient.
        /// </summary>
        internal static string ERROR_QUEUE_SCENARIO {
            get {
                return ResourceManager.GetString("ERROR_QUEUE_SCENARIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client is requesting client clean up in a &quot;Remove Installation&quot; scenario.
        /// </summary>
        internal static string ERROR_REMOVE_INSTALLATION_NEEDED {
            get {
                return ResourceManager.GetString("ERROR_REMOVE_INSTALLATION_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocked update by running apps.
        /// </summary>
        internal static string ERROR_SCENARIO_CANCELLED {
            get {
                return ResourceManager.GetString("ERROR_SCENARIO_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scenario cancelled as planned.
        /// </summary>
        internal static string ERROR_SCENARIO_CANCELLED_AS_PLANNED {
            get {
                return ResourceManager.GetString("ERROR_SCENARIO_CANCELLED_AS_PLANNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download Office Deployment Tool (ODT).
        /// </summary>
        internal static string ERROR_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in Application Sync Job after App Publish..
        /// </summary>
        internal static string ErrorApplicationSyncJobAppPublish {
            get {
                return ResourceManager.GetString("ErrorApplicationSyncJobAppPublish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FastSync Expiry.
        /// </summary>
        internal static string EscrowExpiry {
            get {
                return ResourceManager.GetString("EscrowExpiry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the expiration time in hours when Workspace ONE Boxer does not receive FastSync key. FastSync settings are applied when Email Notification Service is enabled and configured.
        /// </summary>
        internal static string EscrowExpiryInfo {
            get {
                return ResourceManager.GetString("EscrowExpiryInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escrow Gateway configuration will apply only when the gateway is configured in your environment.
        /// </summary>
        internal static string EscrowGatewayToolTipInfo {
            get {
                return ResourceManager.GetString("EscrowGatewayToolTipInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Based.
        /// </summary>
        internal static string EventBased {
            get {
                return ResourceManager.GetString("EventBased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Targeted.
        /// </summary>
        internal static string EventTargeted {
            get {
                return ResourceManager.GetString("EventTargeted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure whether you want to set EWS URL in the &apos;Email Settings&apos; section..
        /// </summary>
        internal static string EWSConfigPositionChangeInfo {
            get {
                return ResourceManager.GetString("EWSConfigPositionChangeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EWS URL.
        /// </summary>
        internal static string EWSUrl {
            get {
                return ResourceManager.GetString("EWSUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address of the EWS (or SEG) endpoint.
        /// </summary>
        internal static string EWSUrlInfo {
            get {
                return ResourceManager.GetString("EWSUrlInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EWS Url configuration has been moved to the email settings section.
        /// </summary>
        internal static string EwsUrlInfoMsg {
            get {
                return ResourceManager.GetString("EwsUrlInfoMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Exchange Settings.
        /// </summary>
        internal static string ExchangeSettings {
            get {
                return ResourceManager.GetString("ExchangeSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exchange URL.
        /// </summary>
        internal static string ExchangeURL {
            get {
                return ResourceManager.GetString("ExchangeURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exchange User Name.
        /// </summary>
        internal static string ExchangeUserName {
            get {
                return ResourceManager.GetString("ExchangeUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution Failed.
        /// </summary>
        internal static string ExecutionFailed {
            get {
                return ResourceManager.GetString("ExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        internal static string ExportFactoryPpkg {
            get {
                return ResourceManager.GetString("ExportFactoryPpkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select applications from a list of supported applications, and export them to a Windows Provisioning Package (PPKG). When the PPKG export is complete, a notification will be sent with a link to download it..
        /// </summary>
        internal static string ExportPpkgMessage {
            get {
                return ResourceManager.GetString("ExportPpkgMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting applications to a Windows Provisioning Package (PPKG) enables packaging of applications for factory installation. Please upload some Windows applications to export them to a PPKG..
        /// </summary>
        internal static string ExportPpkgWindowsNoAppsMessage {
            get {
                return ResourceManager.GetString("ExportPpkgWindowsNoAppsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the Apple App Store unique identifier. This can be seen in the iTunes URL of the application.
        /// </summary>
        internal static string ExternalApplicationIdInfo {
            get {
                return ResourceManager.GetString("ExternalApplicationIdInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Provisioning Service is not configured or running. Please check your Workspace ONE UEM installation..
        /// </summary>
        internal static string FactoryProvisioningServiceNotRunning {
            get {
                return ResourceManager.GetString("FactoryProvisioningServiceNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to upload the application..
        /// </summary>
        internal static string FailedToUploadApplication {
            get {
                return ResourceManager.GetString("FailedToUploadApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure whether you want to set EWS URL in the &apos;Email Settings&apos; section.
        ///Configure whether you want to enable FastSync and its expiry in the &apos;App policies&apos; &gt; &apos;Advanced&apos; section..
        /// </summary>
        internal static string FastAsyncConfigPositionChangeInfo {
            get {
                return ResourceManager.GetString("FastAsyncConfigPositionChangeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Featured Apps.
        /// </summary>
        internal static string FeaturedApps {
            get {
                return ResourceManager.GetString("FeaturedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device is currently not reporting feedback and may be offline. Please try again later..
        /// </summary>
        internal static string FeedbackChannelDataNotAvailableMessage {
            get {
                return ResourceManager.GetString("FeedbackChannelDataNotAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration changes will apply on all devices that belong to the following smart groups:
        ///
        ///{0}.
        ///
        ///Are you sure you want to edit?.
        /// </summary>
        internal static string FeedbackChannelEditConfigurationMessage {
            get {
                return ResourceManager.GetString("FeedbackChannelEditConfigurationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Reported Time.
        /// </summary>
        internal static string FeedbackDateTime {
            get {
                return ResourceManager.GetString("FeedbackDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string FeedbackMessage {
            get {
                return ResourceManager.GetString("FeedbackMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback Title.
        /// </summary>
        internal static string FeedbackTitle {
            get {
                return ResourceManager.GetString("FeedbackTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Value.
        /// </summary>
        internal static string FeedbackTriggerValue {
            get {
                return ResourceManager.GetString("FeedbackTriggerValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field should be a number.
        /// </summary>
        internal static string FieldShouldBeANumber {
            get {
                return ResourceManager.GetString("FieldShouldBeANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field should be a number between {0} &amp; {1}.
        /// </summary>
        internal static string FieldShouldBeBetweenArgAndMaxInt {
            get {
                return ResourceManager.GetString("FieldShouldBeBetweenArgAndMaxInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This field requires color of the text in the hexadecimal format.
        /// </summary>
        internal static string FieldShouldBeValidColourInHexFormat {
            get {
                return ResourceManager.GetString("FieldShouldBeValidColourInHexFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file format selected is not supported, please select an xml file..
        /// </summary>
        internal static string FileFormatNotSupported {
            get {
                return ResourceManager.GetString("FileFormatNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show com.apple.* apps.
        /// </summary>
        internal static string FilterAppleSystemApps {
            get {
                return ResourceManager.GetString("FilterAppleSystemApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by Smart Group.
        /// </summary>
        internal static string FilterBySmartGroup {
            get {
                return ResourceManager.GetString("FilterBySmartGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Final Detection Failed.
        /// </summary>
        internal static string FinalDetectionFailed {
            get {
                return ResourceManager.GetString("FinalDetectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices will receive application based on the configurations below. Devices with multiple assignments will receive policies in priority order. Adjusting the priority for a single assignment will automatically reprioritize other assignments. Select the assignment to edit. Adding a new assignment will create a new rule at the bottom of the list..
        /// </summary>
        internal static string FlexDeploymentNewMessage {
            get {
                return ResourceManager.GetString("FlexDeploymentNewMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Flexera SVM patches are available.
        /// </summary>
        internal static string FlexeraCriticalAppsArrived {
            get {
                return ResourceManager.GetString("FlexeraCriticalAppsArrived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flexera SVM.
        /// </summary>
        internal static string FlexeraSVM {
            get {
                return ResourceManager.GetString("FlexeraSVM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forward/Add Attachments.
        /// </summary>
        internal static string ForwardAddAttachments {
            get {
                return ResourceManager.GetString("ForwardAddAttachments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Enterprise App Repository.
        /// </summary>
        internal static string FromEnterpriseCatalog {
            get {
                return ResourceManager.GetString("FromEnterpriseCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get started with workflows.
        /// </summary>
        internal static string GetStartedWithWorkflows {
            get {
                return ResourceManager.GetString("GetStartedWithWorkflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to chrome web store.
        /// </summary>
        internal static string GoToChromeWebStore {
            get {
                return ResourceManager.GetString("GoToChromeWebStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Notifications.
        /// </summary>
        internal static string HideNotificationsLabel {
            get {
                return ResourceManager.GetString("HideNotificationsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this setting to prevent install and uninstall notifications from appearing for this application. This only applies to Auto deployed applications..
        /// </summary>
        internal static string HideNotificationsTooltip {
            get {
                return ResourceManager.GetString("HideNotificationsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Criticality.
        /// </summary>
        internal static string HighCriticality {
            get {
                return ResourceManager.GetString("HighCriticality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon File.
        /// </summary>
        internal static string IconFile {
            get {
                return ResourceManager.GetString("IconFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has already been added to the console and is in an inactive state. Please reactivate the application in the Applications List View in order to continue with the assignment..
        /// </summary>
        internal static string InactiveAppAlreadyExistsinConsole {
            get {
                return ResourceManager.GetString("InactiveAppAlreadyExistsinConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use https://server.domain.com/EWS/Exchange.asmx format..
        /// </summary>
        internal static string IncorrectExchangeURL {
            get {
                return ResourceManager.GetString("IncorrectExchangeURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Allowed File Size: {0} MB.
        /// </summary>
        internal static string IndividualAppSizeLimitMessage {
            get {
                return ResourceManager.GetString("IndividualAppSizeLimitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select filter to install application on large number of devices..
        /// </summary>
        internal static string InstallAppExceptionMessage {
            get {
                return ResourceManager.GetString("InstallAppExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device acknowledged application install.
        /// </summary>
        internal static string InstallApplicationConfirmed {
            get {
                return ResourceManager.GetString("InstallApplicationConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to install the application on all devices. If licenses are limited, some devices may not receive the application. Click OK to continue. Available licenses: {0} Online, {1} Offline.
        /// </summary>
        internal static string InstallAppOnAllBspAlert {
            get {
                return ResourceManager.GetString("InstallAppOnAllBspAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Status.
        /// </summary>
        internal static string InstallationStatus {
            get {
                return ResourceManager.GetString("InstallationStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Status Last Scan.
        /// </summary>
        internal static string InstallationStatusLastScan {
            get {
                return ResourceManager.GetString("InstallationStatusLastScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Command Failed.
        /// </summary>
        internal static string InstallCommandFailed {
            get {
                return ResourceManager.GetString("InstallCommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed (Configuration Feedback Available).
        /// </summary>
        internal static string InstalledAndFeedbackAvailable {
            get {
                return ResourceManager.GetString("InstalledAndFeedbackAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed App Version.
        /// </summary>
        internal static string InstalledAppVersion {
            get {
                return ResourceManager.GetString("InstalledAppVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed but Hidden.
        /// </summary>
        internal static string InstalledButHidden {
            get {
                return ResourceManager.GetString("InstalledButHidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed by User.
        /// </summary>
        internal static string InstalledByUser {
            get {
                return ResourceManager.GetString("InstalledByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed = Assigned.
        /// </summary>
        internal static string InstalledEqualsAssigned {
            get {
                return ResourceManager.GetString("InstalledEqualsAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed &lt;&gt; Assigned.
        /// </summary>
        internal static string InstalledNotEqualsAssigned {
            get {
                return ResourceManager.GetString("InstalledNotEqualsAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed Personal App.
        /// </summary>
        internal static string InstalledPersonalApp {
            get {
                return ResourceManager.GetString("InstalledPersonalApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed System App.
        /// </summary>
        internal static string InstalledSystemApp {
            get {
                return ResourceManager.GetString("InstalledSystemApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed ({0}).
        /// </summary>
        internal static string InstalledWithVersion {
            get {
                return ResourceManager.GetString("InstalledWithVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit code is invalid..
        /// </summary>
        internal static string InstallerDeferralExitCodeInvalid {
            get {
                return ResourceManager.GetString("InstallerDeferralExitCodeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Deferral Exit Code.
        /// </summary>
        internal static string InstallerDeferralExitCodeLabel {
            get {
                return ResourceManager.GetString("InstallerDeferralExitCodeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit code is required..
        /// </summary>
        internal static string InstallerDeferralExitCodeRequired {
            get {
                return ResourceManager.GetString("InstallerDeferralExitCodeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the integer code returned by the installer to indicate that the app installation has been deferred. This will allow the app installation to be retried at the next installation interval..
        /// </summary>
        internal static string InstallerDeferralExitCodeTooltip {
            get {
                return ResourceManager.GetString("InstallerDeferralExitCodeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Deferral Interval.
        /// </summary>
        internal static string InstallerDeferralIntervalLabel {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 12 hours.
        /// </summary>
        internal static string InstallerDeferralIntervalOption12Hours {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalOption12Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 24 hours.
        /// </summary>
        internal static string InstallerDeferralIntervalOption24Hours {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalOption24Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2 hours.
        /// </summary>
        internal static string InstallerDeferralIntervalOption2Hours {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalOption2Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4 hours.
        /// </summary>
        internal static string InstallerDeferralIntervalOption4Hours {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalOption4Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8 hours.
        /// </summary>
        internal static string InstallerDeferralIntervalOption8Hours {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalOption8Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the deferral timeframe.
        /// </summary>
        internal static string InstallerDeferralIntervalTooltip {
            get {
                return ResourceManager.GetString("InstallerDeferralIntervalTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CUSTOM.
        /// </summary>
        internal static string InstallerDeferralNotificationCustom {
            get {
                return ResourceManager.GetString("InstallerDeferralNotificationCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use UEM or Custom Notifications.
        /// </summary>
        internal static string InstallerDeferralNotificationLabel {
            get {
                return ResourceManager.GetString("InstallerDeferralNotificationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify if deferrals should use UEM or custom notifications.
        /// </summary>
        internal static string InstallerDeferralNotificationTooltip {
            get {
                return ResourceManager.GetString("InstallerDeferralNotificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UEM.
        /// </summary>
        internal static string InstallerDeferralNotificationUEM {
            get {
                return ResourceManager.GetString("InstallerDeferralNotificationUEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Package Deployment.
        /// </summary>
        internal static string InstallerPackageDeployment {
            get {
                return ResourceManager.GetString("InstallerPackageDeployment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation in progress.
        /// </summary>
        internal static string InstallInProgress {
            get {
                return ResourceManager.GetString("InstallInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This app will be installed only on devices with valid assignments..
        /// </summary>
        internal static string InstallOnSelectedDevices {
            get {
                return ResourceManager.GetString("InstallOnSelectedDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to install the application on all selected devices. If licenses are limited, some devices may not receive the application. Click OK to continue. Available licenses: {0}  Online, {1} Offline.
        /// </summary>
        internal static string InstallOnSelectedDevicesBspAlert {
            get {
                return ResourceManager.GetString("InstallOnSelectedDevicesBspAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a representation of the data reported by devices that includes detailed information about the installation state of this app and is not tied to a particular version..
        /// </summary>
        internal static string InstallStatusHeaderToolTip {
            get {
                return ResourceManager.GetString("InstallStatusHeaderToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation succeeded.
        /// </summary>
        internal static string InstallSuccess {
            get {
                return ResourceManager.GetString("InstallSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To view app configuration feedback you&apos;ll have to opt-in to intelligence. {0}.
        /// </summary>
        internal static string IntelligenceOptInMessageForFeedbackArg {
            get {
                return ResourceManager.GetString("IntelligenceOptInMessageForFeedbackArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up-to-date. App version assigned is the same as the version installed.
        /// </summary>
        internal static string InternalAppAssignmentUpToDate {
            get {
                return ResourceManager.GetString("InternalAppAssignmentUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Application.
        /// </summary>
        internal static string InternalApplication {
            get {
                return ResourceManager.GetString("InternalApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Applications.
        /// </summary>
        internal static string InternalApplications {
            get {
                return ResourceManager.GetString("InternalApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain list should be enclosed in square brackets. For example: [“xyz.com”,”abc.com”].
        /// </summary>
        internal static string InternalDomainsFieldError {
            get {
                return ResourceManager.GetString("InternalDomainsFieldError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the domains that are internal or permitted. The user can disable the warning using the &apos;Confirm before sending&apos; when the internal domains are defined and External recipients are not set. Include each domain in double quotes and use a comma as separator and enclose the list in square bracket. For example: [“xyz.com”,”abc.com”]..
        /// </summary>
        internal static string InternalDomainsInfo {
            get {
                return ResourceManager.GetString("InternalDomainsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays details of the latest action taken on assigned devices for this app version..
        /// </summary>
        internal static string InternalTriggerAccountVersion {
            get {
                return ResourceManager.GetString("InternalTriggerAccountVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VPNUUID is not valid for Attributes, please configure App Tunneling instead.
        /// </summary>
        internal static string InvalidAppAttributeVpnKey {
            get {
                return ResourceManager.GetString("InvalidAppAttributeVpnKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Application Bundle ID.
        /// </summary>
        internal static string InvalidApplicationBundleID {
            get {
                return ResourceManager.GetString("InvalidApplicationBundleID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application package format is not supported.
        /// </summary>
        internal static string InvalidApplicationError {
            get {
                return ResourceManager.GetString("InvalidApplicationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify strings that do not have quotes.
        /// </summary>
        internal static string InvalidMultiStringValue {
            get {
                return ResourceManager.GetString("InvalidMultiStringValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid NSX Entry for the selected application.
        /// </summary>
        internal static string InvalidNsxEntryForApplication {
            get {
                return ResourceManager.GetString("InvalidNsxEntryForApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid metadata. Generate the file through the Admin Assistant Tool and try uploading again..
        /// </summary>
        internal static string InvalidPkgInfoFile {
            get {
                return ResourceManager.GetString("InvalidPkgInfoFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Play Store URL. Please enter a valid Play Store URL to continue..
        /// </summary>
        internal static string InvalidPlayStoreUrlEnterValidUrlToContinue {
            get {
                return ResourceManager.GetString("InvalidPlayStoreUrlEnterValidUrlToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Registry Path.
        /// </summary>
        internal static string InvalidRegistryPath {
            get {
                return ResourceManager.GetString("InvalidRegistryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Threshold ID.
        /// </summary>
        internal static string InvalidThresholdId {
            get {
                return ResourceManager.GetString("InvalidThresholdId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocking Applications.
        /// </summary>
        internal static string IsBlockingAppsEnabled {
            get {
                return ResourceManager.GetString("IsBlockingAppsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling Blocking Applications will use any items defined to check if they are running before beginning installation. By disabling Blocking Applications, this will override any blocking behavior and continue with the installation..
        /// </summary>
        internal static string IsBlockingAppsEnabledTooltip {
            get {
                return ResourceManager.GetString("IsBlockingAppsEnabledTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Install After Date.
        /// </summary>
        internal static string IsForceInstallAfterDateEnabled {
            get {
                return ResourceManager.GetString("IsForceInstallAfterDateEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a date to force the install if the item has not yet been installed. This will force any blocking applications to be closed and, if defined, enforce the restart action..
        /// </summary>
        internal static string IsForceInstallAfterDateEnabledTooltip {
            get {
                return ResourceManager.GetString("IsForceInstallAfterDateEnabledTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Escrow.
        /// </summary>
        internal static string KeyEscrow {
            get {
                return ResourceManager.GetString("KeyEscrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E.g. HKLM\Software\.. or HKCU\Software\.. or HKEY_LOCAL_MACHINE\Software.. or HKEY_CURRENT_USER\Software..
        ///
        ///Enter the registry path using the abbreviated or complete name for the top level registry hive..
        /// </summary>
        internal static string KeyHelpText {
            get {
                return ResourceManager.GetString("KeyHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Supported Only At Account Level.
        /// </summary>
        internal static string KeySupportedOnlyAtAccountLevel {
            get {
                return ResourceManager.GetString("KeySupportedOnlyAtAccountLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Supported Only At App Level.
        /// </summary>
        internal static string KeySupportedOnlyAtAppLevel {
            get {
                return ResourceManager.GetString("KeySupportedOnlyAtAppLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Action.
        /// </summary>
        internal static string LastAction {
            get {
                return ResourceManager.GetString("LastAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Action Taken.
        /// </summary>
        internal static string LastActionTaken {
            get {
                return ResourceManager.GetString("LastActionTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Action Timestamp.
        /// </summary>
        internal static string LastActionTimestamp {
            get {
                return ResourceManager.GetString("LastActionTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Reported Time.
        /// </summary>
        internal static string LastReportedTime {
            get {
                return ResourceManager.GetString("LastReportedTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Server Action.
        /// </summary>
        internal static string LastServerAction {
            get {
                return ResourceManager.GetString("LastServerAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest Installation Event Logged.
        /// </summary>
        internal static string LatestInstallationEvent {
            get {
                return ResourceManager.GetString("LatestInstallationEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the latest installation event logged in the &apos;troubleshooting&apos; section for this device and app. Only installation states in progress will be captured as events, not completed installation states. The device may not report every installation state, in which case no events will be logged..
        /// </summary>
        internal static string LatestInstallationEventTooltip {
            get {
                return ResourceManager.GetString("LatestInstallationEventTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest Installation Status.
        /// </summary>
        internal static string LatestInstallationStatus {
            get {
                return ResourceManager.GetString("LatestInstallationStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Distribution.
        /// </summary>
        internal static string LicenseDistribution {
            get {
                return ResourceManager.GetString("LicenseDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Summary.
        /// </summary>
        internal static string LicenseSummary {
            get {
                return ResourceManager.GetString("LicenseSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Aggregation Mode.
        /// </summary>
        internal static string LogAggregationMode {
            get {
                return ResourceManager.GetString("LogAggregationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mode in which the app will send the Log file to Log Aggregation endpoint..
        /// </summary>
        internal static string LogAggregationModeInfo {
            get {
                return ResourceManager.GetString("LogAggregationModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL for the Log Aggregation endpoint..
        /// </summary>
        internal static string LogAggregationUrlInfo {
            get {
                return ResourceManager.GetString("LogAggregationUrlInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Criticality.
        /// </summary>
        internal static string LowCriticality {
            get {
                return ResourceManager.GetString("LowCriticality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desired State Management.
        /// </summary>
        internal static string macOSDesiredStateManagement {
            get {
                return ResourceManager.GetString("macOSDesiredStateManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Major.
        /// </summary>
        internal static string Major {
            get {
                return ResourceManager.GetString("Major", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Assignment.
        /// </summary>
        internal static string ManageAssignment {
            get {
                return ResourceManager.GetString("ManageAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage assignment for application {0} opens dialog.
        /// </summary>
        internal static string ManageAssignmentForApplicationArgOpensDialog {
            get {
                return ResourceManager.GetString("ManageAssignmentForApplicationArgOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Assignment for {0} Opens Dialog.
        /// </summary>
        internal static string ManageAssignmentForArgOpensDialog {
            get {
                return ResourceManager.GetString("ManageAssignmentForArgOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Access.
        /// </summary>
        internal static string ManagedAccess {
            get {
                return ResourceManager.GetString("ManagedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMM managed access defines which devices will be able to install this app from Intelligent Hub..
        /// </summary>
        internal static string ManagedAccessDescription {
            get {
                return ResourceManager.GetString("ManagedAccessDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only EMM managed devices will be able to install this app..
        /// </summary>
        internal static string ManagedAccessOnlyEmmDevices {
            get {
                return ResourceManager.GetString("ManagedAccessOnlyEmmDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this app is secured by Workspace ONE SDK version 20.10 or later, access will be blocked unless the app is managed by EMM. To ensure this app is managed, enable the setting &apos;Make App MDM Managed if User Installed&apos; on the Restrictions tab..
        /// </summary>
        internal static string ManagedAccessSecuredByWorkspace {
            get {
                return ResourceManager.GetString("ManagedAccessSecuredByWorkspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this setting is enabled:.
        /// </summary>
        internal static string ManagedAccessSettingEnabled {
            get {
                return ResourceManager.GetString("ManagedAccessSettingEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this setting is enabled, only EMM managed devices will be able to install this app..
        /// </summary>
        internal static string ManagedAccessSettingEnabledOnlyEmm {
            get {
                return ResourceManager.GetString("ManagedAccessSettingEnabledOnlyEmm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this setting is disabled, all registered devices will be able to install this app..
        /// </summary>
        internal static string ManagedAccessSubDescription {
            get {
                return ResourceManager.GetString("ManagedAccessSubDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMM Managed Access.
        /// </summary>
        internal static string ManagedAccessTitle {
            get {
                return ResourceManager.GetString("ManagedAccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Apps.
        /// </summary>
        internal static string ManagedAppsTab {
            get {
                return ResourceManager.GetString("ManagedAppsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Errors.
        /// </summary>
        internal static string ManagedConfigurationErrorMessage {
            get {
                return ResourceManager.GetString("ManagedConfigurationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Management Access.
        /// </summary>
        internal static string ManagementAccess {
            get {
                return ResourceManager.GetString("ManagementAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique identifier per app and device.
        /// </summary>
        internal static string ManagementIDToolTip {
            get {
                return ResourceManager.GetString("ManagementIDToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of devices selected exceeds the number of allowed device, please select filter..
        /// </summary>
        internal static string MaxAllowedDevicesException {
            get {
                return ResourceManager.GetString("MaxAllowedDevicesException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max attachment size.
        /// </summary>
        internal static string MaxAttachmentSize {
            get {
                return ResourceManager.GetString("MaxAttachmentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum file size in Bytes a user can attach to an outgoing email.
        /// </summary>
        internal static string MaxAttachmentSizeInfo {
            get {
                return ResourceManager.GetString("MaxAttachmentSizeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Allowed Calendar Sync Period.
        /// </summary>
        internal static string MaxCalendarSyncWindow {
            get {
                return ResourceManager.GetString("MaxCalendarSyncWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Allowed Email Sync Period.
        /// </summary>
        internal static string MaxEmailSyncWindow {
            get {
                return ResourceManager.GetString("MaxEmailSyncWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max File Size with CDN.
        /// </summary>
        internal static string MaxFileSizeCDNMegabytes {
            get {
                return ResourceManager.GetString("MaxFileSizeCDNMegabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum File Size with CDN cannot exceed Total App Capacity..
        /// </summary>
        internal static string MaximumFileSizeWithCDNShouldBeLesserThanAppCapacity {
            get {
                return ResourceManager.GetString("MaximumFileSizeWithCDNShouldBeLesserThanAppCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only three managed email accounts are supported.
        /// </summary>
        internal static string MaxTabCountReached {
            get {
                return ResourceManager.GetString("MaxTabCountReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium Criticality.
        /// </summary>
        internal static string MediumCriticality {
            get {
                return ResourceManager.GetString("MediumCriticality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Name key value within the metadata file contains invalid characters. This key value can only use alphanumeric, underscores, whitespaces, hyphens, and periods..
        /// </summary>
        internal static string MetadataFileContainsInvalidCharactersForNameKey {
            get {
                return ResourceManager.GetString("MetadataFileContainsInvalidCharactersForNameKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple email account configuration is only supported by Boxer app version 5.21 or higher and Single Sign-On needs to be enabled..
        /// </summary>
        internal static string MMAEmailSettingsInfoMsgInfo {
            get {
                return ResourceManager.GetString("MMAEmailSettingsInfoMsgInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a valid URL for authenticating the device users. This could be Workspace ONE Access Server URL.
        /// </summary>
        internal static string MobileFlowsAuthenticationServerInfo {
            get {
                return ResourceManager.GetString("MobileFlowsAuthenticationServerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, when turning on Mobile Flows, automatically turn on all the connectors in succession. Recommended only when all connectors are federated with Workspace ONE Access.
        /// </summary>
        internal static string MobileFlowsAutoEnableConnectorsInfo {
            get {
                return ResourceManager.GetString("MobileFlowsAutoEnableConnectorsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host name for the Mobile Flows server.
        /// </summary>
        internal static string MobileFlowsHostInfo {
            get {
                return ResourceManager.GetString("MobileFlowsHostInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Mobile Flows server information that Boxer can integrate with.
        /// </summary>
        internal static string MobileFlowsInfo {
            get {
                return ResourceManager.GetString("MobileFlowsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not request Mobile Flow cards for emails sent earlier than this value (in hours).
        /// </summary>
        internal static string MobileFlowsSyncHoursInfo {
            get {
                return ResourceManager.GetString("MobileFlowsSyncHoursInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified on {0} by {1}.
        /// </summary>
        internal static string ModifiedOnArgArgByArg {
            get {
                return ResourceManager.GetString("ModifiedOnArgArgByArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Application Transforms.
        /// </summary>
        internal static string MSTSelection {
            get {
                return ResourceManager.GetString("MSTSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be positive integer value.
        /// </summary>
        internal static string MustBePositiveIntegerValue {
            get {
                return ResourceManager.GetString("MustBePositiveIntegerValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Workflow.
        /// </summary>
        internal static string NewWorkflow {
            get {
                return ResourceManager.GetString("NewWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No event logged.
        /// </summary>
        internal static string NoEventLogged {
            get {
                return ResourceManager.GetString("NoEventLogged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policies below only apply to Notebook version 1.4 and higher. For older versions, go to custom settings in the SDK profile associated with this app..
        /// </summary>
        internal static string NotebookVersionMessage {
            get {
                return ResourceManager.GetString("NotebookVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notebook configuration is ready for setup. Make sure the configurations that were ported over from custom settings of the SDK profile associated with this app are correct before publishing..
        /// </summary>
        internal static string NotebookWarningToEditAllAssignments {
            get {
                return ResourceManager.GetString("NotebookWarningToEditAllAssignments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not evaluated.
        /// </summary>
        internal static string NotEvaluated {
            get {
                return ResourceManager.GetString("NotEvaluated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Email Notification Service (ENS) and its behavior to provide real-time email notifications..
        /// </summary>
        internal static string NotificationsInfo {
            get {
                return ResourceManager.GetString("NotificationsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify Email.
        /// </summary>
        internal static string NotifyEmail {
            get {
                return ResourceManager.GetString("NotifyEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Apps.
        /// </summary>
        internal static string NumberOfApps {
            get {
                return ResourceManager.GetString("NumberOfApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number Of Commands Queued.
        /// </summary>
        internal static string NumberOfCommandsQueued {
            get {
                return ResourceManager.GetString("NumberOfCommandsQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Revocation Policies.
        /// </summary>
        internal static string OCSP {
            get {
                return ResourceManager.GetString("OCSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} offline licenses available. Devices will be allocated licenses on a first come first serve basis..
        /// </summary>
        internal static string OfflineLicenseAvailableArgDevicesAllocation {
            get {
                return ResourceManager.GetString("OfflineLicenseAvailableArgDevicesAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App assigned for on-demand deployment not installed.
        /// </summary>
        internal static string OnDemandAppAssignedButNotInstalled {
            get {
                return ResourceManager.GetString("OnDemandAppAssignedButNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest app version assigned for on-demand deployment not installed.
        /// </summary>
        internal static string OnDemandAppAssignmentOutOfDate {
            get {
                return ResourceManager.GetString("OnDemandAppAssignmentOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrap Package assigned for on-demand deployment but has not been requested.
        /// </summary>
        internal static string OnDemandBootstrapPackageAssignedButNotInstalled {
            get {
                return ResourceManager.GetString("OnDemandBootstrapPackageAssignedButNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 Day.
        /// </summary>
        internal static string OneDay {
            get {
                return ResourceManager.GetString("OneDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} online licenses available. Devices will be allocated licenses on a first come first serve basis..
        /// </summary>
        internal static string OnlineLicenseAvailableArgDevicesAllocation {
            get {
                return ResourceManager.GetString("OnlineLicenseAvailableArgDevicesAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View and manage Volume Purchase Program (VPP) redemption codes.
        /// </summary>
        internal static string OrdersLicensesMenuTitle {
            get {
                return ResourceManager.GetString("OrdersLicensesMenuTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OsVesion must not be zero or empty if policy is enabled.
        /// </summary>
        internal static string OSVersionNotSetError {
            get {
                return ResourceManager.GetString("OSVersionNotSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred while parsing the OsX file.
        /// </summary>
        internal static string OsXParseError {
            get {
                return ResourceManager.GetString("OsXParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Attributes.
        /// </summary>
        internal static string OtherAttributes {
            get {
                return ResourceManager.GetString("OtherAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passwords entered during your configuration were not copied along with this profile. Re-enter the correct passwords before saving..
        /// </summary>
        internal static string PasswordNotCopied {
            get {
                return ResourceManager.GetString("PasswordNotCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paused.
        /// </summary>
        internal static string Paused {
            get {
                return ResourceManager.GetString("Paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution.
        /// </summary>
        internal static string PeerDistribution {
            get {
                return ResourceManager.GetString("PeerDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Bytes.
        /// </summary>
        internal static string PeerDistributionCacheBytes {
            get {
                return ResourceManager.GetString("PeerDistributionCacheBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Enabled.
        /// </summary>
        internal static string PeerDistributionCacheEnabled {
            get {
                return ResourceManager.GetString("PeerDistributionCacheEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Client Mode.
        /// </summary>
        internal static string PeerDistributionCurrentClientMode {
            get {
                return ResourceManager.GetString("PeerDistributionCurrentClientMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution Details.
        /// </summary>
        internal static string PeerDistributionDetails {
            get {
                return ResourceManager.GetString("PeerDistributionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LEARN MORE.
        /// </summary>
        internal static string PeerDistributionDetailsLearnMore {
            get {
                return ResourceManager.GetString("PeerDistributionDetailsLearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the number of devices that have downloaded this application using Peer Distribution, the amount of data downloaded, and where the download data was obtained.
        /// </summary>
        internal static string PeerDistributionDetailsToolTip {
            get {
                return ResourceManager.GetString("PeerDistributionDetailsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices Utilizing Peer Distribution.
        /// </summary>
        internal static string PeerDistributionDevicesUtilizingPeerDistribution {
            get {
                return ResourceManager.GetString("PeerDistributionDevicesUtilizingPeerDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices with Peer Distribution On.
        /// </summary>
        internal static string PeerDistributionDevicesWithPeerDistributionOn {
            get {
                return ResourceManager.GetString("PeerDistributionDevicesWithPeerDistributionOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Source.
        /// </summary>
        internal static string PeerDistributionDownloadSource {
            get {
                return ResourceManager.GetString("PeerDistributionDownloadSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosted Cache Server List.
        /// </summary>
        internal static string PeerDistributionHostedCacheServerList {
            get {
                return ResourceManager.GetString("PeerDistributionHostedCacheServerList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Utilized.
        /// </summary>
        internal static string PeerDistributionNotUtilized {
            get {
                return ResourceManager.GetString("PeerDistributionNotUtilized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off.
        /// </summary>
        internal static string PeerDistributionOff {
            get {
                return ResourceManager.GetString("PeerDistributionOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On/Not Utilized.
        /// </summary>
        internal static string PeerDistributionOnNotUtilized {
            get {
                return ResourceManager.GetString("PeerDistributionOnNotUtilized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On/Utilized.
        /// </summary>
        internal static string PeerDistributionOnUtilized {
            get {
                return ResourceManager.GetString("PeerDistributionOnUtilized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Bytes.
        /// </summary>
        internal static string PeerDistributionServerBytes {
            get {
                return ResourceManager.GetString("PeerDistributionServerBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Services.
        /// </summary>
        internal static string PeerDistributionSfdOriginTypeAW {
            get {
                return ResourceManager.GetString("PeerDistributionSfdOriginTypeAW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CDN.
        /// </summary>
        internal static string PeerDistributionSfdOriginTypeCDN {
            get {
                return ResourceManager.GetString("PeerDistributionSfdOriginTypeCDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string PeerDistributionSfdOriginTypeNone {
            get {
                return ResourceManager.GetString("PeerDistributionSfdOriginTypeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adaptiva.
        /// </summary>
        internal static string PeerDistributionSfdOriginTypeP2P {
            get {
                return ResourceManager.GetString("PeerDistributionSfdOriginTypeP2P", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CDN (with Device Services).
        /// </summary>
        internal static string PeerDistributionSfdOriginTypeP2PBC {
            get {
                return ResourceManager.GetString("PeerDistributionSfdOriginTypeP2PBC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution.
        /// </summary>
        internal static string PeerDistributionStatus {
            get {
                return ResourceManager.GetString("PeerDistributionStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Device Count.
        /// </summary>
        internal static string PeerDistributionTotalDeviceCount {
            get {
                return ResourceManager.GetString("PeerDistributionTotalDeviceCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Saving Bytes.
        /// </summary>
        internal static string PeerDistributionTotalSavingBytes {
            get {
                return ResourceManager.GetString("PeerDistributionTotalSavingBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Saving Percent.
        /// </summary>
        internal static string PeerDistributionTotalSavingPercent {
            get {
                return ResourceManager.GetString("PeerDistributionTotalSavingPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Utilized Cache Bytes.
        /// </summary>
        internal static string PeerDistributionTotalUtilizedCacheBytes {
            get {
                return ResourceManager.GetString("PeerDistributionTotalUtilizedCacheBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Utilized Server Bytes.
        /// </summary>
        internal static string PeerDistributionTotalUtilizedServerBytes {
            get {
                return ResourceManager.GetString("PeerDistributionTotalUtilizedServerBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utilized.
        /// </summary>
        internal static string PeerDistributionUtilized {
            get {
                return ResourceManager.GetString("PeerDistributionUtilized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs without assignments.
        /// </summary>
        internal static string PersonalAppCounts {
            get {
                return ResourceManager.GetString("PersonalAppCounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the number of devices that have different versions of this app installed but do not have a valid assignment because they have either had this app side-loaded or previously had an assignment from Workspace ONE..
        /// </summary>
        internal static string PersonalAppCountsToolTip {
            get {
                return ResourceManager.GetString("PersonalAppCountsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PIV-D.
        /// </summary>
        internal static string Pivd {
            get {
                return ResourceManager.GetString("Pivd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PIV-D only supports single S/MIME certificate. Select this option only for primary managed email account..
        /// </summary>
        internal static string PivdAndroidDerivedCredentialSmimeForFirstaccount {
            get {
                return ResourceManager.GetString("PivdAndroidDerivedCredentialSmimeForFirstaccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PIV-D only supports single authentication certificate. Select this option only for primary managed email account.
        /// For using PIV-D with Boxer app versions lower than 5.21, pass the custom KVP ‘PolicyDerivedCredentials’ from  ‘Application Configuration’ section..
        /// </summary>
        internal static string PivdDerivedCredentialForFirstaccount {
            get {
                return ResourceManager.GetString("PivdDerivedCredentialForFirstaccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to + Add.
        /// </summary>
        internal static string PlusAdd {
            get {
                return ResourceManager.GetString("PlusAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Action.
        /// </summary>
        internal static string PolicyAllowActionArchive {
            get {
                return ResourceManager.GetString("PolicyAllowActionArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow End-user to Report Spam.
        /// </summary>
        internal static string PolicyAllowActionSpam {
            get {
                return ResourceManager.GetString("PolicyAllowActionSpam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Attachments.
        /// </summary>
        internal static string PolicyAllowAttachments {
            get {
                return ResourceManager.GetString("PolicyAllowAttachments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Attachment Download.
        /// </summary>
        internal static string PolicyAllowAttachmentsDownload {
            get {
                return ResourceManager.GetString("PolicyAllowAttachmentsDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow or block downloading and forwarding attachments.
        /// </summary>
        internal static string PolicyAllowAttachmentsDownloadInfo {
            get {
                return ResourceManager.GetString("PolicyAllowAttachmentsDownloadInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to add/forward attachments.
        /// </summary>
        internal static string PolicyAllowAttachmentsInfo {
            get {
                return ResourceManager.GetString("PolicyAllowAttachmentsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the use of CallKit.
        /// </summary>
        internal static string PolicyAllowCallKitIdentification {
            get {
                return ResourceManager.GetString("PolicyAllowCallKitIdentification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is only an iOS setting and requires user interaction to enable CallKit caller ID.
        /// </summary>
        internal static string PolicyAllowCallKitIdentificationInfo {
            get {
                return ResourceManager.GetString("PolicyAllowCallKitIdentificationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Crash Reporting.
        /// </summary>
        internal static string PolicyAllowCrashReporting {
            get {
                return ResourceManager.GetString("PolicyAllowCrashReporting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Custom Keyboards.
        /// </summary>
        internal static string PolicyAllowCustomKeyboards {
            get {
                return ResourceManager.GetString("PolicyAllowCustomKeyboards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow your users to enable third-party keyboards.
        /// </summary>
        internal static string PolicyAllowCustomKeyboardsTooltip {
            get {
                return ResourceManager.GetString("PolicyAllowCustomKeyboardsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control Attachments from external providers.
        /// </summary>
        internal static string PolicyAllowDocProviders {
            get {
                return ResourceManager.GetString("PolicyAllowDocProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Content.
        /// </summary>
        internal static string PolicyAllowEnterpriseContent {
            get {
                return ResourceManager.GetString("PolicyAllowEnterpriseContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Calendars.
        /// </summary>
        internal static string PolicyAllowLocalCalendars {
            get {
                return ResourceManager.GetString("PolicyAllowLocalCalendars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows logging.
        /// </summary>
        internal static string PolicyAllowLogging {
            get {
                return ResourceManager.GetString("PolicyAllowLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These logs are not sent unless an action is taken by the user to send them..
        /// </summary>
        internal static string PolicyAllowLoggingInfo {
            get {
                return ResourceManager.GetString("PolicyAllowLoggingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Mail Server Ciphers.
        /// </summary>
        internal static string PolicyAllowMailServerCiphers {
            get {
                return ResourceManager.GetString("PolicyAllowMailServerCiphers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces boxer to use only these ciphers during a TLS handshake when connecting to a mail server.
        /// </summary>
        internal static string PolicyAllowMailServerCiphersInfo {
            get {
                return ResourceManager.GetString("PolicyAllowMailServerCiphersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous Metrics.
        /// </summary>
        internal static string PolicyAllowMetrics {
            get {
                return ResourceManager.GetString("PolicyAllowMetrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control Open In.
        /// </summary>
        internal static string PolicyAllowOpenIn {
            get {
                return ResourceManager.GetString("PolicyAllowOpenIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow or block the ability to attach photos from camera/photo gallery.
        /// </summary>
        internal static string PolicyAllowPhotoAttachemetInfo {
            get {
                return ResourceManager.GetString("PolicyAllowPhotoAttachemetInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Photo Attachment.
        /// </summary>
        internal static string PolicyAllowPhotoAttachment {
            get {
                return ResourceManager.GetString("PolicyAllowPhotoAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Printing.
        /// </summary>
        internal static string PolicyAllowPrint {
            get {
                return ResourceManager.GetString("PolicyAllowPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable to block printing of emails and attachments.
        /// </summary>
        internal static string PolicyAllowPrintTooltip {
            get {
                return ResourceManager.GetString("PolicyAllowPrintTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Biometric ID.
        /// </summary>
        internal static string PolicyAllowTouchID {
            get {
                return ResourceManager.GetString("PolicyAllowTouchID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this feature will allow users to use Fingerprint,Touch ID or Face ID on supported devices..
        /// </summary>
        internal static string PolicyAllowTouchInfo {
            get {
                return ResourceManager.GetString("PolicyAllowTouchInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow the user to add other accounts such as Gmail, iCloud, and other IMAP accounts..
        /// </summary>
        internal static string PolicyAllowUserAccountsInfo {
            get {
                return ResourceManager.GetString("PolicyAllowUserAccountsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Calendar Sync Window.
        /// </summary>
        internal static string PolicyCalendarMaxSyncPeriod {
            get {
                return ResourceManager.GetString("PolicyCalendarMaxSyncPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far back a user can select to sync their calendar events..
        /// </summary>
        internal static string PolicyCalendarMaxSyncPeriodInfo {
            get {
                return ResourceManager.GetString("PolicyCalendarMaxSyncPeriodInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markings.
        /// </summary>
        internal static string PolicyClassMarkings {
            get {
                return ResourceManager.GetString("PolicyClassMarkings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Classification.
        /// </summary>
        internal static string PolicyClassMarkingsDefaultClass {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsDefaultClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Set the default classification for emails. The value must match a display name from an entry in PolicyClassMarkings configuration value..
        /// </summary>
        internal static string PolicyClassMarkingsDefaultClassInfo {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsDefaultClassInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables classification markings.
        /// </summary>
        internal static string PolicyClassMarkingsEnabled {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable or disable classification markings.
        /// </summary>
        internal static string PolicyClassMarkingsEnabledInfo {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsEnabledInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the hierarchical list of classifications..
        /// </summary>
        internal static string PolicyClassMarkingsInfo {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Ranking.
        /// </summary>
        internal static string PolicyClassMarkingsRankEnabled {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsRankEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Enables hierarchical classification ranking..
        /// </summary>
        internal static string PolicyClassMarkingsRankEnabledInfo {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsRankEnabledInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define x-header.
        /// </summary>
        internal static string PolicyClassMarkingsXHeader {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsXHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Enables and defines x-header for classification..
        /// </summary>
        internal static string PolicyClassMarkingsXHeaderInfo {
            get {
                return ResourceManager.GetString("PolicyClassMarkingsXHeaderInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string PolicyClassVersion {
            get {
                return ResourceManager.GetString("PolicyClassVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version number for classification feature.
        /// </summary>
        internal static string PolicyClassVersionInfo {
            get {
                return ResourceManager.GetString("PolicyClassVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QuickJoin custom URLs.
        /// </summary>
        internal static string PolicyCustomOnlineMeetingUrls {
            get {
                return ResourceManager.GetString("PolicyCustomOnlineMeetingUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Spam.
        /// </summary>
        internal static string PolicyDeleteOnSpamForward {
            get {
                return ResourceManager.GetString("PolicyDeleteOnSpamForward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Key Escrow (Forgot Passcode).
        /// </summary>
        internal static string PolicyDisableKeyEscrow {
            get {
                return ResourceManager.GetString("PolicyDisableKeyEscrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Email Sync Window.
        /// </summary>
        internal static string PolicyEmailMaxSyncPeriod {
            get {
                return ResourceManager.GetString("PolicyEmailMaxSyncPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict unsecured HTTP connections.
        /// </summary>
        internal static string PolicyEnforceHTTPS {
            get {
                return ResourceManager.GetString("PolicyEnforceHTTPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricts loading content coming from unsecured (HTTP) connections..
        /// </summary>
        internal static string PolicyEnforceHTTPSTooltip {
            get {
                return ResourceManager.GetString("PolicyEnforceHTTPSTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification Content.
        /// </summary>
        internal static string PolicyLimitNotificationText {
            get {
                return ResourceManager.GetString("PolicyLimitNotificationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls how much information is disclosed in each notification alert.
        /// </summary>
        internal static string PolicyLimitNotificationTextInfo {
            get {
                return ResourceManager.GetString("PolicyLimitNotificationTextInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of retries for SCEP.
        /// </summary>
        internal static string PolicyScepPendingMaxRetryAttempts {
            get {
                return ResourceManager.GetString("PolicyScepPendingMaxRetryAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval between each retry for SCEP in seconds.
        /// </summary>
        internal static string PolicyScepPendingRetryTimeout {
            get {
                return ResourceManager.GetString("PolicyScepPendingRetryTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users will be able to interact with the AIP labels.
        /// </summary>
        internal static string PolicySensitivityLabelsEmailClassificationInfo {
            get {
                return ResourceManager.GetString("PolicySensitivityLabelsEmailClassificationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME Status.
        /// </summary>
        internal static string PolicySMIME {
            get {
                return ResourceManager.GetString("PolicySMIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported Encryption Algorithms.
        /// </summary>
        internal static string PolicySMIMEConformingEncryptionAlgorithms {
            get {
                return ResourceManager.GetString("PolicySMIMEConformingEncryptionAlgorithms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows limiting the S/MIME encryption to specific algorithms. Encrypted emails that do not used an approved algorithm will be marked with a warning. If no valid values are provided, all algorithms will be considered acceptable..
        /// </summary>
        internal static string PolicySMIMEConformingEncryptionAlgorithmsInfo {
            get {
                return ResourceManager.GetString("PolicySMIMEConformingEncryptionAlgorithmsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported Signing Algorithms.
        /// </summary>
        internal static string PolicySMIMEConformingSigningAlgorithms {
            get {
                return ResourceManager.GetString("PolicySMIMEConformingSigningAlgorithms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Encryption Algorithm.
        /// </summary>
        internal static string PolicySMIMEDefaultEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("PolicySMIMEDefaultEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows limiting the S/MIME encryption to specific algorithms. Encrypted emails that do not use an approved algorithm will be marked with a warning. If no valid values are provided, all algorithms will be considered acceptable..
        /// </summary>
        internal static string PolicySMIMEDefaultEncryptionAlgorithmInfo {
            get {
                return ResourceManager.GetString("PolicySMIMEDefaultEncryptionAlgorithmInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Signing Algorithm.
        /// </summary>
        internal static string PolicySMIMEDefaultSigningAlgorithm {
            get {
                return ResourceManager.GetString("PolicySMIMEDefaultSigningAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME enable revocation check.
        /// </summary>
        internal static string PolicySMIMEEnableRevocationCheck {
            get {
                return ResourceManager.GetString("PolicySMIMEEnableRevocationCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the policy for S/MIME certificates revocation check.
        /// </summary>
        internal static string PolicySMIMEEnableRevocationCheckInfo {
            get {
                return ResourceManager.GetString("PolicySMIMEEnableRevocationCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME revocation check type.
        /// </summary>
        internal static string PolicySMIMERevocationCheckType {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationCheckType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the policy to execute revocation status check for the entire certificate chain or just the user certificate..
        /// </summary>
        internal static string PolicySMIMERevocationCheckTypeInfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationCheckTypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME revocation check URL.
        /// </summary>
        internal static string PolicySMIMERevocationCheckUrl {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationCheckUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This URL is used as OCSP Responder URL.
        /// </summary>
        internal static string PolicySMIMERevocationCheckUrlInfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationCheckUrlInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME Revocation Enforce Nonce.
        /// </summary>
        internal static string PolicySMIMERevocationEnforceNonce {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationEnforceNonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled nonce  will be enforced in OCSP requests.
        /// </summary>
        internal static string PolicySMIMERevocationEnforceNonceInfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationEnforceNonceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME revocation strictness.
        /// </summary>
        internal static string PolicySMIMERevocationStrictness {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationStrictness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the strictness level to be used to determine if a revoked certificate is allowed to be used or not.
        /// </summary>
        internal static string PolicySMIMERevocationStrictnessInfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationStrictnessInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME Revocation TTL.
        /// </summary>
        internal static string PolicySMIMERevocationTTL {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationTTL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the amount of time in days to retain the revocation data.
        /// </summary>
        internal static string PolicySMIMERevocationTTLinfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationTTLinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME Revocation Use Authority Information Access.
        /// </summary>
        internal static string PolicySMIMERevocationUseAIA {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationUseAIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy regarding the use of Authority Information Access extension in certificate.
        /// </summary>
        internal static string PolicySMIMERevocationUseAIAInfo {
            get {
                return ResourceManager.GetString("PolicySMIMERevocationUseAIAInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require EKU Extension Check.
        /// </summary>
        internal static string PolicySMIMEStrictEKUCheck {
            get {
                return ResourceManager.GetString("PolicySMIMEStrictEKUCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines whether we need to check the EKU extension of the S/MIME certificates. If it&apos;s set to true, we validate that EKU extension is present in the certificate and it has the Email Protection purpose set in it..
        /// </summary>
        internal static string PolicySMIMEStrictEKUCheckInfo {
            get {
                return ResourceManager.GetString("PolicySMIMEStrictEKUCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME Trust Store.
        /// </summary>
        internal static string PolicySMIMETrustStore {
            get {
                return ResourceManager.GetString("PolicySMIMETrustStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy Status.
        /// </summary>
        internal static string PolicyStatus {
            get {
                return ResourceManager.GetString("PolicyStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation Check.
        /// </summary>
        internal static string PolicyTLSEnableRevocationCheck {
            get {
                return ResourceManager.GetString("PolicyTLSEnableRevocationCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables/Disables TLS revocation checks.
        /// </summary>
        internal static string PolicyTLSEnableRevocationCheckInfo {
            get {
                return ResourceManager.GetString("PolicyTLSEnableRevocationCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation Check Type.
        /// </summary>
        internal static string PolicyTLSRevocationCheckType {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationCheckType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if revocation checks should apply to the entire chain or just server&apos;s cert. This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationCheckTypeInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationCheckTypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation Check URL.
        /// </summary>
        internal static string PolicyTLSRevocationCheckUrl {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationCheckUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OCSP Server URL. This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationCheckUrlInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationCheckUrlInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforce Nonce.
        /// </summary>
        internal static string PolicyTLSRevocationEnforceNonce {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationEnforceNonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforce nonce if enabled otherwise don&apos;t use nonce. This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationEnforceNonceInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationEnforceNonceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation Strictness.
        /// </summary>
        internal static string PolicyTLSRevocationStrictness {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationStrictness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set to Ignore the revocation check result is only logged and does not block TLS conncetions.When set to Strict, TLS connections are blocked if the Server&apos;s certificate is revoked, or the OCSP server cannot be reached. When set to Moderate, TLS connections are blocked if the Server&apos;s certificate is revoked. If the OCSP server cannot be reached, the previous check&apos;s result is used (if available). This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationStrictnessInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationStrictnessInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation TTL (Days).
        /// </summary>
        internal static string PolicyTLSRevocationTTL {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationTTL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time in days to retain revocation data. Negative value and zero are ignored, if responder doesn&apos;t provide next update value. If KVP is set, use the value from this KVP. If KVP is not set, default next check to 7 days. If responder provides nextupdate. If KVP is set - use the value from this KVP, nextupdate value from the responder is ignored. If this KVP not set - then use nextupdate value from responder. This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationTTLInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationTTLInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revocation Use AIA.
        /// </summary>
        internal static string PolicyTLSRevocationUseAIA {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationUseAIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled - don&apos;t use URL configured inside certificate for revocation status, use Revocation Check URL only. Enabled - use URL configured inside the certificate for revocation status check, fall back to Revocation Check URL if it&apos;s not available. Required - ONLY use URL configured inside certificate to check for revocation status, ignore Revocation Check URL. This policy will have no effect if Revocation Check is disabled..
        /// </summary>
        internal static string PolicyTLSRevocationUseAIAInfo {
            get {
                return ResourceManager.GetString("PolicyTLSRevocationUseAIAInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TLS Trust Check.
        /// </summary>
        internal static string PolicyTLSStrictTrustCheck {
            get {
                return ResourceManager.GetString("PolicyTLSStrictTrustCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to true, Boxer will perform stricter trust checks for the TLS server certificates. We check that all the root CA cert and the intermediate CA certs which form the entire certificate chain is installed in the trust store we create based on the console configuration Trust Store. This key plays a role only if Revocation Check has been enabled..
        /// </summary>
        internal static string PolicyTLSStrictTrustCheckInfo {
            get {
                return ResourceManager.GetString("PolicyTLSStrictTrustCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust Store.
        /// </summary>
        internal static string PolicyTLSTrustStore {
            get {
                return ResourceManager.GetString("PolicyTLSTrustStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled it uses device truststore and boxer trust store , when enabled, it will use Boxer trust store. Default is device trust store + boxer trust store. iOS: When Revocation Check is disabled will currently only use the Device Trust Store for the &apos;0&apos; value. When Custom Intermediate CA&apos;s are involved that do not come preloaded on the device, only valid option for for this will be &apos;1&apos; i.e. Always use Boxer Trust Store and the all intermediate CAs must be avaialbe in Boxer Trust Store to trust connectio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PolicyTLSTrustStoreInfo {
            get {
                return ResourceManager.GetString("PolicyTLSTrustStoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watermark Color.
        /// </summary>
        internal static string PolicyWatermarkColor {
            get {
                return ResourceManager.GetString("PolicyWatermarkColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the color of the text in the hexadecimal format. Blue is the default color.
        /// </summary>
        internal static string PolicyWatermarkColorInfo {
            get {
                return ResourceManager.GetString("PolicyWatermarkColorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watermark Opacity.
        /// </summary>
        internal static string PolicyWatermarkOpacity {
            get {
                return ResourceManager.GetString("PolicyWatermarkOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the opacity of the text. You can set any number from 0 through 100.
        /// </summary>
        internal static string PolicyWatermarkOpacityInfo {
            get {
                return ResourceManager.GetString("PolicyWatermarkOpacityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watermark Text.
        /// </summary>
        internal static string PolicyWatermarkText {
            get {
                return ResourceManager.GetString("PolicyWatermarkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the watermark text.
        /// </summary>
        internal static string PolicyWatermarkTextInfo {
            get {
                return ResourceManager.GetString("PolicyWatermarkTextInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a positive integer value.
        /// </summary>
        internal static string PositiveIntegerRequired {
            get {
                return ResourceManager.GetString("PositiveIntegerRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pradeo API Key.
        /// </summary>
        internal static string PradeoAPIKey {
            get {
                return ResourceManager.GetString("PradeoAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an entry is missing from this list that you expected to see, it may have been deleted or unassigned from this enterprise..
        /// </summary>
        internal static string PreReleaseVersionTooltip {
            get {
                return ResourceManager.GetString("PreReleaseVersionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent Removal.
        /// </summary>
        internal static string PreventRemoval {
            get {
                return ResourceManager.GetString("PreventRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the user is not allowed to uninstall the app. Requires iOS 14+..
        /// </summary>
        internal static string PreventRemovalTooltip {
            get {
                return ResourceManager.GetString("PreventRemovalTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product App.
        /// </summary>
        internal static string ProductApp {
            get {
                return ResourceManager.GetString("ProductApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product-based app assigned and installed.
        /// </summary>
        internal static string ProductAppInstalled {
            get {
                return ResourceManager.GetString("ProductAppInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product-based app assigned but not installed.
        /// </summary>
        internal static string ProductAppNotInstalled {
            get {
                return ResourceManager.GetString("ProductAppNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It appears file storage and CDN are disabled or the database size has reached max capacity for this organization. Please contact your administrator or enable these items and check your database storage to continue..
        /// </summary>
        internal static string ProviderDisabledFileUploadMessage {
            get {
                return ResourceManager.GetString("ProviderDisabledFileUploadMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provisioning profile associated with this application expires in {0} days. Once the provisioning profile expires, they will not be able to access the app and new users who try to install the app will be unable to do so. Regenerate the provisioning profile for the app and update it by clicking on the Renew button below. For devices that have the app already installed, renewing the provisioning profile will replace the existing profile on the device with the new profile added without reinstalling the app. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProvisioningProfileExpirationExplainationArgDays {
            get {
                return ResourceManager.GetString("ProvisioningProfileExpirationExplainationArgDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Application.
        /// </summary>
        internal static string PublicApplication {
            get {
                return ResourceManager.GetString("PublicApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Applications.
        /// </summary>
        internal static string PublicApplications {
            get {
                return ResourceManager.GetString("PublicApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same publisher has been added multiple times in this app group.
        /// </summary>
        internal static string PublisherAddedMultipleTimesInAppGroup {
            get {
                return ResourceManager.GetString("PublisherAddedMultipleTimesInAppGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same application has been added multiple times as an exception for a publisher.
        /// </summary>
        internal static string PublisherExceptionAddedMultipleTimesInAppGroup {
            get {
                return ResourceManager.GetString("PublisherExceptionAddedMultipleTimesInAppGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchased Application.
        /// </summary>
        internal static string PurchasedApplication {
            get {
                return ResourceManager.GetString("PurchasedApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchased Applications.
        /// </summary>
        internal static string PurchasedApplications {
            get {
                return ResourceManager.GetString("PurchasedApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchased App License Assignment By Smart Group.
        /// </summary>
        internal static string PurchasedAppLicenseAssignmentBySmartGroup {
            get {
                return ResourceManager.GetString("PurchasedAppLicenseAssignmentBySmartGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purebred.
        /// </summary>
        internal static string Purebred {
            get {
                return ResourceManager.GetString("Purebred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Reply.
        /// </summary>
        internal static string QuickReply {
            get {
                return ResourceManager.GetString("QuickReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranking.
        /// </summary>
        internal static string Ranking {
            get {
                return ResourceManager.GetString("Ranking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read/Unread.
        /// </summary>
        internal static string Read_Unread {
            get {
                return ResourceManager.GetString("Read/Unread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Status Details.
        /// </summary>
        internal static string ReasonsBreakdown {
            get {
                return ResourceManager.GetString("ReasonsBreakdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a representation of the data reported by devices that includes detailed information about the installation state of this app and is not tied to a particular version..
        /// </summary>
        internal static string ReasonsBreakdownToolTip {
            get {
                return ResourceManager.GetString("ReasonsBreakdownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redeeming Code.
        /// </summary>
        internal static string RedeemingCode {
            get {
                return ResourceManager.GetString("RedeemingCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redemption Code.
        /// </summary>
        internal static string RedemptionCode {
            get {
                return ResourceManager.GetString("RedemptionCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redemption Codes.
        /// </summary>
        internal static string RedemptionCodes {
            get {
                return ResourceManager.GetString("RedemptionCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Apps.
        /// </summary>
        internal static string RefreshApps {
            get {
                return ResourceManager.GetString("RefreshApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device acknowledged application removal.
        /// </summary>
        internal static string RemoveApplicationConfirmed {
            get {
                return ResourceManager.GetString("RemoveApplicationConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove {0} Application Opens Dialog.
        /// </summary>
        internal static string RemoveArgApplicationOpensDialog {
            get {
                return ResourceManager.GetString("RemoveArgApplicationOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Command Dispatched.
        /// </summary>
        internal static string RemoveCommandDispatched {
            get {
                return ResourceManager.GetString("RemoveCommandDispatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Acknowledged Remove.
        /// </summary>
        internal static string RemoveCommandSuccessful {
            get {
                return ResourceManager.GetString("RemoveCommandSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed by EMM.
        /// </summary>
        internal static string RemovedByEmm {
            get {
                return ResourceManager.GetString("RemovedByEmm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed by User.
        /// </summary>
        internal static string RemovedByUser {
            get {
                return ResourceManager.GetString("RemovedByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This app will be removed only on devices that have the app installed and managed by EMM..
        /// </summary>
        internal static string RemoveFromSelectedDevices {
            get {
                return ResourceManager.GetString("RemoveFromSelectedDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove previous values.
        /// </summary>
        internal static string RemovePreviousValues {
            get {
                return ResourceManager.GetString("RemovePreviousValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require Approval To Install.
        /// </summary>
        internal static string RequireApprovalToInstall {
            get {
                return ResourceManager.GetString("RequireApprovalToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users in the selected Assignment Group will be required to obtain approval to access this app..
        /// </summary>
        internal static string RequireApprovalToInstallToolTip {
            get {
                return ResourceManager.GetString("RequireApprovalToInstallToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please add {0} in {1} tab.
        /// </summary>
        internal static string RequiredEmailSettings {
            get {
                return ResourceManager.GetString("RequiredEmailSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of days after which device automatically reboots.
        /// </summary>
        internal static string RestartDeadlineInDays {
            get {
                return ResourceManager.GetString("RestartDeadlineInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents the user from taking screenshots of the app.(Android only).
        /// </summary>
        internal static string RestrictScreenshotsInfo {
            get {
                return ResourceManager.GetString("RestrictScreenshotsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review Request is unauthorized or expired. Please refresh the page and review again..
        /// </summary>
        internal static string ReviewRequestExpired {
            get {
                return ResourceManager.GetString("ReviewRequestExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Review the summary before adding an app. You can edit some fields later through application list view.
        /// </summary>
        internal static string ReviewSummaryBeforeAddingApp {
            get {
                return ResourceManager.GetString("ReviewSummaryBeforeAddingApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revision Number.
        /// </summary>
        internal static string RevisionNumber {
            get {
                return ResourceManager.GetString("RevisionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid value in the Revision Version field.
        /// </summary>
        internal static string RevisionVersion {
            get {
                return ResourceManager.GetString("RevisionVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/MIME policy.
        /// </summary>
        internal static string S_MIMEPolicy {
            get {
                return ResourceManager.GetString("S/MIMEPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE needs to be set up before SaaS applications can be used. Go to {0} and complete the Workspace ONE setup. Once completed, log out and log back in to try again..
        /// </summary>
        internal static string SaaSAppsIDMSetupArg {
            get {
                return ResourceManager.GetString("SaaSAppsIDMSetupArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more smart groups are already assigned to this app in another assignment. Please remove these smart groups to continue..
        /// </summary>
        internal static string SameAssignmentExists {
            get {
                return ResourceManager.GetString("SameAssignmentExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Configuration.
        /// </summary>
        internal static string SaveConfiguration {
            get {
                return ResourceManager.GetString("SaveConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures the max number of retry attempts for a SCEP fetch in the SDK.
        /// </summary>
        internal static string ScepPendingMaxRetryAttemptsInfo {
            get {
                return ResourceManager.GetString("ScepPendingMaxRetryAttemptsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval between each retry for SCEP fetch in the SDK.
        /// </summary>
        internal static string ScepPendingRetryTimeoutInfo {
            get {
                return ResourceManager.GetString("ScepPendingRetryTimeoutInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom script to be uploaded.
        /// </summary>
        internal static string ScriptFileHelpText {
            get {
                return ResourceManager.GetString("ScriptFileHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Patch.
        /// </summary>
        internal static string SecurityPatch {
            get {
                return ResourceManager.GetString("SecurityPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Patch Date cannot be empty if policy is enabled.
        /// </summary>
        internal static string SecurityPatchDateNotSetError {
            get {
                return ResourceManager.GetString("SecurityPatchDateNotSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application requires approval to install on this specific device. An approval request can be initiated by the end user..
        /// </summary>
        internal static string SelectedDeviceRequiresApprovalAlert {
            get {
                return ResourceManager.GetString("SelectedDeviceRequiresApprovalAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will be installed on all devices except those that require approval for access to the app. An approval request can be initiated by the end user..
        /// </summary>
        internal static string SelectedDevicesRequireApprovalAlert {
            get {
                return ResourceManager.GetString("SelectedDevicesRequireApprovalAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure this application using the settings provided by the app developer..
        /// </summary>
        internal static string SendAppConfigDescription {
            get {
                return ResourceManager.GetString("SendAppConfigDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Configuration.
        /// </summary>
        internal static string SendAppConfiguration {
            get {
                return ResourceManager.GetString("SendAppConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Application Attributes.
        /// </summary>
        internal static string SendApplicationAttributes {
            get {
                return ResourceManager.GetString("SendApplicationAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Attributes.
        /// </summary>
        internal static string SendAttibutes {
            get {
                return ResourceManager.GetString("SendAttibutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, all iOS devices will automatically be invited to install VPP apps. If not, devices will be invited when VPP apps are installed..
        /// </summary>
        internal static string SendInviteTooltip {
            get {
                return ResourceManager.GetString("SendInviteTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show CallKit Option.
        /// </summary>
        internal static string ShowCallKitOption {
            get {
                return ResourceManager.GetString("ShowCallKitOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Side Loaded Installs.
        /// </summary>
        internal static string SideLoadedCount {
            get {
                return ResourceManager.GetString("SideLoadedCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing Certificate Authority.
        /// </summary>
        internal static string SigningCertificateAuthority {
            get {
                return ResourceManager.GetString("SigningCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing Certificate Template.
        /// </summary>
        internal static string SigningCertificateTemplate {
            get {
                return ResourceManager.GetString("SigningCertificateTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smart group is not present in any of the assignments associated with the application..
        /// </summary>
        internal static string SmartGroupNotPresentInAssignment {
            get {
                return ResourceManager.GetString("SmartGroupNotPresentInAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users with S/MIME certificates already associated, User&gt; Advanced&gt; Certificates, will receive them in addition to the sources below. Select either the certificate associated with the user account or the source below.
        /// </summary>
        internal static string SmimeBoxerUserInfoMsg {
            get {
                return ResourceManager.GetString("SmimeBoxerUserInfoMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows limiting the S/MIME encryption to specific algorithms. Encrypted emails that do not use an approved algorithm will be marked with a warning. If no valid values are provided, all algorithms will be considered acceptable..
        /// </summary>
        internal static string SMIMEConformingEncryptionAlgorithmsInfo {
            get {
                return ResourceManager.GetString("SMIMEConformingEncryptionAlgorithmsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows limiting the S/MIME signing to specific algorithms. Signed emails that do not use an approved algorithm will be marked with a warning. If no valid values are provided, all algorithms will be considered acceptable..
        /// </summary>
        internal static string SMIMEConformingSigningAlgorithmsInfo {
            get {
                return ResourceManager.GetString("SMIMEConformingSigningAlgorithmsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify an encryption algorithm to use for incoming and outgoing emails. If a valid algorithm is not provided, the lowest supported algorithm is used (3DES)..
        /// </summary>
        internal static string SMIMEDefaultEncryptionAlgorithmInfo {
            get {
                return ResourceManager.GetString("SMIMEDefaultEncryptionAlgorithmInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a default S/MIME signing algorithm to use for incoming and outgoing emails. If a valid algorithm is not provided, the lowest supported algorithm is used (SHA-1)..
        /// </summary>
        internal static string SMIMEDefaultSigningAlgorithmInfo {
            get {
                return ResourceManager.GetString("SMIMEDefaultSigningAlgorithmInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure S/MIME.
        /// </summary>
        internal static string SmimeInfo {
            get {
                return ResourceManager.GetString("SmimeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure S/MIME requirements.
        /// </summary>
        internal static string SMIMEStatusInfo {
            get {
                return ResourceManager.GetString("SMIMEStatusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines whether we need to check the EKU extension of the S/MIME certificates. If it&apos;s set to true, we validate that EKU extension is present in the certificate and it has the Email Protection purpose set in it..
        /// </summary>
        internal static string SMIMEStrictEKUCheckInfo {
            get {
                return ResourceManager.GetString("SMIMEStrictEKUCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spam.
        /// </summary>
        internal static string Spam {
            get {
                return ResourceManager.GetString("Spam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spam &amp; Phishing Reporting.
        /// </summary>
        internal static string SpamAndPhishingReporting {
            get {
                return ResourceManager.GetString("SpamAndPhishingReporting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the actions to be taken on email identified as spam or phishing attack.
        /// </summary>
        internal static string SpamAndPhishingReportingInfo {
            get {
                return ResourceManager.GetString("SpamAndPhishingReportingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure whether you want to allow end-user to report spam in the &apos;App policies&apos;&gt;&apos;Usability&apos; section.
        /// </summary>
        internal static string SpamReportConfigPositionChangeInfo {
            get {
                return ResourceManager.GetString("SpamReportConfigPositionChangeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid application, only upload the Workspace ONE Launcher APK.
        /// </summary>
        internal static string SpecificApplicationIsNotSupported {
            get {
                return ResourceManager.GetString("SpecificApplicationIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To enable SSO on Boxer, enable this option and the SSO configuration on your SDK profile. Once enabled, SSO cannot be disabled without reinstalling Workspace ONE Boxer..
        /// </summary>
        internal static string SsoInfo {
            get {
                return ResourceManager.GetString("SsoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status - LastAction.
        /// </summary>
        internal static string StatusLastAction {
            get {
                return ResourceManager.GetString("StatusLastAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sToken uploaded for this organization group has expired. Renew the sToken and upload again..
        /// </summary>
        internal static string StokenExpiredMessage {
            get {
                return ResourceManager.GetString("StokenExpiredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sToken uploaded for this organization group has been revoked. Upload a new sToken..
        /// </summary>
        internal static string StokenRevokedMessage {
            get {
                return ResourceManager.GetString("StokenRevokedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strict.
        /// </summary>
        internal static string Strict {
            get {
                return ResourceManager.GetString("Strict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the architecture type that the application supports. Selecting 32-bit will publish this application to 32-bit, 64-bit and ARM64 devices.
        /// </summary>
        internal static string SupportedProcessorArchitectureHelp {
            get {
                return ResourceManager.GetString("SupportedProcessorArchitectureHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support Email Address.
        /// </summary>
        internal static string SupportEmailAddress {
            get {
                return ResourceManager.GetString("SupportEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email address to be specified when sending logs via the support menu..
        /// </summary>
        internal static string SupportEmailAddressInfo {
            get {
                return ResourceManager.GetString("SupportEmailAddressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value to one of the below to set the default action when a user swipes on an email in the email list view. Please note that if the user changes this setting, the console will not override their choice.
        /// </summary>
        internal static string SwipesLeftLongInfo {
            get {
                return ResourceManager.GetString("SwipesLeftLongInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value to one of the below to set the default action when a user swipes on an email in the email list view. Please note that if the user changes this setting, the console will not override their choice.
        /// </summary>
        internal static string SwipesLeftShortInfo {
            get {
                return ResourceManager.GetString("SwipesLeftShortInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value to one of the below to set the default action when a user swipes on an email in the email list view. Please note that if the user changes this setting, the console will not override their choice.
        /// </summary>
        internal static string SwipesRightLongInfo {
            get {
                return ResourceManager.GetString("SwipesRightLongInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the value to one of the below to set the default action when a user swipes on an email in the email list view. Please note that if the user changes this setting, the console will not override their choice.
        /// </summary>
        internal static string SwipesRightShortInfo {
            get {
                return ResourceManager.GetString("SwipesRightShortInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Contacts.
        /// </summary>
        internal static string SyncContact {
            get {
                return ResourceManager.GetString("SyncContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Tunnel Configuration.
        /// </summary>
        internal static string SyncTunnelConfiguration {
            get {
                return ResourceManager.GetString("SyncTunnelConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded Patch.
        /// </summary>
        internal static string TempUploadedPatch {
            get {
                return ResourceManager.GetString("TempUploadedPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded Transform.
        /// </summary>
        internal static string TempUploadedTransform {
            get {
                return ResourceManager.GetString("TempUploadedTransform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity.
        /// </summary>
        internal static string TenantStorageCapacity {
            get {
                return ResourceManager.GetString("TenantStorageCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity (MB).
        /// </summary>
        internal static string TenantStorageCapacityMegaBytes {
            get {
                return ResourceManager.GetString("TenantStorageCapacityMegaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GB.
        /// </summary>
        internal static string TenantStorageGigaBytes {
            get {
                return ResourceManager.GetString("TenantStorageGigaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max File Size.
        /// </summary>
        internal static string TenantStorageMaxFileSize {
            get {
                return ResourceManager.GetString("TenantStorageMaxFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max File Size (MB).
        /// </summary>
        internal static string TenantStorageMaxFileSizeMegaBytes {
            get {
                return ResourceManager.GetString("TenantStorageMaxFileSizeMegaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MB.
        /// </summary>
        internal static string TenantStorageMegaBytes {
            get {
                return ResourceManager.GetString("TenantStorageMegaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overage Allowed.
        /// </summary>
        internal static string TenantStorageOverageAllowed {
            get {
                return ResourceManager.GetString("TenantStorageOverageAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overage Allowed (MB).
        /// </summary>
        internal static string TenantStorageOverageAllowedMegaBytes {
            get {
                return ResourceManager.GetString("TenantStorageOverageAllowedMegaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This field is required.
        /// </summary>
        internal static string ThisFieldIsRequired {
            get {
                return ResourceManager.GetString("ThisFieldIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3 Days.
        /// </summary>
        internal static string ThreeDays {
            get {
                return ResourceManager.GetString("ThreeDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Received.
        /// </summary>
        internal static string TimeReceived {
            get {
                return ResourceManager.GetString("TimeReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        internal static string TimeStamp {
            get {
                return ResourceManager.GetString("TimeStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure TLS.
        /// </summary>
        internal static string TLSInfo {
            get {
                return ResourceManager.GetString("TLSInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Count.
        /// </summary>
        internal static string TotalCount {
            get {
                return ResourceManager.GetString("TotalCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total redeemed count is the sum of licenses redeemed by this Workspace ONE UEM console and licenses redeemed outside of this Workspace ONE UEM console. These licenses have been claimed by devices and must be revoked before they can be distributed..
        /// </summary>
        internal static string TotalRedeemedLicensesHelpText {
            get {
                return ResourceManager.GetString("TotalRedeemedLicensesHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Action Details.
        /// </summary>
        internal static string TriggerAccount {
            get {
                return ResourceManager.GetString("TriggerAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays details of latest action taken on assigned devices for this app..
        /// </summary>
        internal static string TriggerAccountToolTip {
            get {
                return ResourceManager.GetString("TriggerAccountToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust Store.
        /// </summary>
        internal static string TrustStore {
            get {
                return ResourceManager.GetString("TrustStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel &amp; Other Attributes.
        /// </summary>
        internal static string TunnelAndOtherAttributes {
            get {
                return ResourceManager.GetString("TunnelAndOtherAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tunnel configuration would be synced on {0} devices.
        /// </summary>
        internal static string TunnelConfigGridBulkActionArg {
            get {
                return ResourceManager.GetString("TunnelConfigGridBulkActionArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UEM Version.
        /// </summary>
        internal static string UemVersion {
            get {
                return ResourceManager.GetString("UemVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpause.
        /// </summary>
        internal static string UnPause {
            get {
                return ResourceManager.GetString("UnPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpaused.
        /// </summary>
        internal static string Unpaused {
            get {
                return ResourceManager.GetString("Unpaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By taking this action, you will unpause removals for this application for any device that no longer has the entitlements. Make sure the entitlements are all accurate before you proceed. Click on &apos;Ok&apos; if you wish to proceed..
        /// </summary>
        internal static string UnPauseToSelectedDevice {
            get {
                return ResourceManager.GetString("UnPauseToSelectedDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre-release Version.
        /// </summary>
        internal static string UnreleasedVersions {
            get {
                return ResourceManager.GetString("UnreleasedVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade Application.
        /// </summary>
        internal static string UpgradeApplication {
            get {
                return ResourceManager.GetString("UpgradeApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}%.
        /// </summary>
        internal static string UploadedPercentageFormat {
            get {
                return ResourceManager.GetString("UploadedPercentageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded UEM Version.
        /// </summary>
        internal static string UploadedUemVersion {
            get {
                return ResourceManager.GetString("UploadedUemVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded Version.
        /// </summary>
        internal static string UploadedVersion {
            get {
                return ResourceManager.GetString("UploadedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload in progress, please do not close the modal or refresh the page..
        /// </summary>
        internal static string UploadInProgressDoNotClose {
            get {
                return ResourceManager.GetString("UploadInProgressDoNotClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload is still in progress, please do not close the modal or refresh the page..
        /// </summary>
        internal static string UploadStillInProgress {
            get {
                return ResourceManager.GetString("UploadStillInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please upload the uninstall script for the application.
        /// </summary>
        internal static string UploadUninstallScript {
            get {
                return ResourceManager.GetString("UploadUninstallScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usability.
        /// </summary>
        internal static string Usability {
            get {
                return ResourceManager.GetString("Usability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Escrow Gateway.
        /// </summary>
        internal static string UseEscrowGateway {
            get {
                return ResourceManager.GetString("UseEscrowGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option will only apply on Boxer 5.19 or higher version and when Escrow Gateway is configured..
        /// </summary>
        internal static string UseEscrowGatewayInfo {
            get {
                return ResourceManager.GetString("UseEscrowGatewayInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User App Rating Info.
        /// </summary>
        internal static string UserAppRatingInfo {
            get {
                return ResourceManager.GetString("UserAppRatingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Certificaticate only.
        /// </summary>
        internal static string UserCertificateOnly {
            get {
                return ResourceManager.GetString("UserCertificateOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the user does not have a certificate, this credential will be skipped and the rest of the profile will be delivered to end-users. If available, user certificate is pulled from the specific Workspace ONE user. The certificate can be uploaded manually through the user details in the console or Self Service..
        /// </summary>
        internal static string UserCertificateOptionalInfo {
            get {
                return ResourceManager.GetString("UserCertificateOptionalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None (Application Installation Deferred By User).
        /// </summary>
        internal static string UserDeferredInstall {
            get {
                return ResourceManager.GetString("UserDeferredInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Engaged Deadline.
        /// </summary>
        internal static string UserEngagedDeadline {
            get {
                return ResourceManager.GetString("UserEngagedDeadline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-engaged restart.
        /// </summary>
        internal static string UserEngagedRestart {
            get {
                return ResourceManager.GetString("UserEngagedRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Same Signing And Encryption Certificate.
        /// </summary>
        internal static string UseSameSigningAndEncryptionCertificate {
            get {
                return ResourceManager.GetString("UseSameSigningAndEncryptionCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same S/MIME certificate is used for signing and encryption, unless no is selected..
        /// </summary>
        internal static string UseSameSigningAndEncryptionCertificateInfo {
            get {
                return ResourceManager.GetString("UseSameSigningAndEncryptionCertificateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating Dependent Apps.
        /// </summary>
        internal static string ValidatingDependentApps {
            get {
                return ResourceManager.GetString("ValidatingDependentApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected app does not have any assignments defined. Please choose a different app or define at least one assignment and try again..
        /// </summary>
        internal static string ValidationAppConfiguration {
            get {
                return ResourceManager.GetString("ValidationAppConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another step with similar configuration exists..
        /// </summary>
        internal static string ValidationDuplicateStep {
            get {
                return ResourceManager.GetString("ValidationDuplicateStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save changes. Make sure each field is complete, and there are no errors before trying again..
        /// </summary>
        internal static string ValidationErrorMessage {
            get {
                return ResourceManager.GetString("ValidationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version code for this android application is {0} and it already exists in the OG, please ask your developer to update the version code. Version codes already added for the Identifier {1} in the current OG are {2}..
        /// </summary>
        internal static string VersionCodeAlreadyExistsInOG {
            get {
                return ResourceManager.GetString("VersionCodeAlreadyExistsInOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to version(s).
        /// </summary>
        internal static string Versions {
            get {
                return ResourceManager.GetString("Versions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Versions Installed.
        /// </summary>
        internal static string VersionsInstalled {
            get {
                return ResourceManager.GetString("VersionsInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Criteria.
        /// </summary>
        internal static string ViewCriteria {
            get {
                return ResourceManager.GetString("ViewCriteria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Apps.
        /// </summary>
        internal static string ViewFlexeraApps {
            get {
                return ResourceManager.GetString("ViewFlexeraApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Install Status for {0}.
        /// </summary>
        internal static string ViewInstallStatusForApplication {
            get {
                return ResourceManager.GetString("ViewInstallStatusForApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Applications.
        /// </summary>
        internal static string VirtualApplications {
            get {
                return ResourceManager.GetString("VirtualApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls Access to Virtual Apps configuration; applicable to directory admins only.
        /// </summary>
        internal static string VirtualApplicationsHelp {
            get {
                return ResourceManager.GetString("VirtualApplicationsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Apps.
        /// </summary>
        internal static string VirtualApps {
            get {
                return ResourceManager.GetString("VirtualApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See a listing of Virtual Apps and Desktops available for employees to access from the Workspace ONE catalog..
        /// </summary>
        internal static string VirtualAppsHelp {
            get {
                return ResourceManager.GetString("VirtualAppsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE needs to be set up before Virtual Applications can be used. Go to {0} and complete the Workspace ONE setup. Once completed, log out and log back in to try again..
        /// </summary>
        internal static string VirtualAppsIDMSetupArg {
            get {
                return ResourceManager.GetString("VirtualAppsIDMSetupArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See a listing of Virtual Apps and Desktops available for employees to access from the Workspace ONE catalog..
        /// </summary>
        internal static string VirtualAppsMenuDescription {
            get {
                return ResourceManager.GetString("VirtualAppsMenuDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View and manage virtual apps and collections..
        /// </summary>
        internal static string VirtualBreadcrumbDescription {
            get {
                return ResourceManager.GetString("VirtualBreadcrumbDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware docs.
        /// </summary>
        internal static string VMwareDocs {
            get {
                return ResourceManager.GetString("VMwareDocs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None (License Not Available).
        /// </summary>
        internal static string VPPLicenseNotAvailable {
            get {
                return ResourceManager.GetString("VPPLicenseNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for event.
        /// </summary>
        internal static string WaitingForEvent {
            get {
                return ResourceManager.GetString("WaitingForEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for schedule.
        /// </summary>
        internal static string WaitingForSchedule {
            get {
                return ResourceManager.GetString("WaitingForSchedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for time window.
        /// </summary>
        internal static string WaitingForTimeWindow {
            get {
                return ResourceManager.GetString("WaitingForTimeWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting to be retired.
        /// </summary>
        internal static string WaitingToBeRetried {
            get {
                return ResourceManager.GetString("WaitingToBeRetried", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to continue?.
        /// </summary>
        internal static string WantToContinue {
            get {
                return ResourceManager.GetString("WantToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Links.
        /// </summary>
        internal static string WebLinkMenus {
            get {
                return ResourceManager.GetString("WebLinkMenus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retiring a version of an app will uninstall the app from all devices managed by Workspace ONE. If the next lower version of the app is available and assigned, no action will be taken because the device OS does not support downgrading the app..
        /// </summary>
        internal static string WindowsAppsRetireDescription {
            get {
                return ResourceManager.GetString("WindowsAppsRetireDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application requires a user context for installation. It cannot be included in the exported PPKG.
        /// </summary>
        internal static string WindowsProvisioningInstallContextWarning {
            get {
                return ResourceManager.GetString("WindowsProvisioningInstallContextWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the application(s) to export to a Windows Provisioning Package.
        /// </summary>
        internal static string WindowsProvisioningNoAppSelected {
            get {
                return ResourceManager.GetString("WindowsProvisioningNoAppSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is inherited from another Organization Group. It cannot be included in the exported PPKG..
        /// </summary>
        internal static string WindowsProvisioningOGInheritedWarning {
            get {
                return ResourceManager.GetString("WindowsProvisioningOGInheritedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error occurred while deleting the Provisioning Package (PPKG)..
        /// </summary>
        internal static string WindowsProvisioningPackageDeleteFailed {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Provisioning Package (PPKG) deleted successfully..
        /// </summary>
        internal static string WindowsProvisioningPackageDeleteSuccess {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageDeleteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Provisioning Package cannot be deleted because it is either managed at a higher organization group or admin has read-only access..
        /// </summary>
        internal static string WindowsProvisioningPackageDeleteWarning {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageDeleteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        internal static string WindowsProvisioningPackageDownloadAction {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageDownloadAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Provisioning Package cannot be edited because it is either managed at a higher organization group or admin has read-only access..
        /// </summary>
        internal static string WindowsProvisioningPackageEditWarning {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageEditWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error occurred while requesting the Provisioning Package (PPKG)..
        /// </summary>
        internal static string WindowsProvisioningPackageFailed {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to export the Windows Provisioning Package (PPKG).
        /// </summary>
        internal static string WindowsProvisioningPackageFailedMessage {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An existing Windows Provisioning Package (PPKG) export request is in progress. Please wait for the export to complete..
        /// </summary>
        internal static string WindowsProvisioningPackagePleaseWait {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackagePleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Apps.
        /// </summary>
        internal static string WindowsProvisioningPackageProgressActionMessage {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageProgressActionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows Provisioning Package (PPKG) is being exported..
        /// </summary>
        internal static string WindowsProvisioningPackageProgressMessage {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Provisioning Package (PPKG) export is successfully requested. When the PPKG export is complete, a notification will be sent with a link to download it..
        /// </summary>
        internal static string WindowsProvisioningPackageRequested {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to export the Windows Provisioning Package (PPKG) due to insufficient storage.
        /// </summary>
        internal static string WindowsProvisioningPackageStorageFailed {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageStorageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        internal static string WindowsProvisioningPackageSuccessActionMessage {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageSuccessActionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exported Windows Provisioning Package (PPKG) is available for download..
        /// </summary>
        internal static string WindowsProvisioningPackageSuccessMessage {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Provisioning Package.
        /// </summary>
        internal static string WindowsProvisioningPackageTitle {
            get {
                return ResourceManager.GetString("WindowsProvisioningPackageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application must be uploaded after enabling Software Package Deployment in Settings for it to be included in the exported PPKG.
        /// </summary>
        internal static string WindowsProvisioningSFDReUploadWarning {
            get {
                return ResourceManager.GetString("WindowsProvisioningSFDReUploadWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applicable to MDM managed apps deployed using the Auto delivery method. When enabled, the application will be automatically re-installed when an uninstall is detected. When disabled, the application will not be re-installed when uninstall is detected..
        /// </summary>
        internal static string WinRTDesiredStateManagementTooltip {
            get {
                return ResourceManager.GetString("WinRTDesiredStateManagementTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give the workflow a friendly name and description..
        /// </summary>
        internal static string WorkflowDefinitionDesc {
            get {
                return ResourceManager.GetString("WorkflowDefinitionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device will be rebooted before proceeding to next step if any..
        /// </summary>
        internal static string WorkflowRebootPlaceholder {
            get {
                return ResourceManager.GetString("WorkflowRebootPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflows.
        /// </summary>
        internal static string Workflows {
            get {
                return ResourceManager.GetString("Workflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search and add apps, conditions here to create your workflow. Workflow will execute in the order below. Drag to reorder..
        /// </summary>
        internal static string WorkflowStepsDesc {
            get {
                return ResourceManager.GetString("WorkflowStepsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start by adding apps or conditions.
        /// </summary>
        internal static string WorkflowStepsPlaceholder {
            get {
                return ResourceManager.GetString("WorkflowStepsPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please review workflow details and steps before saving..
        /// </summary>
        internal static string WorkflowSummaryDesc {
            get {
                return ResourceManager.GetString("WorkflowSummaryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Admin Assistant for macOS.
        /// </summary>
        internal static string WorkspaceOneAdminAssistantForMacOs {
            get {
                return ResourceManager.GetString("WorkspaceOneAdminAssistantForMacOs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X64 Dependencies.
        /// </summary>
        internal static string X64AppDependencies {
            get {
                return ResourceManager.GetString("X64AppDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X86 Dependencies.
        /// </summary>
        internal static string X86AppDependencies {
            get {
                return ResourceManager.GetString("X86AppDependencies", resourceCulture);
            }
        }
		
		/// <summary>
        ///   Looks up a localized string similar to ARM64 Dependencies.
        /// </summary>
        internal static string Arm64AppDependencies {
            get {
                return ResourceManager.GetString("Arm64AppDependencies", resourceCulture);
            }
        }
		
		/// <summary>
        ///   Looks up a localized string similar to ARM64 Dependencies Missing.
        /// </summary>
        internal static string Arm64AppDependenciesMissing {
            get {
                return ResourceManager.GetString("Arm64AppDependenciesMissing", resourceCulture);
            }
        }
		
		/// <summary>
        ///   Looks up a localized string similar to File is invalid for ARM64 architecture.
        /// </summary>
        internal static string FileIsInvalidForArm64Architecture {
            get {
                return ResourceManager.GetString("FileIsInvalidForArm64Architecture", resourceCulture);
            }
        }
		
		/// <summary>
        ///   Looks up a localized string similar to ARM64 Architecture Application File.
        /// </summary>
        internal static string Arm64ArchitectureApplicationFile {
            get {
                return ResourceManager.GetString("Arm64ArchitectureApplicationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value should be zero or a positive integer.
        /// </summary>
        internal static string ZeroOrPositiveIntegerRequired {
            get {
                return ResourceManager.GetString("ZeroOrPositiveIntegerRequired", resourceCulture);
            }
        }
    }
}
