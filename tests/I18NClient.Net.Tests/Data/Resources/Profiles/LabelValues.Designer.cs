//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WanderingWiFi.AirWatch.Globalization.Resources.Profiles {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LabelValues {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LabelValues() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WanderingWiFi.AirWatch.Globalization.Resources.Profiles.LabelValues", typeof(LabelValues).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abort Action.
        /// </summary>
        internal static string AbortAction {
            get {
                return ResourceManager.GetString("AbortAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control the application via the Accessibility subsystem..
        /// </summary>
        internal static string AccessibilityPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AccessibilityPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Directory Realm.
        /// </summary>
        internal static string ActiveDirectoryRealm {
            get {
                return ResourceManager.GetString("ActiveDirectoryRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Hours (End).
        /// </summary>
        internal static string ActiveHoursEndUi {
            get {
                return ResourceManager.GetString("ActiveHoursEndUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Hours Maximum (Hours).
        /// </summary>
        internal static string ActiveHoursMaxRangeInHours {
            get {
                return ResourceManager.GetString("ActiveHoursMaxRangeInHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Hours (Start).
        /// </summary>
        internal static string ActiveHoursStartUi {
            get {
                return ResourceManager.GetString("ActiveHoursStartUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add {0} Profile.
        /// </summary>
        internal static string AddArgProfile {
            get {
                return ResourceManager.GetString("AddArgProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Custom Folders.
        /// </summary>
        internal static string AddCustomFolders {
            get {
                return ResourceManager.GetString("AddCustomFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Description.
        /// </summary>
        internal static string AddDescription {
            get {
                return ResourceManager.GetString("AddDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add additional executable paths required for the main application to work properly..
        /// </summary>
        internal static string AddExecutablePathInfo {
            get {
                return ResourceManager.GetString("AddExecutablePathInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Firewall Rule.
        /// </summary>
        internal static string AddFirewallRule {
            get {
                return ResourceManager.GetString("AddFirewallRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional revocation check.
        /// </summary>
        internal static string AdditionalRevocationCheck {
            get {
                return ResourceManager.GetString("AdditionalRevocationCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If soft revocation check is selected, until the certificate is explicitly rejected by CRL/OCSP, it is considered as valid. This implies that unavailable/unreachable CRL/OCSP allows this check to succeed.
        ///If hard revocation check is selected, unless CRL/OCSP explicitly says “this certificate is OK”, the certificate is considered as invalid. The is the most secure option..
        /// </summary>
        internal static string AdditionalRevocationCheckInfo {
            get {
                return ResourceManager.GetString("AdditionalRevocationCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Settings.
        /// </summary>
        internal static string AdditionalSettings {
            get {
                return ResourceManager.GetString("AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        internal static string AddPath {
            get {
                return ResourceManager.GetString("AddPath", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Add payloads to your profile.
        /// </summary>
        internal static string AddPayloadsToYourProfile
        {
            get
            {
                return ResourceManager.GetString("AddPayloadsToYourProfile", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Address Book.
        /// </summary>
        internal static string AddressBook {
            get {
                return ResourceManager.GetString("AddressBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact information managed by Contacts.app..
        /// </summary>
        internal static string AddressBookPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AddressBookPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this setting to specify the address and port for the Proxy Server. The format for the address is &quot;server[:port]&quot;..
        /// </summary>
        internal static string AddressToProxyHelp {
            get {
                return ResourceManager.GetString("AddressToProxyHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address to Proxy Server.
        /// </summary>
        internal static string AddressToProxyServer {
            get {
                return ResourceManager.GetString("AddressToProxyServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Row.
        /// </summary>
        internal static string AddRowForPinnedApps {
            get {
                return ResourceManager.GetString("AddRowForPinnedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Section.
        /// </summary>
        internal static string AddSectionName {
            get {
                return ResourceManager.GetString("AddSectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Settings To Your Profile.
        /// </summary>
        internal static string AddSettingsToYourProfile {
            get {
                return ResourceManager.GetString("AddSettingsToYourProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add System Extension.
        /// </summary>
        internal static string AddSystemExtension {
            get {
                return ResourceManager.GetString("AddSystemExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add System Extension Type.
        /// </summary>
        internal static string AddSystemExtensionType {
            get {
                return ResourceManager.GetString("AddSystemExtensionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Text.
        /// </summary>
        internal static string AddText {
            get {
                return ResourceManager.GetString("AddText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add To.
        /// </summary>
        internal static string AddTo {
            get {
                return ResourceManager.GetString("AddTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator-Approved Updates.
        /// </summary>
        internal static string AdministratorApprovedUpdates {
            get {
                return ResourceManager.GetString("AdministratorApprovedUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receiver Code Requirement.
        /// </summary>
        internal static string AEReceiverCodeRequirement {
            get {
                return ResourceManager.GetString("AEReceiverCodeRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code requirement for the receiving binary..
        /// </summary>
        internal static string AEReceiverCodeRequirementPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AEReceiverCodeRequirementPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receiver Identifier.
        /// </summary>
        internal static string AEReceiverIdentifier {
            get {
                return ResourceManager.GetString("AEReceiverIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier of the process receiving an AppleEvent sent by the Identifier process..
        /// </summary>
        internal static string AEReceiverIdentifierPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AEReceiverIdentifierPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receiver Identifier Type.
        /// </summary>
        internal static string AEReceiverIdentifierType {
            get {
                return ResourceManager.GetString("AEReceiverIdentifierType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of AppleEvent Receiver Identifier value. Must be either bundle ID or path..
        /// </summary>
        internal static string AEReceiverIdentifierTypePrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AEReceiverIdentifierTypePrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To enable Enterprise Factory Reset Protection and provision devices that are factory reset using unauthenticated methods such as bootloader or fast boot, you will first need to obtain Google User IDs at {0}.
        ///
        ///Enter &quot;people/me&quot; as the Resource Name and &quot;emailAddresses&quot; as Person Fields, click Execute, copy the ID and then paste it below before proceeding..
        /// </summary>
        internal static string AFWFactoryResetProtectionPolicyDescription {
            get {
                return ResourceManager.GetString("AFWFactoryResetProtectionPolicyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select OEM.
        /// </summary>
        internal static string AfwOemSelection {
            get {
                return ResourceManager.GetString("AfwOemSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Settings.
        /// </summary>
        internal static string AfwOemSettings {
            get {
                return ResourceManager.GetString("AfwOemSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Accounts.
        /// </summary>
        internal static string AllAccounts {
            get {
                return ResourceManager.GetString("AllAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Adding New Google Accounts to the device.
        /// </summary>
        internal static string AllowAddingGoogleAccountsTooltip {
            get {
                return ResourceManager.GetString("AllowAddingGoogleAccountsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow All (Toasts, Activities, Alerts, Error Dialogs, Overlays).
        /// </summary>
        internal static string AllowAll {
            get {
                return ResourceManager.GetString("AllowAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow all cookies from all sites.
        /// </summary>
        internal static string AllowAllCookiesFromAllSites {
            get {
                return ResourceManager.GetString("AllowAllCookiesFromAllSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow All (Except Error Dialogs).
        /// </summary>
        internal static string AllowAllExceptErrorDialogs {
            get {
                return ResourceManager.GetString("AllowAllExceptErrorDialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Allow All (Except Error Dialogs)&quot; requires Android 9.0+.
        /// </summary>
        internal static string AllowAllExceptErrorDialogsTooltip {
            get {
                return ResourceManager.GetString("AllowAllExceptErrorDialogsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows all Keyguard Features on the Device.
        /// </summary>
        internal static string AllowAllKeyguardFeaturesTooltip {
            get {
                return ResourceManager.GetString("AllowAllKeyguardFeaturesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow App Clips.
        /// </summary>
        internal static string AllowAppClips {
            get {
                return ResourceManager.GetString("AllowAppClips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If unchecked, the user is prevented from adding any App Clips, and removes any existing App Clips on the device..
        /// </summary>
        internal static string AllowAppClipsToolTip {
            get {
                return ResourceManager.GetString("AllowAppClipsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow applications from.
        /// </summary>
        internal static string AllowApplicationsFrom {
            get {
                return ResourceManager.GetString("AllowApplicationsFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow App Store Auto Updates.
        /// </summary>
        internal static string AllowAppStoreAutoUpdates {
            get {
                return ResourceManager.GetString("AllowAppStoreAutoUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Auto Connect to Wi-Fi Hotspots.
        /// </summary>
        internal static string AllowAutoConnectToWifiHotspots {
            get {
                return ResourceManager.GetString("AllowAutoConnectToWifiHotspots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Automatic Login.
        /// </summary>
        internal static string AllowAutomaticLogin {
            get {
                return ResourceManager.GetString("AllowAutomaticLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Backup Service.
        /// </summary>
        internal static string AllowBackupService {
            get {
                return ResourceManager.GetString("AllowBackupService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Battery Saving Location Updates Only.
        /// </summary>
        internal static string AllowBatterySavingLocationUpdatesOnly {
            get {
                return ResourceManager.GetString("AllowBatterySavingLocationUpdatesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Biometric options.
        /// </summary>
        internal static string AllowBiometricOptions {
            get {
                return ResourceManager.GetString("AllowBiometricOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow biometric functions to be used to unlock the work profile..
        /// </summary>
        internal static string AllowBiometricOptionsToolTip {
            get {
                return ResourceManager.GetString("AllowBiometricOptionsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Bluetooth Changes.
        /// </summary>
        internal static string AllowBluetoothPairing {
            get {
                return ResourceManager.GetString("AllowBluetoothPairing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Cellular Data on Roaming.
        /// </summary>
        internal static string AllowCellularDataOnRoaming {
            get {
                return ResourceManager.GetString("AllowCellularDataOnRoaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud Protection.
        /// </summary>
        internal static string AllowCloudProtection {
            get {
                return ResourceManager.GetString("AllowCloudProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow QuickPath keyboard.
        /// </summary>
        internal static string AllowContinuousPathKeyboard {
            get {
                return ResourceManager.GetString("AllowContinuousPathKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, users cannot use the QuickPath keyboard..
        /// </summary>
        internal static string AllowContinuousPathKeyboardTooltip {
            get {
                return ResourceManager.GetString("AllowContinuousPathKeyboardTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows User Credentials To Be Changed On The Device.
        /// </summary>
        internal static string AllowCredentialsChangesTooltip {
            get {
                return ResourceManager.GetString("AllowCredentialsChangesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow deprecated TLS versions.
        /// </summary>
        internal static string AllowDeprecatedWebKitTls {
            get {
                return ResourceManager.GetString("AllowDeprecatedWebKitTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If allowed, users will not see the warning message displayed when connecting to websites using TLS v1.0-1.1 on Safari..
        /// </summary>
        internal static string AllowDeprecatedWebKitTlsTooltip {
            get {
                return ResourceManager.GetString("AllowDeprecatedWebKitTlsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Accounts In Google Play.
        /// </summary>
        internal static string AllowedAccountsInGooglePlay {
            get {
                return ResourceManager.GetString("AllowedAccountsInGooglePlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Applications.
        /// </summary>
        internal static string AllowedApplications {
            get {
                return ResourceManager.GetString("AllowedApplications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Bundle IDs.
        /// </summary>
        internal static string AllowedBundleIds {
            get {
                return ResourceManager.GetString("AllowedBundleIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of app bundle IDs allowed to access the Kerberos Ticket Granting Ticket (TGT)..
        /// </summary>
        internal static string AllowedBundleIdsDescription {
            get {
                return ResourceManager.GetString("AllowedBundleIdsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter list of package names separated by commas. Gmail and Boxer are allowed by default..
        /// </summary>
        internal static string AllowedPackageNamesToUtilizeWidgets {
            get {
                return ResourceManager.GetString("AllowedPackageNamesToUtilizeWidgets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed System Extensions.
        /// </summary>
        internal static string AllowedSystemExtensions {
            get {
                return ResourceManager.GetString("AllowedSystemExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow a specific set of extensions to always load. Either ID is optional, but both can be provided..
        /// </summary>
        internal static string AllowedSystemExtensionsDescription {
            get {
                return ResourceManager.GetString("AllowedSystemExtensionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed System Extension Types.
        /// </summary>
        internal static string AllowedSystemExtensionTypes {
            get {
                return ResourceManager.GetString("AllowedSystemExtensionTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow all or some system extension types to load. Team Identifier rule takes precedence over global settings..
        /// </summary>
        internal static string AllowedSystemExtensionTypesDescription {
            get {
                return ResourceManager.GetString("AllowedSystemExtensionTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Email Sync.
        /// </summary>
        internal static string AllowEmailSync {
            get {
                return ResourceManager.GetString("AllowEmailSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Enhanced PIN at Startup.
        /// </summary>
        internal static string AllowEnhancedPinAtStartup {
            get {
                return ResourceManager.GetString("AllowEnhancedPinAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced startup PINs permit the use of characters including uppercase and lowercase letters, symbols, numbers, and spaces. This setting is applied when you turn on BitLocker for the OS drive. Not all computers support enhanced PINs in a preboot environment..
        /// </summary>
        internal static string AllowEnhancedPinAtStartupTooltip {
            get {
                return ResourceManager.GetString("AllowEnhancedPinAtStartupTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow eSIM modification.
        /// </summary>
        internal static string AllowEsimModification {
            get {
                return ResourceManager.GetString("AllowEsimModification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, this setting prevents users from adding or removing a cellular plan on iPhone XS and iPhone XS Max..
        /// </summary>
        internal static string AllowEsimModificationTooltip {
            get {
                return ResourceManager.GetString("AllowEsimModificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Exclusion.
        /// </summary>
        internal static string AllowExclusion {
            get {
                return ResourceManager.GetString("AllowExclusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If unchecked, the private key cannot be exported from the keychain.
        /// </summary>
        internal static string AllowExportFromKeyChainTooltip {
            get {
                return ResourceManager.GetString("AllowExportFromKeyChainTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Face Scanning.
        /// </summary>
        internal static string AllowFaceScanning {
            get {
                return ResourceManager.GetString("AllowFaceScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow face scanning to be used to unlock the work profile..
        /// </summary>
        internal static string AllowFaceScanningToolTip {
            get {
                return ResourceManager.GetString("AllowFaceScanningToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow network drive access.
        /// </summary>
        internal static string AllowFilesNetworkDriveAccess {
            get {
                return ResourceManager.GetString("AllowFilesNetworkDriveAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, users cannot connect to network drives in the Files app..
        /// </summary>
        internal static string AllowFilesNetworkDriveAccessToolTip {
            get {
                return ResourceManager.GetString("AllowFilesNetworkDriveAccessToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow USB drive access.
        /// </summary>
        internal static string AllowFilesUSBDriveAccess {
            get {
                return ResourceManager.GetString("AllowFilesUSBDriveAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, users cannot access Files via the USB drive.
        /// </summary>
        internal static string AllowFilesUSBDriveAccessToolTip {
            get {
                return ResourceManager.GetString("AllowFilesUSBDriveAccessToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Find My Device.
        /// </summary>
        internal static string AllowFindMyDevice {
            get {
                return ResourceManager.GetString("AllowFindMyDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled users cannot use Find My Device in the Find My app..
        /// </summary>
        internal static string AllowFindMyDeviceTooltip {
            get {
                return ResourceManager.GetString("AllowFindMyDeviceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Find My Friends.
        /// </summary>
        internal static string AllowFindMyFriends {
            get {
                return ResourceManager.GetString("AllowFindMyFriends", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled users cannot use Find My Friends in the Find My app..
        /// </summary>
        internal static string AllowFindMyFriendsTooltip {
            get {
                return ResourceManager.GetString("AllowFindMyFriendsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Fingerprint Sensor.
        /// </summary>
        internal static string AllowFingerprintSensor {
            get {
                return ResourceManager.GetString("AllowFingerprintSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow fingerprint sensor to be used to unlock the work profile..
        /// </summary>
        internal static string AllowFingerprintSensorToolTip {
            get {
                return ResourceManager.GetString("AllowFingerprintSensorToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set GPS Location Only.
        /// </summary>
        internal static string AllowGPSLocationOnly {
            get {
                return ResourceManager.GetString("AllowGPSLocationOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Handoff.
        /// </summary>
        internal static string AllowHandoff {
            get {
                return ResourceManager.GetString("AllowHandoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If unchecked, disables activity continuation features in macOS..
        /// </summary>
        internal static string AllowHandoffTooltip {
            get {
                return ResourceManager.GetString("AllowHandoffTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set High Accuracy Location Only.
        /// </summary>
        internal static string AllowHighAccuracyLocationOnly {
            get {
                return ResourceManager.GetString("AllowHighAccuracyLocationOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Internet Sharing.
        /// </summary>
        internal static string AllowInternetSharing {
            get {
                return ResourceManager.GetString("AllowInternetSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IOAV Protection.
        /// </summary>
        internal static string AllowIOAVProtection {
            get {
                return ResourceManager.GetString("AllowIOAVProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Ipsec Network Traffic in Stealth Mode.
        /// </summary>
        internal static string AllowIpsecNetworkTrafficInStealthMode {
            get {
                return ResourceManager.GetString("AllowIpsecNetworkTrafficInStealthMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option is ignored if Disable Stealth Mode is true. Otherwise, when this option is true, the firewall&apos;s stealth mode rules MUST NOT prevent the host computer from responding to unsolicited network traffic if that traffic is secured by IPsec..
        /// </summary>
        internal static string AllowIpsecNetworkTrafficInStealthModeHelp {
            get {
                return ResourceManager.GetString("AllowIpsecNetworkTrafficInStealthModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Iris Scanning.
        /// </summary>
        internal static string AllowIrisScanning {
            get {
                return ResourceManager.GetString("AllowIrisScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow iris scanning to be used to unlock the work profile..
        /// </summary>
        internal static string AllowIrisScanningToolTip {
            get {
                return ResourceManager.GetString("AllowIrisScanningToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow activating the camera from the keyguard.
        /// </summary>
        internal static string AllowKeyguardCameraTooltip {
            get {
                return ResourceManager.GetString("AllowKeyguardCameraTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow using the fingerprint sensor from the keyguard.
        /// </summary>
        internal static string AllowKeyguardFingerprintSensorTooltip {
            get {
                return ResourceManager.GetString("AllowKeyguardFingerprintSensorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow notifications to be displayed on the keyguard.
        /// </summary>
        internal static string AllowKeyguardNotificationsTooltip {
            get {
                return ResourceManager.GetString("AllowKeyguardNotificationsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Trust Agent at the Keyguard.
        /// </summary>
        internal static string AllowKeyguardTrustAgentStateTooltip {
            get {
                return ResourceManager.GetString("AllowKeyguardTrustAgentStateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow unredacted notifications at the keyguard.
        /// </summary>
        internal static string AllowKeyguardUnRedactedNotificationsTooltip {
            get {
                return ResourceManager.GetString("AllowKeyguardUnRedactedNotificationsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Location Service Configuration (Managed devices only).
        /// </summary>
        internal static string AllowLocationAccess {
            get {
                return ResourceManager.GetString("AllowLocationAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Location Service Configuration.
        /// </summary>
        internal static string AllowLocationAccessTooltip {
            get {
                return ResourceManager.GetString("AllowLocationAccessTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Location Deletion.
        /// </summary>
        internal static string AllowLocationDeletion {
            get {
                return ResourceManager.GetString("AllowLocationDeletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Organization Group Deletion.
        /// </summary>
        internal static string AllowLocationGroupDeletion {
            get {
                return ResourceManager.GetString("AllowLocationGroupDeletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow location services.
        /// </summary>
        internal static string AllowLocationServices {
            get {
                return ResourceManager.GetString("AllowLocationServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is off, prevents managed apps from using iCloud sync..
        /// </summary>
        internal static string AllowManagedAppsCloudSyncTooltip {
            get {
                return ResourceManager.GetString("AllowManagedAppsCloudSyncTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow managed apps to write contacts to unmanaged contacts accounts.
        /// </summary>
        internal static string AllowManagedToWriteUnmanagedContacts {
            get {
                return ResourceManager.GetString("AllowManagedToWriteUnmanagedContacts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, this setting restricts managed apps from writing contacts to unmanaged contacts accounts. This has no effect if documents in managed apps and accounts are allowed to open in unmanaged apps or accounts..
        /// </summary>
        internal static string AllowManagedToWriteUnmanagedContactsTooltip {
            get {
                return ResourceManager.GetString("AllowManagedToWriteUnmanagedContactsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow adding and removing user accounts.
        /// </summary>
        internal static string AllowNonGoogleAccountsTooltip {
            get {
                return ResourceManager.GetString("AllowNonGoogleAccountsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnAccess Protection.
        /// </summary>
        internal static string AllowOnAccessProtection {
            get {
                return ResourceManager.GetString("AllowOnAccessProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow One Lock.
        /// </summary>
        internal static string AllowOneLock {
            get {
                return ResourceManager.GetString("AllowOneLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Outgoing Bluetooth Connections.
        /// </summary>
        internal static string AllowOutgoingBluetoothConnections {
            get {
                return ResourceManager.GetString("AllowOutgoingBluetoothConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows outgoing phone calls from the device.
        /// </summary>
        internal static string AllowOutgoingPhoneCallsTooltip {
            get {
                return ResourceManager.GetString("AllowOutgoingPhoneCallsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow auto filling of passwords.
        /// </summary>
        internal static string AllowPasswordAutoFill {
            get {
                return ResourceManager.GetString("AllowPasswordAutoFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows the auto filling of passwords..
        /// </summary>
        internal static string AllowPasswordAutoFillTooltip {
            get {
                return ResourceManager.GetString("AllowPasswordAutoFillTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Password Change.
        /// </summary>
        internal static string AllowPasswordChange {
            get {
                return ResourceManager.GetString("AllowPasswordChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow password proximity requests.
        /// </summary>
        internal static string AllowPasswordProximityRequests {
            get {
                return ResourceManager.GetString("AllowPasswordProximityRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disallowed, disables requesting passwords from nearby devices.
        /// </summary>
        internal static string AllowPasswordProximityRequestsTooltip {
            get {
                return ResourceManager.GetString("AllowPasswordProximityRequestsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow sharing of Wi-Fi passwords.
        /// </summary>
        internal static string AllowPasswordSharing {
            get {
                return ResourceManager.GetString("AllowPasswordSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is disabled, users are prevented from sharing passwords with the Airdrop Passwords feature..
        /// </summary>
        internal static string AllowPasswordSharingTooltip {
            get {
                return ResourceManager.GetString("AllowPasswordSharingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow personal hotspot modification.
        /// </summary>
        internal static string AllowPersonalHotspotModification {
            get {
                return ResourceManager.GetString("AllowPersonalHotspotModification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is disabled, users will not be allowed to modify the personal hotspot setting..
        /// </summary>
        internal static string AllowPersonalHotspotModificationTooltip {
            get {
                return ResourceManager.GetString("AllowPersonalHotspotModificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow personal apps to share data with work apps.
        /// </summary>
        internal static string AllowPersonalShareWithWorkApp {
            get {
                return ResourceManager.GetString("AllowPersonalShareWithWorkApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the user can share file / picture / data from the personal side into the managed profile, either by sending them from the personal side, or by picking up data within an app in the managed profile.
        /// </summary>
        internal static string AllowPersonalShareWithWorkAppTooltip {
            get {
                return ResourceManager.GetString("AllowPersonalShareWithWorkAppTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Documents.
        /// </summary>
        internal static string AllowPinnedFolderDocuments {
            get {
                return ResourceManager.GetString("AllowPinnedFolderDocuments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Documents shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderDocumentsToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderDocumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Downloads.
        /// </summary>
        internal static string AllowPinnedFolderDownloads {
            get {
                return ResourceManager.GetString("AllowPinnedFolderDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Downloads shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderDownloadsToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderDownloadsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow File Explorer.
        /// </summary>
        internal static string AllowPinnedFolderFileExplorer {
            get {
                return ResourceManager.GetString("AllowPinnedFolderFileExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the File Explorer shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderFileExplorerToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderFileExplorerToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Home Group.
        /// </summary>
        internal static string AllowPinnedFolderHomeGroup {
            get {
                return ResourceManager.GetString("AllowPinnedFolderHomeGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Home Group shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderHomeGroupToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderHomeGroupToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Music.
        /// </summary>
        internal static string AllowPinnedFolderMusic {
            get {
                return ResourceManager.GetString("AllowPinnedFolderMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Music shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderMusicToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderMusicToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Network.
        /// </summary>
        internal static string AllowPinnedFolderNetwork {
            get {
                return ResourceManager.GetString("AllowPinnedFolderNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Network shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderNetworkToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderNetworkToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Personal Folder.
        /// </summary>
        internal static string AllowPinnedFolderPersonalFolder {
            get {
                return ResourceManager.GetString("AllowPinnedFolderPersonalFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Personal Folder shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderPersonalFolderToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderPersonalFolderToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Pictures.
        /// </summary>
        internal static string AllowPinnedFolderPictures {
            get {
                return ResourceManager.GetString("AllowPinnedFolderPictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Pictures shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderPicturesToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderPicturesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Settings.
        /// </summary>
        internal static string AllowPinnedFolderSettings {
            get {
                return ResourceManager.GetString("AllowPinnedFolderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Settings shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderSettingsToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderSettingsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Videos.
        /// </summary>
        internal static string AllowPinnedFolderVideos {
            get {
                return ResourceManager.GetString("AllowPinnedFolderVideos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the Videos shortcut on the Start menu..
        /// </summary>
        internal static string AllowPinnedFolderVideosToolTip {
            get {
                return ResourceManager.GetString("AllowPinnedFolderVideosToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow new device proximity setup.
        /// </summary>
        internal static string AllowProximitySetupToNewDevice {
            get {
                return ResourceManager.GetString("AllowProximitySetupToNewDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disallowed, users will not see the prompt to set up new devices that are nearby..
        /// </summary>
        internal static string AllowProximitySetupToNewDeviceTooltip {
            get {
                return ResourceManager.GetString("AllowProximitySetupToNewDeviceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows removing the Android Work account from the device.
        /// </summary>
        internal static string AllowRemovingAndroidWorkAccountTooltip {
            get {
                return ResourceManager.GetString("AllowRemovingAndroidWorkAccountTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Network Files.
        /// </summary>
        internal static string AllowScanningNetworkFiles {
            get {
                return ResourceManager.GetString("AllowScanningNetworkFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this feature is not selected, users will not be able to save screenshots of the display and will not be able to capture screen recordings. This will also prevent the Classroom app from observing remote screens..
        /// </summary>
        internal static string AllowScreenShotHelp {
            get {
                return ResourceManager.GetString("AllowScreenShotHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Scripts.
        /// </summary>
        internal static string AllowScriptScanning {
            get {
                return ResourceManager.GetString("AllowScriptScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows sending and recieving SMS messages.
        /// </summary>
        internal static string AllowSendReceiveSmsTooltip {
            get {
                return ResourceManager.GetString("AllowSendReceiveSmsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Shared device temporary session.
        /// </summary>
        internal static string AllowSharedDeviceTemporarySession {
            get {
                return ResourceManager.GetString("AllowSharedDeviceTemporarySession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disallowed, users of Shared iPads will not be allowed to start a temporary session. A temporary session allows a user to leverage a Shared iPad with no user data saved or synced to iCloud when they log out..
        /// </summary>
        internal static string AllowSharedDeviceTemporarySessionTooltip {
            get {
                return ResourceManager.GetString("AllowSharedDeviceTemporarySessionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee will be allowed to set a simple passcode which may contain repeated characters, or increasing or decreasing characters (such as 123 or CBA) when enabled..
        /// </summary>
        internal static string AllowSimpleToolTip {
            get {
                return ResourceManager.GetString("AllowSimpleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Siri server logging.
        /// </summary>
        internal static string AllowSiriServerLogging {
            get {
                return ResourceManager.GetString("AllowSiriServerLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is disabled, Siri will not log data to the server..
        /// </summary>
        internal static string AllowSiriServerLoggingTooltip {
            get {
                return ResourceManager.GetString("AllowSiriServerLoggingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Smart Card authentication.
        /// </summary>
        internal static string AllowSmartCard {
            get {
                return ResourceManager.GetString("AllowSmartCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow System UI.
        /// </summary>
        internal static string AllowSystemErrorDialogs {
            get {
                return ResourceManager.GetString("AllowSystemErrorDialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow System UI (Toasts, Activities, Alerts, Errors, Overlays).
        /// </summary>
        internal static string AllowSystemWindows {
            get {
                return ResourceManager.GetString("AllowSystemWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow unmanaged apps to read contacts from managed contacts accounts.
        /// </summary>
        internal static string AllowUnmanagedToReadManagedContacts {
            get {
                return ResourceManager.GetString("AllowUnmanagedToReadManagedContacts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, this setting restricts unmanaged apps from reading contacts in managed contacts accounts. This has no effect if documents in managed apps and accounts are allowed to open in unmanaged apps or accounts..
        /// </summary>
        internal static string AllowUnmanagedToReadManagedContactsTooltip {
            get {
                return ResourceManager.GetString("AllowUnmanagedToReadManagedContactsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Unsecure VPN Connection.
        /// </summary>
        internal static string AllowUnsecureVPNConnection {
            get {
                return ResourceManager.GetString("AllowUnsecureVPNConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the device can leverage Microsoft Update, WSUS or Windows Store. If Windows Update is configured to receive updates from an intranet source, this policy will still continue to periodically obtain information from the public Windows Update service. Allowing this policy disables the connection to public update services including the Windows Store..
        /// </summary>
        internal static string AllowUpdateServiceToolTip {
            get {
                return ResourceManager.GetString("AllowUpdateServiceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow USB Restricted Mode.
        /// </summary>
        internal static string AllowUsbRestrictedMode {
            get {
                return ResourceManager.GetString("AllowUsbRestrictedMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is disabled, devices will never need to enter a passcode to initially connect or remain connected to a USB accessory..
        /// </summary>
        internal static string AllowUsbRestrictedModeTooltip {
            get {
                return ResourceManager.GetString("AllowUsbRestrictedModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Changes to the User Icon.
        /// </summary>
        internal static string AllowUserIconChangeTooltip {
            get {
                return ResourceManager.GetString("AllowUserIconChangeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow User to Adjust Voice Control.
        /// </summary>
        internal static string AllowUserToAdjustVoiceControl {
            get {
                return ResourceManager.GetString("AllowUserToAdjustVoiceControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to change date/time.
        /// </summary>
        internal static string AllowUserToChangeDateTime {
            get {
                return ResourceManager.GetString("AllowUserToChangeDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to configure.
        /// </summary>
        internal static string AllowUserToConfigure {
            get {
                return ResourceManager.GetString("AllowUserToConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI Lockdown.
        /// </summary>
        internal static string AllowUserUIAccess {
            get {
                return ResourceManager.GetString("AllowUserUIAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep Wi-Fi on During Sleep.
        /// </summary>
        internal static string AllowWifiDisconnectDuringSleep {
            get {
                return ResourceManager.GetString("AllowWifiDisconnectDuringSleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether to keep Wi-Fi on during sleep.
        /// </summary>
        internal static string AllowWifiDisconnectDuringSleepTooltip {
            get {
                return ResourceManager.GetString("AllowWifiDisconnectDuringSleepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow toggling Wi-Fi on/off.
        /// </summary>
        internal static string AllowWiFiPowerModification {
            get {
                return ResourceManager.GetString("AllowWiFiPowerModification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled users cannot toggle Wi-Fi on or off. This restriction does not prevent selecting which Wi-Fi network to use if Wi-Fi is on..
        /// </summary>
        internal static string AllowWiFiPowerModificationTooltip {
            get {
                return ResourceManager.GetString("AllowWiFiPowerModificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Non-Windows Store Applications.
        /// </summary>
        internal static string AllTrustedApps {
            get {
                return ResourceManager.GetString("AllTrustedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always auto update.
        /// </summary>
        internal static string AlwaysAutoUpdate {
            get {
                return ResourceManager.GetString("AlwaysAutoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always prompt.
        /// </summary>
        internal static string AlwaysPrompt {
            get {
                return ResourceManager.GetString("AlwaysPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always user selected across device.
        /// </summary>
        internal static string AlwaysUserSelectedAcrossDevice {
            get {
                return ResourceManager.GetString("AlwaysUserSelectedAcrossDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AutoUpdate payload must be the only payload in the profile..
        /// </summary>
        internal static string AndroidEnterpriseAutoUpdateMustBeOnlyPayload {
            get {
                return ResourceManager.GetString("AndroidEnterpriseAutoUpdateMustBeOnlyPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android 9.0+ Fully managed.
        /// </summary>
        internal static string AndroidNinePlusFullyManaged {
            get {
                return ResourceManager.GetString("AndroidNinePlusFullyManaged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annual System Update Freeze Periods.
        /// </summary>
        internal static string AnnualSystemUpdateFreezePeriods {
            get {
                return ResourceManager.GetString("AnnualSystemUpdateFreezePeriods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any Ethernet.
        /// </summary>
        internal static string AnyEthernet {
            get {
                return ResourceManager.GetString("AnyEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APN.
        /// </summary>
        internal static string APNAdvanced {
            get {
                return ResourceManager.GetString("APNAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select at least Managed Device or Work Profile Setting to configure..
        /// </summary>
        internal static string AppControlAtleastOneSideSettingRequiredError {
            get {
                return ResourceManager.GetString("AppControlAtleastOneSideSettingRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rules that control connections for an app, program, or service..
        /// </summary>
        internal static string AppHelp {
            get {
                return ResourceManager.GetString("AppHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Icon.
        /// </summary>
        internal static string AppIcon {
            get {
                return ResourceManager.GetString("AppIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Icon Size.
        /// </summary>
        internal static string AppIconSize {
            get {
                return ResourceManager.GetString("AppIconSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Identifier.
        /// </summary>
        internal static string AppIdentifier {
            get {
                return ResourceManager.GetString("AppIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Identifier required..
        /// </summary>
        internal static string AppIdentifierRequired {
            get {
                return ResourceManager.GetString("AppIdentifierRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Identifier Type.
        /// </summary>
        internal static string AppIdentifierType {
            get {
                return ResourceManager.GetString("AppIdentifierType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow CarPlay.
        /// </summary>
        internal static string AppleAllowCarPlay {
            get {
                return ResourceManager.GetString("AppleAllowCarPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows an app&apos;s notifications to be shown in Apple CarPlay..
        /// </summary>
        internal static string AppleAllowCarPlayTooltip {
            get {
                return ResourceManager.GetString("AppleAllowCarPlayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow critical alert notifications.
        /// </summary>
        internal static string AppleBypassDoNotDisturb {
            get {
                return ResourceManager.GetString("AppleBypassDoNotDisturb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting alllows an app to mark a notification as critical and bypass &quot;Do Not Disturb&quot; and ringer settings..
        /// </summary>
        internal static string AppleBypassDoNotDisturbTooltip {
            get {
                return ResourceManager.GetString("AppleBypassDoNotDisturbTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS devices can be staged automatically by installing a pre-configured MDM profile directly on to your devices. You must first export a profile for this Organization Group and then install it on devices using Apple Configurator or manually, using another method.
        ///
        ///Perform the following actions to create a profile:
        ///1. Enable Automated Enrollment.
        ///2. Select the Staging Mode.
        ///3. Select a Default Enrollment User to be assigned as the initial user for each device. (If one does not exist, click Add User).
        ///4. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AppleConfiguratorInformationa {
            get {
                return ResourceManager.GetString("AppleConfiguratorInformationa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end user for each device can be pre-assigned by registering devices using Serial #, IMEI, or UDID.
        ///
        ///For non-registered devices, the enrollment user depends on the Staging Mode you selected:
        ///1. If Staging Mode is None, then all non-registered devices are enrolled under the Default Enrollment User you have selected.
        ///2. If Staging Mode is Single User, then your end users are prompted for their credentials when they open the Intelligent Hub app.
        ///
        ///You cannot pre-register Multi User devices.
        ///If Staging [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AppleConfiguratorInformationb {
            get {
                return ResourceManager.GetString("AppleConfiguratorInformationb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not group.
        /// </summary>
        internal static string AppleDoNotGroup {
            get {
                return ResourceManager.GetString("AppleDoNotGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Events.
        /// </summary>
        internal static string AppleEvents {
            get {
                return ResourceManager.GetString("AppleEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to send a restricted AppleEvent to another process..
        /// </summary>
        internal static string AppleEventsPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("AppleEventsPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group into app specified groups.
        /// </summary>
        internal static string AppleGroupIntoAppSpecifiedGroups {
            get {
                return ResourceManager.GetString("AppleGroupIntoAppSpecifiedGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group into one group.
        /// </summary>
        internal static string AppleGroupIntoOneGroup {
            get {
                return ResourceManager.GetString("AppleGroupIntoOneGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select group notification type.
        /// </summary>
        internal static string AppleGroupNotificationType {
            get {
                return ResourceManager.GetString("AppleGroupNotificationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines how an app&apos;s notifications will be grouped on devices..
        /// </summary>
        internal static string AppleGroupNotificationTypeTooltip {
            get {
                return ResourceManager.GetString("AppleGroupNotificationTypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Profile Installation Batch Size.
        /// </summary>
        internal static string AppleProfileInstallationBatchSize {
            get {
                return ResourceManager.GetString("AppleProfileInstallationBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of profile commands added to command queue per batch.
        /// </summary>
        internal static string AppleProfileInstallationBatchSizeTooltip {
            get {
                return ResourceManager.GetString("AppleProfileInstallationBatchSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Profile Release Batch Size.
        /// </summary>
        internal static string AppleProfileReleaseBatchSize {
            get {
                return ResourceManager.GetString("AppleProfileReleaseBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of profile commands released every 2 minutes for Apple devices..
        /// </summary>
        internal static string AppleProfileReleaseBatchSizeTooltip {
            get {
                return ResourceManager.GetString("AppleProfileReleaseBatchSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple Profile Release Job.
        /// </summary>
        internal static string AppleProfileReleaseJob {
            get {
                return ResourceManager.GetString("AppleProfileReleaseJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Preview.
        /// </summary>
        internal static string AppleShowPreviewNotificationType {
            get {
                return ResourceManager.GetString("AppleShowPreviewNotificationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always - Previews will be shown when the device is locked and unlocked
        ///Only when unlocked - Previews will only be shown when the device is unlocked
        ///Never - Previews will never be shown.
        /// </summary>
        internal static string AppleShowPreviewNotificationTypeTooltip {
            get {
                return ResourceManager.GetString("AppleShowPreviewNotificationTypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Control on COPE.
        /// </summary>
        internal static string ApplicationControlCope {
            get {
                return ResourceManager.GetString("ApplicationControlCope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bundle identifier of the app extension that performs single sign on (SSO) for the specified URLs..
        /// </summary>
        internal static string ApplicationExtensionInfo {
            get {
                return ResourceManager.GetString("ApplicationExtensionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string AppListDefault {
            get {
                return ResourceManager.GetString("AppListDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Mapping from DTR.
        /// </summary>
        internal static string AppMappingFromDTR {
            get {
                return ResourceManager.GetString("AppMappingFromDTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Safari domains and apps using Device Traffic Rules in the Tunnel Configuration. Defined app policies will automatically apply to this profile..
        /// </summary>
        internal static string AppMappingOptionRemoved {
            get {
                return ResourceManager.GetString("AppMappingOptionRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Mode.
        /// </summary>
        internal static string AppMode {
            get {
                return ResourceManager.GetString("AppMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Notifications.
        /// </summary>
        internal static string AppNotifications {
            get {
                return ResourceManager.GetString("AppNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App or Service.
        /// </summary>
        internal static string AppOrService {
            get {
                return ResourceManager.GetString("AppOrService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic updates through the App Store.
        /// </summary>
        internal static string AppStoreAutoUpdates {
            get {
                return ResourceManager.GetString("AppStoreAutoUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rules that control connections for an app, program, or service..
        /// </summary>
        internal static string AppTypeHelp {
            get {
                return ResourceManager.GetString("AppTypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Usage Rules.
        /// </summary>
        internal static string AppUsageRules {
            get {
                return ResourceManager.GetString("AppUsageRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Archives.
        /// </summary>
        internal static string ArchiveScanning {
            get {
                return ResourceManager.GetString("ArchiveScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} added is not a valid https URL.
        /// </summary>
        internal static string ArgNotValidHttpsUrl {
            get {
                return ResourceManager.GetString("ArgNotValidHttpsUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aspect Ratio.
        /// </summary>
        internal static string AspectRatio {
            get {
                return ResourceManager.GetString("AspectRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusions.
        /// </summary>
        internal static string ASRExclusions {
            get {
                return ResourceManager.GetString("ASRExclusions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASR Rule.
        /// </summary>
        internal static string ASRRule {
            get {
                return ResourceManager.GetString("ASRRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save failed due to conflicting ASR rules. Please select each ASR rule only once..
        /// </summary>
        internal static string ASRRuleSelectedMultipleTimes {
            get {
                return ResourceManager.GetString("ASRRuleSelectedMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assigned Access Configuration Xml.
        /// </summary>
        internal static string AssignedAccessConfigurationXmlFileId {
            get {
                return ResourceManager.GetString("AssignedAccessConfigurationXmlFileId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload your Assigned Access Configuration XML or paste the XML directly into the text box..
        /// </summary>
        internal static string AssignedAccessConfigurationXmlFileIdHelp {
            get {
                return ResourceManager.GetString("AssignedAccessConfigurationXmlFileIdHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated Domain required..
        /// </summary>
        internal static string AssociatedDomainRequired {
            get {
                return ResourceManager.GetString("AssociatedDomainRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated Domains.
        /// </summary>
        internal static string AssociatedDomains {
            get {
                return ResourceManager.GetString("AssociatedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated Domains.
        /// </summary>
        internal static string AssociatedDomainsSettings {
            get {
                return ResourceManager.GetString("AssociatedDomainsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one app identifier and associated domain required..
        /// </summary>
        internal static string AtleastOneAppIdentifierAndAssociatedDomainRequired {
            get {
                return ResourceManager.GetString("AtleastOneAppIdentifierAndAssociatedDomainRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one application should be added for privacy preferences..
        /// </summary>
        internal static string AtLeastOneAppPrivacyPolicyShouldBeAdded {
            get {
                return ResourceManager.GetString("AtLeastOneAppPrivacyPolicyShouldBeAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applications have been added. Please add at least one application to the Notifications payload and try again..
        /// </summary>
        internal static string AtleastOneAppShouldBeAddedInNotification {
            get {
                return ResourceManager.GetString("AtleastOneAppShouldBeAddedInNotification", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to At least one area is required..
        /// </summary>
        internal static string AtleastOneAreaIsRequired
        {
            get
            {
                return ResourceManager.GetString("AtleastOneAreaIsRequired", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to At least one host name or domain name is required..
        /// </summary>
        internal static string AtleastOneHostIsRequired {
            get {
                return ResourceManager.GetString("AtleastOneHostIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one message should be added in custom messages profile.
        /// </summary>
        internal static string AtleastOneMessageShouldBeAddedInCustomMessagesProfile {
            get {
                return ResourceManager.GetString("AtleastOneMessageShouldBeAddedInCustomMessagesProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define at least one service to Allow or Disallow..
        /// </summary>
        internal static string AtLeastOneServiceForPrivacyPreference {
            get {
                return ResourceManager.GetString("AtLeastOneServiceForPrivacyPreference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one SSO extension application should be added..
        /// </summary>
        internal static string AtLeastOneSsoExtensionApplicationShouldBeAdded {
            get {
                return ResourceManager.GetString("AtLeastOneSsoExtensionApplicationShouldBeAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one URL prefix is required..
        /// </summary>
        internal static string AtleastOneUrlIsRequired {
            get {
                return ResourceManager.GetString("AtleastOneUrlIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack Surface Reduction.
        /// </summary>
        internal static string AttackSurfaceReduction {
            get {
                return ResourceManager.GetString("AttackSurfaceReduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack Surface Reduction Rule.
        /// </summary>
        internal static string AttackSurfaceReductionRule {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This policy can be used to Enable (block/audit) or Disable Attack Surface Reduction rules. This feature will prevent actions that malware can take to infect machines..
        /// </summary>
        internal static string AttackSurfaceReductionRulesOptionsToolTip {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionRulesOptionsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block executable content from email client and webmail.
        /// </summary>
        internal static string AttackSurfaceReductionsRule1 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block credential stealing from the Windows local security authority subsystem (lsass.exe).
        /// </summary>
        internal static string AttackSurfaceReductionsRule10 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block process creations originating from PSExec and WMI commands.
        /// </summary>
        internal static string AttackSurfaceReductionsRule11 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block untrusted and unsigned processes that run from USB.
        /// </summary>
        internal static string AttackSurfaceReductionsRule12 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block only Office communication applications from creating child processes.
        /// </summary>
        internal static string AttackSurfaceReductionsRule13 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Adobe Reader from creating child processes.
        /// </summary>
        internal static string AttackSurfaceReductionsRule14 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block all Office applications from creating child processes.
        /// </summary>
        internal static string AttackSurfaceReductionsRule2 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Office applications from creating executable content.
        /// </summary>
        internal static string AttackSurfaceReductionsRule3 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Office applications from injecting code into other processes.
        /// </summary>
        internal static string AttackSurfaceReductionsRule4 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block JavaScript or VBScript from launching downloaded executable content.
        /// </summary>
        internal static string AttackSurfaceReductionsRule5 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block execution of potentially obfuscated scripts.
        /// </summary>
        internal static string AttackSurfaceReductionsRule6 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Win32 API calls from Office macro.
        /// </summary>
        internal static string AttackSurfaceReductionsRule7 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block executable files from running unless they meet a prevalence, age, or trusted list criteria.
        /// </summary>
        internal static string AttackSurfaceReductionsRule8 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use advanced protection against ransomware.
        /// </summary>
        internal static string AttackSurfaceReductionsRule9 {
            get {
                return ResourceManager.GetString("AttackSurfaceReductionsRule9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to attempt(s).
        /// </summary>
        internal static string attempts {
            get {
                return ResourceManager.GetString("attempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audit mode.
        /// </summary>
        internal static string AuditMode {
            get {
                return ResourceManager.GetString("AuditMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AUMID (Application User Model ID).
        /// </summary>
        internal static string AUMID {
            get {
                return ResourceManager.GetString("AUMID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication is required when Custom Enrollment is on..
        /// </summary>
        internal static string AuthenticationEnabledWithCustomEnrollment {
            get {
                return ResourceManager.GetString("AuthenticationEnabledWithCustomEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorized Application Rules.
        /// </summary>
        internal static string AuthorizedApplicationRules {
            get {
                return ResourceManager.GetString("AuthorizedApplicationRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this value is false, authorized application firewall rules in the local store are ignored and not enforced.
        /// </summary>
        internal static string AuthorizedApplicationRulesHelp {
            get {
                return ResourceManager.GetString("AuthorizedApplicationRulesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorized Local Users.
        /// </summary>
        internal static string AuthorizedLocalUsers {
            get {
                return ResourceManager.GetString("AuthorizedLocalUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the list of authorized local users for this rule.
        /// </summary>
        internal static string AuthorizedLocalUsersHelp {
            get {
                return ResourceManager.GetString("AuthorizedLocalUsersHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drivers.
        /// </summary>
        internal static string AutoApproveDrivers {
            get {
                return ResourceManager.GetString("AutoApproveDrivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Updates.
        /// </summary>
        internal static string AutoApproveFeatureUpdates {
            get {
                return ResourceManager.GetString("AutoApproveFeatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this setting to automatically detect a proxy on the network..
        /// </summary>
        internal static string AutoDetectSettingsHelp {
            get {
                return ResourceManager.GetString("AutoDetectSettingsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Autofill.
        /// </summary>
        internal static string Autofill {
            get {
                return ResourceManager.GetString("Autofill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically Detect Settings.
        /// </summary>
        internal static string AutomaticallyDetectSettings {
            get {
                return ResourceManager.GetString("AutomaticallyDetectSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow User to Change AutoPlay Settings.
        /// </summary>
        internal static string AutoPlay {
            get {
                return ResourceManager.GetString("AutoPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This policy defines the deadline in days after which a reboot for updates will become mandatory for feature updates..
        /// </summary>
        internal static string AutoRestartDeadlinePeriodForFeatureToolTip {
            get {
                return ResourceManager.GetString("AutoRestartDeadlinePeriodForFeatureToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality Updates Auto Restart Deadline (Days).
        /// </summary>
        internal static string AutoRestartDeadlinePeriodInDays {
            get {
                return ResourceManager.GetString("AutoRestartDeadlinePeriodInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Updates Auto Restart Deadline (Days).
        /// </summary>
        internal static string AutoRestartDeadlinePeriodInDaysForFeatureUpdates {
            get {
                return ResourceManager.GetString("AutoRestartDeadlinePeriodInDaysForFeatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This policy defines the deadline in days after which a reboot for updates will become mandatory..
        /// </summary>
        internal static string AutoRestartDeadlinePeriodToolTip {
            get {
                return ResourceManager.GetString("AutoRestartDeadlinePeriodToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-Restart Notification (Minutes).
        /// </summary>
        internal static string AutoRestartNotificationScheduleInMinutes {
            get {
                return ResourceManager.GetString("AutoRestartNotificationScheduleInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1703. Specifies the schedule for Auto Restart reminder notifications.
        /// </summary>
        internal static string AutoRestartNotificationScheduleToolTip {
            get {
                return ResourceManager.GetString("AutoRestartNotificationScheduleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1703. Specifies how Auto Restart Required notifications are dismissed.
        /// </summary>
        internal static string AutoRestartRequiredNotificationDismissalToolTip {
            get {
                return ResourceManager.GetString("AutoRestartRequiredNotificationDismissalToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Time.
        /// </summary>
        internal static string AutoUpdateEnd {
            get {
                return ResourceManager.GetString("AutoUpdateEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end time must be at least 30 minutes after the start time..
        /// </summary>
        internal static string AutoUpdateEndTimeAtLeastThirtyMinutes {
            get {
                return ResourceManager.GetString("AutoUpdateEndTimeAtLeastThirtyMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Apps Auto Update Policy.
        /// </summary>
        internal static string AutoUpdatePublicAppUpdatePolicy {
            get {
                return ResourceManager.GetString("AutoUpdatePublicAppUpdatePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Time.
        /// </summary>
        internal static string AutoUpdateStart {
            get {
                return ResourceManager.GetString("AutoUpdateStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stateful FTP.
        /// </summary>
        internal static string AWDisableStatefulFtp {
            get {
                return ResourceManager.GetString("AWDisableStatefulFtp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opportunity Match Auth Set Per KM.
        /// </summary>
        internal static string AwOpportunityMatchAuthSetPerKM {
            get {
                return ResourceManager.GetString("AwOpportunityMatchAuthSetPerKM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay Size (MB).
        /// </summary>
        internal static string AwOverlaySize {
            get {
                return ResourceManager.GetString("AwOverlaySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RAM.
        /// </summary>
        internal static string AwRam {
            get {
                return ResourceManager.GetString("AwRam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Association Idle Time.
        /// </summary>
        internal static string AwSecurityAssociationIdleTime {
            get {
                return ResourceManager.GetString("AwSecurityAssociationIdleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Filter Type.
        /// </summary>
        internal static string AwWriteFilterType {
            get {
                return ResourceManager.GetString("AwWriteFilterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the type of overlay for the next session..
        /// </summary>
        internal static string AwWriteFilterTypeHelp {
            get {
                return ResourceManager.GetString("AwWriteFilterTypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back to Profile.
        /// </summary>
        internal static string BackToProfile {
            get {
                return ResourceManager.GetString("BackToProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Apple and Android platforms are supported. Enterprise template type and &quot;Set As Active Network&quot; flag are not supported for Android platform. Certificate upload is not supported - certificate can be referenced by mentioning the names of Certificate Authority and Certificate Template present in the AirWatch system. Only &quot;WPA/WPA2Enterprise&quot; security type of enterprise template type for Android is supported..
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationEight {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationEight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new profile will be created if the given profile name doesn&apos;t exist in the system.
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationFive {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationFive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit an existing profile with given Wi-Fi settings. In this case a new Wi-Fi configuration will be created.
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationFour {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationFour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Batch Import Feature can be used to load Wi-Fi Profiles into the system in bulk. This feature is available ONLY for iOS and Android platforms. .
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationOne {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group IDs should be used for columns Organization Group/Assigned OGs..
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationSeven {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationSeven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A template for this import is linked below for reference. The required fields are marked with &apos;*&apos;.
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationSix {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationSix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Model and/or Assigned OGs fields for an existing profile.
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationThree {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using this feature, you will be able to make the following changes to Wi-Fi profiles:.
        /// </summary>
        internal static string BatchImportWifiProfilesExplanationTwo {
            get {
                return ResourceManager.GetString("BatchImportWifiProfilesExplanationTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Behavior Monitoring.
        /// </summary>
        internal static string BehaviorMonitoring {
            get {
                return ResourceManager.GetString("BehaviorMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BIOS Password Setting.
        /// </summary>
        internal static string BIOSPasswordSetting {
            get {
                return ResourceManager.GetString("BIOSPasswordSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Managed to have Workspace ONE generate a strong, unique BIOS password for devices assigned to this profile. Select Manual to manually enter a BIOS password for devices assigned to this profile..
        /// </summary>
        internal static string BiosPasswordSettingHelpTooltip {
            get {
                return ResourceManager.GetString("BiosPasswordSettingHelpTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Freestyle Orchestrator workflow to assign the payload and Dell Command Monitor app in a single workflow..
        /// </summary>
        internal static string BiosProfileWorkflowInfoMessage {
            get {
                return ResourceManager.GetString("BiosProfileWorkflowInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Encryption.
        /// </summary>
        internal static string BitLockerRealTimeEnforcement {
            get {
                return ResourceManager.GetString("BitLockerRealTimeEnforcement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this setting will force encryption on the device and immediately re-encrypt the device if BitLocker is manually turned off..
        /// </summary>
        internal static string BitLockerRealTimeEnforcementInfo {
            get {
                return ResourceManager.GetString("BitLockerRealTimeEnforcementInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static Recovery Key.
        /// </summary>
        internal static string BitlockerRecoveryKeyText {
            get {
                return ResourceManager.GetString("BitlockerRecoveryKeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block all cookies from all sites.
        /// </summary>
        internal static string BlockAllCookiesFromAllSites {
            get {
                return ResourceManager.GetString("BlockAllCookiesFromAllSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block mode.
        /// </summary>
        internal static string BlockMode {
            get {
                return ResourceManager.GetString("BlockMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block cookies only from third party websites.
        /// </summary>
        internal static string BlockOnlyCookiesFromThirdPartyWebsites {
            get {
                return ResourceManager.GetString("BlockOnlyCookiesFromThirdPartyWebsites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Login and Logout.
        /// </summary>
        internal static string BothLoginAndLogout {
            get {
                return ResourceManager.GetString("BothLoginAndLogout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Built-in.
        /// </summary>
        internal static string BuiltIn {
            get {
                return ResourceManager.GetString("BuiltIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bypass Proxy for Local.
        /// </summary>
        internal static string BypassProxyForLocal {
            get {
                return ResourceManager.GetString("BypassProxyForLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Host.
        /// </summary>
        internal static string CacheHost {
            get {
                return ResourceManager.GetString("CacheHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Host Source.
        /// </summary>
        internal static string CacheHostSource {
            get {
                return ResourceManager.GetString("CacheHostSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to to configure one or more Delivery Optimization in Network Cache servers through a custom DHCP Option..
        /// </summary>
        internal static string CacheHostSourceToolTip {
            get {
                return ResourceManager.GetString("CacheHostSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to configure one or more Microsoft Connected Cache servers to be used by Delivery Optimization..
        /// </summary>
        internal static string CacheHostToolTip {
            get {
                return ResourceManager.GetString("CacheHostToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar Domains.
        /// </summary>
        internal static string CalendarDomains {
            get {
                return ResourceManager.GetString("CalendarDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar information managed by Calendar.app..
        /// </summary>
        internal static string CalendarPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("CalendarPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system camera. Access to the camera cannot be given in a profile; it can only be denied..
        /// </summary>
        internal static string CameraPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("CameraPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This profile payload cannot be configured alongside other profile payloads..
        /// </summary>
        internal static string CannotBeConfiguredWithOtherPayloads {
            get {
                return ResourceManager.GetString("CannotBeConfiguredWithOtherPayloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The payload cannot be deleted as it is associated with one or more applications for &apos;app tunnel&apos; policy. Remove the association with applications in order to delete this payload..
        /// </summary>
        internal static string CantDeletePerAppVpnPayload {
            get {
                return ResourceManager.GetString("CantDeletePerAppVpnPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;Connection Type&apos; of this profile cannot be edited because it is associated with one or more applications for &apos;app tunnel&apos; policy. Remove the association with applications in order to edit this parameter..
        /// </summary>
        internal static string CantEditPerAppVpnDetails {
            get {
                return ResourceManager.GetString("CantEditPerAppVpnDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page of the canvas does not have a free location for this application..
        /// </summary>
        internal static string CanvasDoesnotHaveSpaceError {
            get {
                return ResourceManager.GetString("CanvasDoesnotHaveSpaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catchup Full Scan.
        /// </summary>
        internal static string CatchupFullScan {
            get {
                return ResourceManager.GetString("CatchupFullScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catchup Quick Scan.
        /// </summary>
        internal static string CatchupQuickScan {
            get {
                return ResourceManager.GetString("CatchupQuickScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credentials - Certificate is not uploaded and is a required field.
        /// </summary>
        internal static string CertificateIsNotUploaded {
            get {
                return ResourceManager.GetString("CertificateIsNotUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Preference.
        /// </summary>
        internal static string CertificatePreference {
            get {
                return ResourceManager.GetString("CertificatePreference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Preference Names.
        /// </summary>
        internal static string CertificatePreferenceNames {
            get {
                return ResourceManager.GetString("CertificatePreferenceNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 15 services are permitted..
        /// </summary>
        internal static string CertificatePreferenceServiceNamesLimitExceeded {
            get {
                return ResourceManager.GetString("CertificatePreferenceServiceNamesLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Source.
        /// </summary>
        internal static string CertificateSource {
            get {
                return ResourceManager.GetString("CertificateSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Certificate Template.
        /// </summary>
        internal static string CertificateTemplateSelect {
            get {
                return ResourceManager.GetString("CertificateTemplateSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ex: C:\MyApp.exe.
        /// </summary>
        internal static string CFAAllowedApplication {
            get {
                return ResourceManager.GetString("CFAAllowedApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controlled folder access will permit allowed applications to access and modify protected folders. Most known and trusted applications will be allowed access. This policy can be used to allow internally developed or unknown apps to access protected folders as well.
        /// </summary>
        internal static string CFAAllowedApplicationsToolTip {
            get {
                return ResourceManager.GetString("CFAAllowedApplicationsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ex: C:\MyDocuments.
        /// </summary>
        internal static string CFAFolder {
            get {
                return ResourceManager.GetString("CFAFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Public/Documents.
        /// </summary>
        internal static string CfaProtectedFoldersFolder1 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Desktop.
        /// </summary>
        internal static string CfaProtectedFoldersFolder10 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Favorites.
        /// </summary>
        internal static string CfaProtectedFoldersFolder11 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Public/Pictures.
        /// </summary>
        internal static string CfaProtectedFoldersFolder2 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Public/Videos.
        /// </summary>
        internal static string CfaProtectedFoldersFolder3 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Public/Music.
        /// </summary>
        internal static string CfaProtectedFoldersFolder4 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Public/Desktop.
        /// </summary>
        internal static string CfaProtectedFoldersFolder5 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Documents.
        /// </summary>
        internal static string CfaProtectedFoldersFolder6 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Pictures.
        /// </summary>
        internal static string CfaProtectedFoldersFolder7 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Videos.
        /// </summary>
        internal static string CfaProtectedFoldersFolder8 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C:/Users/Username/Music.
        /// </summary>
        internal static string CfaProtectedFoldersFolder9 {
            get {
                return ResourceManager.GetString("CfaProtectedFoldersFolder9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change primary interaction point message.
        /// </summary>
        internal static string ChangePrimaryInteractionPointMsg {
            get {
                return ResourceManager.GetString("ChangePrimaryInteractionPointMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate trust check validation.
        /// </summary>
        internal static string CheckCertificateTrust {
            get {
                return ResourceManager.GetString("CheckCertificateTrust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, a standard certificate trust validity check is performed without any additional revocation checks..
        /// </summary>
        internal static string CheckCertificateTrustInfo {
            get {
                return ResourceManager.GetString("CheckCertificateTrustInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Signature Before Running Scan.
        /// </summary>
        internal static string CheckForSignaturesBeforeRunningScan {
            get {
                return ResourceManager.GetString("CheckForSignaturesBeforeRunningScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Your Look.
        /// </summary>
        internal static string ChooseYourLook {
            get {
                return ResourceManager.GetString("ChooseYourLook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud Protection Level.
        /// </summary>
        internal static string CloudBlockLevel {
            get {
                return ResourceManager.GetString("CloudBlockLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloud Block Timeout.
        /// </summary>
        internal static string CloudExtendedTimeout {
            get {
                return ResourceManager.GetString("CloudExtendedTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Requirement.
        /// </summary>
        internal static string CodeRequirement {
            get {
                return ResourceManager.GetString("CodeRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obtained via the command ”codesign --display -r - /path/to/app/binary”..
        /// </summary>
        internal static string CodeRequirementPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("CodeRequirementPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columbia.
        /// </summary>
        internal static string Columbia {
            get {
                return ResourceManager.GetString("Columbia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Columns.
        /// </summary>
        internal static string Columns {
            get {
                return ResourceManager.GetString("Columns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Identifiers cannot include commas.
        /// </summary>
        internal static string CommaNotAllowedinAppId {
            get {
                return ResourceManager.GetString("CommaNotAllowedinAppId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For your own use; not used by macOS..
        /// </summary>
        internal static string CommentPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("CommentPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Fixed Hard Disks.
        /// </summary>
        internal static string CompleteHardDisk {
            get {
                return ResourceManager.GetString("CompleteHardDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compliance policies created to act on denied or non-allowed application groups assigned to these devices will not be enforced..
        /// </summary>
        internal static string ComplianceAndAppControlPrivacyInfo {
            get {
                return ResourceManager.GetString("ComplianceAndAppControlPrivacyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual removal of Compliance Profiles is not allowed.
        /// </summary>
        internal static string ComplianceProfileRemovalInfo {
            get {
                return ResourceManager.GetString("ComplianceProfileRemovalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Security Association Idle Time.
        /// </summary>
        internal static string ConfigureSecurityAssociationIdleTime {
            get {
                return ResourceManager.GetString("ConfigureSecurityAssociationIdleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure a window to auto update public apps running in the foreground. The window is based on the time zone setting on the device..
        /// </summary>
        internal static string ConfigureTimeWindow {
            get {
                return ResourceManager.GetString("ConfigureTimeWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this custom settings payload?.
        /// </summary>
        internal static string ConfirmCustomPayloadDelete {
            get {
                return ResourceManager.GetString("ConfirmCustomPayloadDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no smart group assigned, and the resource will not be assigned to any device. Do you wish to continue?.
        /// </summary>
        internal static string ConfirmResourceWillNotBePublished {
            get {
                return ResourceManager.GetString("ConfirmResourceWillNotBePublished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VPN- Connection Name is a required field.
        /// </summary>
        internal static string ConnectionNameIsRequired {
            get {
                return ResourceManager.GetString("ConnectionNameIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contacts Domains.
        /// </summary>
        internal static string ContactsDomains {
            get {
                return ResourceManager.GetString("ContactsDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contains invalid characters (/ \ ? : * | &quot; &lt; &gt;). Only valid characters for a file name are allowed..
        /// </summary>
        internal static string ContainsInvalidCharactersNotAllowedInFileName {
            get {
                return ResourceManager.GetString("ContainsInvalidCharactersNotAllowedInFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content .
        /// </summary>
        internal static string ContentPopups {
            get {
                return ResourceManager.GetString("ContentPopups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuity.
        /// </summary>
        internal static string Continuity {
            get {
                return ResourceManager.GetString("Continuity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controlled Folder Access.
        /// </summary>
        internal static string ControlledFolderAccess {
            get {
                return ResourceManager.GetString("ControlledFolderAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This policy can be used to Enable (block/Audit) or Disable the controlled folder access feature. This feature will prevent malicious applications from modifying protected folders and documents..
        /// </summary>
        internal static string ControlledFolderAccessToolTip {
            get {
                return ResourceManager.GetString("ControlledFolderAccessToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Where would you like to apply application control on Corporate Owned Personally Enabled devices?.
        /// </summary>
        internal static string COPEDevicesApplyTo {
            get {
                return ResourceManager.GetString("COPEDevicesApplyTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting affects Corporate Owned Personally Enabled devices only. This profile always applies on Work Profile and Work Managed devices when assigned..
        /// </summary>
        internal static string COPEDevicesInfo {
            get {
                return ResourceManager.GetString("COPEDevicesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrupted.
        /// </summary>
        internal static string Corrupted {
            get {
                return ResourceManager.GetString("Corrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Your Kiosk.
        /// </summary>
        internal static string CreateYourKiosk {
            get {
                return ResourceManager.GetString("CreateYourKiosk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certification Revocation List Verification.
        /// </summary>
        internal static string CRLCheck {
            get {
                return ResourceManager.GetString("CRLCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures certificate revocation list (CRL) verification enforcement.
        /// </summary>
        internal static string CRLCheckHelp {
            get {
                return ResourceManager.GetString("CRLCheckHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross Profile Calendar Access.
        /// </summary>
        internal static string CrossProfileCalendarAccess {
            get {
                return ResourceManager.GetString("CrossProfileCalendarAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curacao.
        /// </summary>
        internal static string Curacao {
            get {
                return ResourceManager.GetString("Curacao", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semi-Annual Channel.
        /// </summary>
        internal static string CurrentBranchNew {
            get {
                return ResourceManager.GetString("CurrentBranchNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current or Next Login User.
        /// </summary>
        internal static string CurrentOrNextLoginUser {
            get {
                return ResourceManager.GetString("CurrentOrNextLoginUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom configuration reserved for future use.
        /// </summary>
        internal static string CustomConfigurationForFutureUse {
            get {
                return ResourceManager.GetString("CustomConfigurationForFutureUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Enrollment.
        /// </summary>
        internal static string CustomEnrollment {
            get {
                return ResourceManager.GetString("CustomEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Data.
        /// </summary>
        internal static string CustomExtensionData {
            get {
                return ResourceManager.GetString("CustomExtensionData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Folders.
        /// </summary>
        internal static string CustomFolders {
            get {
                return ResourceManager.GetString("CustomFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0-255 number representing the ip protocol (TCP = 6, UDP = 17).
        /// </summary>
        internal static string CustomHelp {
            get {
                return ResourceManager.GetString("CustomHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Messages.
        /// </summary>
        internal static string CustomMessages {
            get {
                return ResourceManager.GetString("CustomMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using custom enrollment will deliver a fully customized experience to users during enrollment. Currently, this feature will utilize some of the settings from the Web Enrollment flow from Settings &gt; Device and Users &gt; General &gt; Enrollment.
        /// </summary>
        internal static string CustomWebViewEnrollmentToolTip {
            get {
                return ResourceManager.GetString("CustomWebViewEnrollmentToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom XML.
        /// </summary>
        internal static string CustomXml {
            get {
                return ResourceManager.GetString("CustomXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom xml which will be added in ExtensionData node..
        /// </summary>
        internal static string CustomXmlDescription {
            get {
                return ResourceManager.GetString("CustomXmlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save profile..
        /// </summary>
        internal static string DataDrivenProfileSaveFailed {
            get {
                return ResourceManager.GetString("DataDrivenProfileSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile is saved..
        /// </summary>
        internal static string DataDrivenProfileSaveSuccess {
            get {
                return ResourceManager.GetString("DataDrivenProfileSaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow User to Change DataSense Settings.
        /// </summary>
        internal static string DataSense {
            get {
                return ResourceManager.GetString("DataSense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Action.
        /// </summary>
        internal static string DefaultAction {
            get {
                return ResourceManager.GetString("DefaultAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the action the rule enforces..
        /// </summary>
        internal static string DefaultActionHelp {
            get {
                return ResourceManager.GetString("DefaultActionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default windows defender blocking level.
        /// </summary>
        internal static string DefaultDefenderBlockingLevel {
            get {
                return ResourceManager.GetString("DefaultDefenderBlockingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inbound Action.
        /// </summary>
        internal static string DefaultInboundAction {
            get {
                return ResourceManager.GetString("DefaultInboundAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value is the action that the firewall does by default on inbound connections..
        /// </summary>
        internal static string DefaultInboundActionHelp {
            get {
                return ResourceManager.GetString("DefaultInboundActionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outbound Action.
        /// </summary>
        internal static string DefaultOutboundAction {
            get {
                return ResourceManager.GetString("DefaultOutboundAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This value is the action that the firewall does by default on outbound connections..
        /// </summary>
        internal static string DefaultOutboundActionHelp {
            get {
                return ResourceManager.GetString("DefaultOutboundActionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defender Exploit Guard.
        /// </summary>
        internal static string DefenderExploitGuard {
            get {
                return ResourceManager.GetString("DefenderExploitGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defer Feature Updates (Days).
        /// </summary>
        internal static string DeferFeatureUpdatesPeriodInDays {
            get {
                return ResourceManager.GetString("DeferFeatureUpdatesPeriodInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defers Feature Updates for the specified number of days. Added in Windows 10, version 1607 with supported values 0-180. Supported values have been updated to 0-365 in Windows 10, version 1703.
        /// </summary>
        internal static string DeferFeatureUpdatesPeriodInDaysToolTip {
            get {
                return ResourceManager.GetString("DeferFeatureUpdatesPeriodInDaysToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defer Quality Updates (Days).
        /// </summary>
        internal static string DeferQualityUpdatesPeriodInDays {
            get {
                return ResourceManager.GetString("DeferQualityUpdatesPeriodInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1607. Defers Quality Updates for the specified number of days. Supported values are 0-30..
        /// </summary>
        internal static string DeferQualityUpdatesPeriodInDaysToolTip {
            get {
                return ResourceManager.GetString("DeferQualityUpdatesPeriodInDaysToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define App or Process.
        /// </summary>
        internal static string DefineAppOrProcess {
            get {
                return ResourceManager.GetString("DefineAppOrProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay Background Download From Http.
        /// </summary>
        internal static string DelayBackgroundDownloadFromHttp {
            get {
                return ResourceManager.GetString("DelayBackgroundDownloadFromHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to delay the use of an HTTP source in a background download that is allowed to use peer-to-peer..
        /// </summary>
        internal static string DelayBackgroundDownloadFromHttpToolTip {
            get {
                return ResourceManager.GetString("DelayBackgroundDownloadFromHttpToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay Cache Server Fallback Background.
        /// </summary>
        internal static string DelayCacheServerFallbackBackground {
            get {
                return ResourceManager.GetString("DelayCacheServerFallbackBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the time in seconds to delay the fallback from Cache Server to the HTTP source for a background content download..
        /// </summary>
        internal static string DelayCacheServerFallbackBackgroundToolTip {
            get {
                return ResourceManager.GetString("DelayCacheServerFallbackBackgroundToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay Cache Server Fallback Foreground.
        /// </summary>
        internal static string DelayCacheServerFallbackForeground {
            get {
                return ResourceManager.GetString("DelayCacheServerFallbackForeground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the time in seconds to delay the fallback from Cache Server to the HTTP source for foreground content download..
        /// </summary>
        internal static string DelayCacheServerFallbackForegroundToolTip {
            get {
                return ResourceManager.GetString("DelayCacheServerFallbackForegroundToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delayed Launch cannot be less than zero seconds.
        /// </summary>
        internal static string DelayedLaunchCannotBeLessThanZeroSeconds {
            get {
                return ResourceManager.GetString("DelayedLaunchCannotBeLessThanZeroSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay Foreground Download From Http.
        /// </summary>
        internal static string DelayForegroundDownloadFromHttp {
            get {
                return ResourceManager.GetString("DelayForegroundDownloadFromHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to delay the use of an HTTP source in a foreground (interactive) download that is allowed to use peer-to-peer..
        /// </summary>
        internal static string DelayForegroundDownloadFromHttpToolTip {
            get {
                return ResourceManager.GetString("DelayForegroundDownloadFromHttpToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All.
        /// </summary>
        internal static string DeleteAll {
            get {
                return ResourceManager.GetString("DeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure to delete it?.
        /// </summary>
        internal static string DeleteConfirmationMessage {
            get {
                return ResourceManager.GetString("DeleteConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string DeleteConfirmationTitle {
            get {
                return ResourceManager.GetString("DeleteConfirmationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Credential.
        /// </summary>
        internal static string DeleteCredential {
            get {
                return ResourceManager.GetString("DeleteCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this credential payload?.
        /// </summary>
        internal static string DeleteCredentialPayloadConfirm {
            get {
                return ResourceManager.GetString("DeleteCredentialPayloadConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Custom Settings.
        /// </summary>
        internal static string DeleteCustomSettings {
            get {
                return ResourceManager.GetString("DeleteCustomSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Exception.
        /// </summary>
        internal static string DeleteException {
            get {
                return ResourceManager.GetString("DeleteException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this exception payload?.
        /// </summary>
        internal static string DeleteExceptionPayloadConfirmation {
            get {
                return ResourceManager.GetString("DeleteExceptionPayloadConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete iBeacon group.
        /// </summary>
        internal static string DeleteIbeaconGroup {
            get {
                return ResourceManager.GetString("DeleteIbeaconGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Tab.
        /// </summary>
        internal static string DeleteTab {
            get {
                return ResourceManager.GetString("DeleteTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete VPN.
        /// </summary>
        internal static string DeleteVPN {
            get {
                return ResourceManager.GetString("DeleteVPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this VPN payload?.
        /// </summary>
        internal static string DeleteVPNPayloadConfirm {
            get {
                return ResourceManager.GetString("DeleteVPNPayloadConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete WiFi.
        /// </summary>
        internal static string DeleteWiFi {
            get {
                return ResourceManager.GetString("DeleteWiFi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this WiFi payload?.
        /// </summary>
        internal static string DeleteWiFiConfirm {
            get {
                return ResourceManager.GetString("DeleteWiFiConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Time Each File is Held in the Delivery Optimization Cache (Seconds).
        /// </summary>
        internal static string DeliveryOptimizationMaxCacheAge {
            get {
                return ResourceManager.GetString("DeliveryOptimizationMaxCacheAge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum time in seconds that each file is held in the Delivery Optimization cache after downloading successfully.  The value 0 (zero) is new in Windows 10, version 1607 and means &quot;unlimited&quot;. Delivery Optimization holds the files in the cache longer and makes them available for uploads to other devices if the cache size has not been exceeded..
        /// </summary>
        internal static string DeliveryOptimizationMaxCacheAgeToolTip {
            get {
                return ResourceManager.GetString("DeliveryOptimizationMaxCacheAgeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Cache Size that Delivery Optimization Can Use (%).
        /// </summary>
        internal static string DeliveryOptimizationMaxCacheSize {
            get {
                return ResourceManager.GetString("DeliveryOptimizationMaxCacheSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum cache size that Delivery Optimization can use, as a percentage of disk size (1-100).
        /// </summary>
        internal static string DeliveryOptimizationMaxCacheSizeToolTip {
            get {
                return ResourceManager.GetString("DeliveryOptimizationMaxCacheSizeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Upload Bandwidth that a Device Will Use Across All Concurrent Upload Activity (KB/second).
        /// </summary>
        internal static string DeliveryOptimizationMaxUploadBandwidth {
            get {
                return ResourceManager.GetString("DeliveryOptimizationMaxUploadBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dell.
        /// </summary>
        internal static string Dell {
            get {
                return ResourceManager.GetString("Dell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dell Update/Support Site.
        /// </summary>
        internal static string DellUpdateSupportSite {
            get {
                return ResourceManager.GetString("DellUpdateSupportSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deny permission.
        /// </summary>
        internal static string DenyPermission {
            get {
                return ResourceManager.GetString("DenyPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop Client.
        /// </summary>
        internal static string DesktopClient {
            get {
                return ResourceManager.GetString("DesktopClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VMware recommends the use of the Desktop client to ensure the best compatibility and support experience..
        /// </summary>
        internal static string DesktopClientToolTip {
            get {
                return ResourceManager.GetString("DesktopClientToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop Folders.
        /// </summary>
        internal static string DesktopFolders {
            get {
                return ResourceManager.GetString("DesktopFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop Image.
        /// </summary>
        internal static string DesktopImageUrl {
            get {
                return ResourceManager.GetString("DesktopImageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires user to unlock FileVault when the computer awakes from hibernation..
        /// </summary>
        internal static string DestroyFVKeyOnStandbyHelpInfo {
            get {
                return ResourceManager.GetString("DestroyFVKeyOnStandbyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode - Work Profile Lock Timeout should be in range 0 and 999.
        /// </summary>
        internal static string DeviceLockTimeOutShouldBeInRange0And999 {
            get {
                return ResourceManager.GetString("DeviceLockTimeOutShouldBeInRange0And999", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For this setting to take effect, device needs to be rebooted after pushing the profile..
        /// </summary>
        internal static string DeviceLockTimeoutToolTip {
            get {
                return ResourceManager.GetString("DeviceLockTimeoutToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device pairing.
        /// </summary>
        internal static string DevicePairing {
            get {
                return ResourceManager.GetString("DevicePairing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supervised only. If set to false, host pairing is disabled with the exception of the supervision host.
        ///Starting in iOS 13, this option is default enabled and cannot be disabled..
        /// </summary>
        internal static string DevicePairingTooltip {
            get {
                return ResourceManager.GetString("DevicePairingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Expiration (days).
        /// </summary>
        internal static string DevicePasswordExpiration {
            get {
                return ResourceManager.GetString("DevicePasswordExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures the expiry for the password in days. Value must be between 0 to 730. Expiration value of 0 means that the password never expires..
        /// </summary>
        internal static string DevicePasswordExpirationToolTip {
            get {
                return ResourceManager.GetString("DevicePasswordExpirationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures the number of previous passwords including the current that cannot be reused.
        /// </summary>
        internal static string DevicePasswordHistoryToolTip {
            get {
                return ResourceManager.GetString("DevicePasswordHistoryToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Profile Corrupted-Reinstall queued.
        /// </summary>
        internal static string DeviceProfileCorrupted {
            get {
                return ResourceManager.GetString("DeviceProfileCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Profile Corrupted-Reinstall not queued.
        /// </summary>
        internal static string DeviceProfileResyncLimitExceededForCorrupted {
            get {
                return ResourceManager.GetString("DeviceProfileResyncLimitExceededForCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device UID.
        /// </summary>
        internal static string DeviceUID {
            get {
                return ResourceManager.GetString("DeviceUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device VPN.
        /// </summary>
        internal static string DeviceVPNTooltip {
            get {
                return ResourceManager.GetString("DeviceVPNTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device-Wide VPN Rules.
        /// </summary>
        internal static string DeviceWideVPNRules {
            get {
                return ResourceManager.GetString("DeviceWideVPNRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device WLAN Mac Address.
        /// </summary>
        internal static string DeviceWLANMacLookUpText {
            get {
                return ResourceManager.GetString("DeviceWLANMacLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct Assignments.
        /// </summary>
        internal static string DirectAssignments {
            get {
                return ResourceManager.GetString("DirectAssignments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list. The rule is enabled based on the traffic direction as following.
        /// </summary>
        internal static string DirectionHelp {
            get {
                return ResourceManager.GetString("DirectionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All.
        /// </summary>
        internal static string DisableAll {
            get {
                return ResourceManager.GetString("DisableAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Context Menus.
        /// </summary>
        internal static string DisableContextMenus {
            get {
                return ResourceManager.GetString("DisableContextMenus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1803. Allows context menus to be invoked in the Start menu..
        /// </summary>
        internal static string DisableContextMenusToolTip {
            get {
                return ResourceManager.GetString("DisableContextMenusToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable CRL verification.
        /// </summary>
        internal static string DisableCrlVerification {
            get {
                return ResourceManager.GetString("DisableCrlVerification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable &quot;Show app list in Start menu&quot; in Settings.
        /// </summary>
        internal static string DisableShowAppList {
            get {
                return ResourceManager.GetString("DisableShowAppList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to Disable to allow secondary connections.
        /// </summary>
        internal static string DisableStatefulFtp {
            get {
                return ResourceManager.GetString("DisableStatefulFtp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Set Maximum Days for Disabling Work Profile.
        /// </summary>
        internal static string DisableWorkProfileLabel
        {
            get
            {
                return ResourceManager.GetString("DisableWorkProfileLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Disallow.
        /// </summary>
        internal static string Disallow {
            get {
                return ResourceManager.GetString("Disallow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disallowed.
        /// </summary>
        internal static string Disallowed {
            get {
                return ResourceManager.GetString("Disallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Allow Wi-Fi is disabled, devices drop off the Wi-Fi network that they are connected to if there isn&apos;t a configuration profile for that network already installed. It is advised to use this restriction along with an existing Wi-Fi profile payload so that the device can maintain a network connection in the event that Mobile Data is also disabled..
        /// </summary>
        internal static string DisallowWifiWarningMessage {
            get {
                return ResourceManager.GetString("DisallowWifiWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discard profile changes.
        /// </summary>
        internal static string DiscardProfileChanges {
            get {
                return ResourceManager.GetString("DiscardProfileChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bluetooth-enabled Devices Can Discover The Device.
        /// </summary>
        internal static string DiscoverableMode {
            get {
                return ResourceManager.GetString("DiscoverableMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DISK.
        /// </summary>
        internal static string DISK {
            get {
                return ResourceManager.GetString("DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated domains can be used with features such as Extensible AppSSO, universal links, and Password AutoFill.
        /// </summary>
        internal static string DisplayMessageForAssociatedDomainsPayload {
            get {
                return ResourceManager.GetString("DisplayMessageForAssociatedDomainsPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documents.
        /// </summary>
        internal static string Documents {
            get {
                return ResourceManager.GetString("Documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not allow any site to show popups.
        /// </summary>
        internal static string DoNotAllowAnySiteToShowPopups {
            get {
                return ResourceManager.GetString("DoNotAllowAnySiteToShowPopups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your personal application privacy policy is set to ‘Do Not Collect’ for at least one device type for at least one Organization Group in your hierarchy. The application control policy to remove denied or non-allowed personal applications from these devices will be enforced despite the privacy policy. Review your privacy policies or notify your end-users of the impact on their personal applications..
        /// </summary>
        internal static string DoNotCollectApplicationSampleWarningForAppControlProfile {
            get {
                return ResourceManager.GetString("DoNotCollectApplicationSampleWarningForAppControlProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your personal application privacy policy is set to Do Not Collect for at least one device for at least one Organization Group in your hierarchy. The compliance policies and application control profiles associated with the application groups for personal applications of these devices will not be enforced..
        /// </summary>
        internal static string DoNotCollectApplicationSampleWarningForAppGroups {
            get {
                return ResourceManager.GetString("DoNotCollectApplicationSampleWarningForAppGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not force size of Start.
        /// </summary>
        internal static string DoNotForceSize {
            get {
                return ResourceManager.GetString("DoNotForceSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do Nothing.
        /// </summary>
        internal static string DoNothing {
            get {
                return ResourceManager.GetString("DoNothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do Not Ignore.
        /// </summary>
        internal static string DoNotIgnore {
            get {
                return ResourceManager.GetString("DoNotIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not predict network actions on any network connection.
        /// </summary>
        internal static string DoNotPedictNetworkActionsOnAnyNetworkConnection {
            get {
                return ResourceManager.GetString("DoNotPedictNetworkActionsOnAnyNetworkConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t Allow.
        /// </summary>
        internal static string DontAllow {
            get {
                return ResourceManager.GetString("DontAllow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Profile.
        /// </summary>
        internal static string DownloadProfile {
            get {
                return ResourceManager.GetString("DownloadProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag to start.
        /// </summary>
        internal static string DragToStartMsg {
            get {
                return ResourceManager.GetString("DragToStartMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive Location Used for Peer Cache.
        /// </summary>
        internal static string DriveLocationUsedForPeerCache {
            get {
                return ResourceManager.GetString("DriveLocationUsedForPeerCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the drive that Delivery Optimization should use for its cache. The drive location can be specified using environment variables, drive letter or using a full path. By default, %SystemDrive% is used to store the cache..
        /// </summary>
        internal static string DriveLocationUsedForPeerCacheToolTip {
            get {
                return ResourceManager.GetString("DriveLocationUsedForPeerCacheToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drivers.
        /// </summary>
        internal static string DriverExtensions {
            get {
                return ResourceManager.GetString("DriverExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drivers.
        /// </summary>
        internal static string Drivers {
            get {
                return ResourceManager.GetString("Drivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dual Scan.
        /// </summary>
        internal static string DualScanForDeferralPolicies {
            get {
                return ResourceManager.GetString("DualScanForDeferralPolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot add the same ICCID more than once in a single profile. Please remove one or more of the duplicate ICCIDs.
        /// </summary>
        internal static string DuplicateICCIDs {
            get {
                return ResourceManager.GetString("DuplicateICCIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add duplicate Team Identifier for System Extension Type..
        /// </summary>
        internal static string DuplicateTeamIdentifierAdded {
            get {
                return ResourceManager.GetString("DuplicateTeamIdentifierAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle Identifier cannot be empty when multiple Team Identifiers are present..
        /// </summary>
        internal static string DuplicateTeamIdWithEmptyBundleId {
            get {
                return ResourceManager.GetString("DuplicateTeamIdWithEmptyBundleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more schedule rules below are same. Update the time frame or delete the duplicate rows to continue..
        /// </summary>
        internal static string DuplicateTimeScheduleEntries {
            get {
                return ResourceManager.GetString("DuplicateTimeScheduleEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EAP Type.
        /// </summary>
        internal static string EapType {
            get {
                return ResourceManager.GetString("EapType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edge Traversal.
        /// </summary>
        internal static string EdgeTraversal {
            get {
                return ResourceManager.GetString("EdgeTraversal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether edge traversal is enabled or disabled for this rule.
        /// </summary>
        internal static string EdgeTraversalHelp {
            get {
                return ResourceManager.GetString("EdgeTraversalHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit {0} for {1} Opens Dialog.
        /// </summary>
        internal static string EditArgForArgOpensDialog {
            get {
                return ResourceManager.GetString("EditArgForArgOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit {0} Profile.
        /// </summary>
        internal static string EditArgProfile {
            get {
                return ResourceManager.GetString("EditArgProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Profile {0} Opens Dialog.
        /// </summary>
        internal static string EditProfileArgOpensDialog {
            get {
                return ResourceManager.GetString("EditProfileArgOpensDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt for Email Address in Self-Service Portal.
        /// </summary>
        internal static string EmailAddressPromptLookUpText {
            get {
                return ResourceManager.GetString("EmailAddressPromptLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt for Email Domain in Self-Service Portal.
        /// </summary>
        internal static string EmailDomainPromptLookUpText {
            get {
                return ResourceManager.GetString("EmailDomainPromptLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Email.
        /// </summary>
        internal static string EmailScanning {
            get {
                return ResourceManager.GetString("EmailScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag and arrange apps here or select an app to start.
        /// </summary>
        internal static string EmptyCanvasMessage {
            get {
                return ResourceManager.GetString("EmptyCanvasMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add apps to this folder.
        /// </summary>
        internal static string EmptyFolderPlaceholder {
            get {
                return ResourceManager.GetString("EmptyFolderPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide access to dependent apps and set hidden apps.
        /// </summary>
        internal static string EmptyHiddenAppsMsg {
            get {
                return ResourceManager.GetString("EmptyHiddenAppsMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save failed. Please remove empty groups from your kiosk configuration before publishing.
        /// </summary>
        internal static string EmptyKioskGroup {
            get {
                return ResourceManager.GetString("EmptyKioskGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag an app here or select an app to run in kiosk mode..
        /// </summary>
        internal static string EmptySingleAppMsg {
            get {
                return ResourceManager.GetString("EmptySingleAppMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize the home screen layout and add company branding with images and text..
        /// </summary>
        internal static string EmptyTemplateMsg {
            get {
                return ResourceManager.GetString("EmptyTemplateMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Associated Domains.
        /// </summary>
        internal static string EnableAssociatedDomains {
            get {
                return ResourceManager.GetString("EnableAssociatedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable BitLocker To Go Support.
        /// </summary>
        internal static string EnableBitLockerToGoSupport {
            get {
                return ResourceManager.GetString("EnableBitLockerToGoSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this option will make removeable drives read-only unless encrypted. To find a recovery key for a drive, look under Peripherals..
        /// </summary>
        internal static string EnableBitLockerToGoSupportTooltip {
            get {
                return ResourceManager.GetString("EnableBitLockerToGoSupportTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Calendar Domains.
        /// </summary>
        internal static string EnableCalendarDomains {
            get {
                return ResourceManager.GetString("EnableCalendarDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Calendars.
        /// </summary>
        internal static string EnableCalendars {
            get {
                return ResourceManager.GetString("EnableCalendars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Calendars will be configured for this Exchange account..
        /// </summary>
        internal static string EnableCalendarsTooltip {
            get {
                return ResourceManager.GetString("EnableCalendarsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Calendars toggle.
        /// </summary>
        internal static string EnableCalendarsUserOverridable {
            get {
                return ResourceManager.GetString("EnableCalendarsUserOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not be allowed to toggle Calendars on or off..
        /// </summary>
        internal static string EnableCalendarsUserOverridableTooltip {
            get {
                return ResourceManager.GetString("EnableCalendarsUserOverridableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Contacts Domains.
        /// </summary>
        internal static string EnableContactsDomains {
            get {
                return ResourceManager.GetString("EnableContactsDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Contacts will be configured for this Exchange account..
        /// </summary>
        internal static string EnableContactsTooltip {
            get {
                return ResourceManager.GetString("EnableContactsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Contacts toggle.
        /// </summary>
        internal static string EnableContactsUserOverridable {
            get {
                return ResourceManager.GetString("EnableContactsUserOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not be allowed to toggle Contacts on or off..
        /// </summary>
        internal static string EnableContactsUserOverridableTooltip {
            get {
                return ResourceManager.GetString("EnableContactsUserOverridableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled (Audit mode).
        /// </summary>
        internal static string EnabledAuditMode {
            get {
                return ResourceManager.GetString("EnabledAuditMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled (Block mode).
        /// </summary>
        internal static string EnabledBlockMode {
            get {
                return ResourceManager.GetString("EnabledBlockMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay non-OS Updates (Days).
        /// </summary>
        internal static string EnableDelayAppUpdatesInDays {
            get {
                return ResourceManager.GetString("EnableDelayAppUpdatesInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, a user&apos;s visibility of non-OS Software Updates is delayed..
        /// </summary>
        internal static string EnableDelayAppUpdatesInDaysToolTip {
            get {
                return ResourceManager.GetString("EnableDelayAppUpdatesInDaysToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay OS Updates (Days).
        /// </summary>
        internal static string Enabledelayupdatesindays {
            get {
                return ResourceManager.GetString("Enabledelayupdatesindays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enforce a Device Passcode Policy on the device..
        /// </summary>
        internal static string EnableDevicePasscodePolicyToolTip {
            get {
                return ResourceManager.GetString("EnableDevicePasscodePolicyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Excluded Domains.
        /// </summary>
        internal static string EnableExcludedDomains {
            get {
                return ResourceManager.GetString("EnableExcludedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Face Unlock.
        /// </summary>
        internal static string EnableFaceUnlockAuthentication {
            get {
                return ResourceManager.GetString("EnableFaceUnlockAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Fallback.
        /// </summary>
        internal static string EnableFallback {
            get {
                return ResourceManager.GetString("EnableFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables a tunnel over cellular data to carry traffic that is eligible for WiFi Assist and also requires VPN. Enabling fallback requires that the server support multiple tunnels for a single user..
        /// </summary>
        internal static string EnableFallbackTooltip {
            get {
                return ResourceManager.GetString("EnableFallbackTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Iris Scanner.
        /// </summary>
        internal static string EnableIrisScannerAuthentication {
            get {
                return ResourceManager.GetString("EnableIrisScannerAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will enable logging at an error, warning, informational, or debug level..
        /// </summary>
        internal static string EnableLoggingHelp {
            get {
                return ResourceManager.GetString("EnableLoggingHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Low CPU Priority.
        /// </summary>
        internal static string EnableLowCPUPriority {
            get {
                return ResourceManager.GetString("EnableLowCPUPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Mail.
        /// </summary>
        internal static string EnableMail {
            get {
                return ResourceManager.GetString("EnableMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Mail Domains.
        /// </summary>
        internal static string EnableMailDomains {
            get {
                return ResourceManager.GetString("EnableMailDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Mail will be configured for this Exchange account..
        /// </summary>
        internal static string EnableMailTooltip {
            get {
                return ResourceManager.GetString("EnableMailTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Mail toggle.
        /// </summary>
        internal static string EnableMailUserOverridable {
            get {
                return ResourceManager.GetString("EnableMailUserOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not be allowed to toggle Mail on or off..
        /// </summary>
        internal static string EnableMailUserOverridableTooltip {
            get {
                return ResourceManager.GetString("EnableMailUserOverridableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Notes.
        /// </summary>
        internal static string EnableNotes {
            get {
                return ResourceManager.GetString("EnableNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Notes will be configured for this Exchange account..
        /// </summary>
        internal static string EnableNotesTooltip {
            get {
                return ResourceManager.GetString("EnableNotesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Notes toggle.
        /// </summary>
        internal static string EnableNotesUserOverridable {
            get {
                return ResourceManager.GetString("EnableNotesUserOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not be allowed to toggle Notes on or off..
        /// </summary>
        internal static string EnableNotesUserOverridableTooltip {
            get {
                return ResourceManager.GetString("EnableNotesUserOverridableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Settings for Previous Windows Versions.
        /// </summary>
        internal static string EnableOldNodes {
            get {
                return ResourceManager.GetString("EnableOldNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Packet Queue.
        /// </summary>
        internal static string EnablePacketQueue {
            get {
                return ResourceManager.GetString("EnablePacketQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures Packet Queue.
        /// </summary>
        internal static string EnablePacketQueueHelp {
            get {
                return ResourceManager.GetString("EnablePacketQueueHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Hub to prompt employees for their password to rotate the Recovery Key to escrow if the device has already been encrypted..
        /// </summary>
        internal static string EnableRecoveryKeyHelpInfo {
            get {
                return ResourceManager.GetString("EnableRecoveryKeyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Reminders.
        /// </summary>
        internal static string EnableReminders {
            get {
                return ResourceManager.GetString("EnableReminders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, Reminders will be configured for this Exchange account..
        /// </summary>
        internal static string EnableRemindersTooltip {
            get {
                return ResourceManager.GetString("EnableRemindersTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Reminders toggle.
        /// </summary>
        internal static string EnableRemindersUserOverridable {
            get {
                return ResourceManager.GetString("EnableRemindersUserOverridable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not be allowed to toggle Reminders on or off..
        /// </summary>
        internal static string EnableRemindersUserOverridableTooltip {
            get {
                return ResourceManager.GetString("EnableRemindersUserOverridableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is enabled, Siri cannot have any responses involving inappropriate content..
        /// </summary>
        internal static string EnableSiriProfanityFilterTooltip {
            get {
                return ResourceManager.GetString("EnableSiriProfanityFilterTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Voice Control.
        /// </summary>
        internal static string EnableVoiceControl {
            get {
                return ResourceManager.GetString("EnableVoiceControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Web View Based Enrollment.
        /// </summary>
        internal static string EnableWebViewBasedEnrollment {
            get {
                return ResourceManager.GetString("EnableWebViewBasedEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encode the preshared key using UTF-8.
        /// </summary>
        internal static string EncodethepresharedkeyusingUTF8 {
            get {
                return ResourceManager.GetString("EncodethepresharedkeyusingUTF8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt and block data.
        /// </summary>
        internal static string EncryptAndBlockData {
            get {
                return ResourceManager.GetString("EncryptAndBlockData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt data and allow user to move data to non-enterprise applications. Data transfer will be audited..
        /// </summary>
        internal static string EncryptDataAndAllowUserToMoveData {
            get {
                return ResourceManager.GetString("EncryptDataAndAllowUserToMoveData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt data and prompt user for override when moving data to non-enterprise applications. Audit overrides..
        /// </summary>
        internal static string EncryptDataAndPromptUser {
            get {
                return ResourceManager.GetString("EncryptDataAndPromptUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action after last dismissal.
        /// </summary>
        internal static string EncryptionActionAfterLastNotification {
            get {
                return ResourceManager.GetString("EncryptionActionAfterLastNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically sends employees notifications 1 minute and 5 minutes after the last allowed dismissal prompting them to save their work before the system automatically logs them out, otherwise no action will be taken..
        /// </summary>
        internal static string EncryptionActionAfterLastNotificationHelpInfo {
            get {
                return ResourceManager.GetString("EncryptionActionAfterLastNotificationHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification dismissal.
        /// </summary>
        internal static string EncryptionMaxNotifyAttempts {
            get {
                return ResourceManager.GetString("EncryptionMaxNotifyAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of times to allow employees to dismiss logout notification..
        /// </summary>
        internal static string EncryptionMaxNotifyAttemptsHelpInfo {
            get {
                return ResourceManager.GetString("EncryptionMaxNotifyAttemptsHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a message to employees that notifies them that they need to log out and log back in when prompted..
        /// </summary>
        internal static string EncryptionNotificationMessageHelpInfo {
            get {
                return ResourceManager.GetString("EncryptionNotificationMessageHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the time interval between dismissed notifications..
        /// </summary>
        internal static string EncryptionNotificationRetryIntervalHelpInfo {
            get {
                return ResourceManager.GetString("EncryptionNotificationRetryIntervalHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint Security.
        /// </summary>
        internal static string EndpointSecurityExtension {
            get {
                return ResourceManager.GetString("EndpointSecurityExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require PIN at startup.
        /// </summary>
        internal static string EnforceAuthenticationPin {
            get {
                return ResourceManager.GetString("EnforceAuthenticationPin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require Smart Card for all authentication.
        /// </summary>
        internal static string EnforceSmartCard {
            get {
                return ResourceManager.GetString("EnforceSmartCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deadline before automatic scheduling and execution of a pending restart outside of Active Hours..
        /// </summary>
        internal static string EngagedRestartDeadlineForFeatureToolTip {
            get {
                return ResourceManager.GetString("EngagedRestartDeadlineForFeatureToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Updates Engaged Restart Deadline (Days).
        /// </summary>
        internal static string EngagedRestartDeadlineForFeatureUpdates {
            get {
                return ResourceManager.GetString("EngagedRestartDeadlineForFeatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality Updates Engaged Restart Deadline (Days).
        /// </summary>
        internal static string EngagedRestartDeadlineInDays {
            get {
                return ResourceManager.GetString("EngagedRestartDeadlineInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deadline before automatic scheduling and execution of a pending restart outside of Active Hours..
        /// </summary>
        internal static string EngagedRestartDeadlineToolTip {
            get {
                return ResourceManager.GetString("EngagedRestartDeadlineToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of days a user can snooze engaged restart reminder notifications..
        /// </summary>
        internal static string EngagedRestartSnoozeScheduleForFeatureToolTip {
            get {
                return ResourceManager.GetString("EngagedRestartSnoozeScheduleForFeatureToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Updates Engaged Restart Snooze Schedule (Days).
        /// </summary>
        internal static string EngagedRestartSnoozeScheduleForFeatureUpdates {
            get {
                return ResourceManager.GetString("EngagedRestartSnoozeScheduleForFeatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality Updates Engaged Restart Snooze Schedule (Days).
        /// </summary>
        internal static string EngagedRestartSnoozeScheduleInDays {
            get {
                return ResourceManager.GetString("EngagedRestartSnoozeScheduleInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of days a user can snooze engaged restart reminder notifications..
        /// </summary>
        internal static string EngagedRestartSnoozeScheduleToolTip {
            get {
                return ResourceManager.GetString("EngagedRestartSnoozeScheduleToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced.
        /// </summary>
        internal static string Enhanced {
            get {
                return ResourceManager.GetString("Enhanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a comma-separated list of email addresses to be allowed.
        /// </summary>
        internal static string EnterACommaSeparatedListOfEmailAddressesToBeWhitelisted {
            get {
                return ResourceManager.GetString("EnterACommaSeparatedListOfEmailAddressesToBeAllowlisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a comma separated list of package names to be allowed.
        /// </summary>
        internal static string EnterACommaSeparatedListOfPackagesToBeWhitelisted {
            get {
                return ResourceManager.GetString("EnterACommaSeparatedListOfPackagesToBeAllowlisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter APN.
        /// </summary>
        internal static string EnterAPN {
            get {
                return ResourceManager.GetString("EnterAPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EnterDisplayName	Enter display name.
        /// </summary>
        internal static string EnterDisplayName {
            get {
                return ResourceManager.GetString("EnterDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Message Here.
        /// </summary>
        internal static string EnterMessageHere {
            get {
                return ResourceManager.GetString("EnterMessageHere", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Maximum Days to Allow Disabled Work Profile.
        /// </summary>
        internal static string EnterNumberOfDaysWorkProfileDisabled
        {
            get
            {
                return ResourceManager.GetString("EnterNumberOfDaysWorkProfileDisabled", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Enter package family name of the application.
        /// </summary>
        internal static string EnterPackageFamilyNameOfApplication {
            get {
                return ResourceManager.GetString("EnterPackageFamilyNameOfApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of enterprise resource domains hosted in the cloud that need to be protected and will be routed through the enterprise network via a proxy server (on port 80). Append &quot;|/*AppCompat*/&quot; to the domain name when using non-Microsoft apps..
        /// </summary>
        internal static string EnterpriseCloudResourcesTooltip {
            get {
                return ResourceManager.GetString("EnterpriseCloudResourcesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enterprise Factory Reset Protection.
        /// </summary>
        internal static string EnterpriseFactoryResetProtection {
            get {
                return ResourceManager.GetString("EnterpriseFactoryResetProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To enable Enterprise Factory Reset Protection and provision devices that are factory reset using unauthenticated methods such as bootloader or fast boot, you will first need to obtain Google User IDs at https://developers.google.com/people/api/rest/v1/people/get
        /// </summary>
        internal static string EnterpriseFactoryResetProtectionInfoMessage {
            get {
                return ResourceManager.GetString("EnterpriseFactoryResetProtectionInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter \&quot;people/me\&quot; as the Resource Name and \&quot;emailAddresses\&quot; as Person Fields, click Execute, copy the ID and then paste it below before proceeding..
        /// </summary>
        internal static string EnterpriseFactoryResetProtectionInfoMessage2 {
            get {
                return ResourceManager.GetString("EnterpriseFactoryResetProtectionInfoMessage2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data..
        /// </summary>
        internal static string EnterpriseIPRangesTooltip {
            get {
                return ResourceManager.GetString("EnterpriseIPRangesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected. These locations will be considered a safe destination for enterprise data..
        /// </summary>
        internal static string EnterpriseNetworkDomainsTooltip {
            get {
                return ResourceManager.GetString("EnterpriseNetworkDomainsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter rules here.
        /// </summary>
        internal static string EnterRulesHere {
            get {
                return ResourceManager.GetString("EnterRulesHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the Package Family Name of the Application.
        /// </summary>
        internal static string EnterThePackageFamilyNameOfTheApplication {
            get {
                return ResourceManager.GetString("EnterThePackageFamilyNameOfTheApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter URL here.
        /// </summary>
        internal static string EnterUrlHere {
            get {
                return ResourceManager.GetString("EnterUrlHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some configured payloads in this profile seem to have errors. Please correct the below errors to proceed.
        /// </summary>
        internal static string ErrorsInTheConfiguredProfiles {
            get {
                return ResourceManager.GetString("ErrorsInTheConfiguredProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error title.
        /// </summary>
        internal static string ErrorTitle {
            get {
                return ResourceManager.GetString("ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MDM Channel Security for Escrow Gateway must be set to Encrypted. Go to All Settings&amp;gt;Devices&amp;amp; Users&amp;gt;Windows&amp;gt;Windows Desktop&amp;gt;Intelligent Hub Settings to change this setting..
        /// </summary>
        internal static string EscrowChannelSecurityModeCompatibilityError {
            get {
                return ResourceManager.GetString("EscrowChannelSecurityModeCompatibilityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Escrowed Certificate Availability Job.
        /// </summary>
        internal static string EscrowedCertificateAvailabilityJob {
            get {
                return ResourceManager.GetString("EscrowedCertificateAvailabilityJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escrowed SMIME certificates can be uploaded to the escrow gateway and retrieved by a device as a profile encrypted by the device’s identity certificate. For Escrow Gateway, MDM Channel Security must be set to Encrypted (in All Settings&amp;gt;Devices&amp;amp; Users&amp;gt;Windows&amp;gt;Windows Desktop&amp;gt;Intelligent Hub Settings)..
        /// </summary>
        internal static string EscrowGatewayProfileWindowsInfo {
            get {
                return ResourceManager.GetString("EscrowGatewayProfileWindowsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escrow Personal Recovery Key to UEM Server.
        /// </summary>
        internal static string EscrowRecoveryKeyToServer {
            get {
                return ResourceManager.GetString("EscrowRecoveryKeyToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions.
        /// </summary>
        internal static string Exceptions {
            get {
                return ResourceManager.GetString("Exceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the addresses that should not use the proxy server. Use semi-colons (;) to separate entries..
        /// </summary>
        internal static string ExceptionsHelp {
            get {
                return ResourceManager.GetString("ExceptionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the URL to load into a webview for authentication via OAuth when auto-discovery is not used..
        /// </summary>
        internal static string ExchangeOAuthSignInURLTooltip {
            get {
                return ResourceManager.GetString("ExchangeOAuthSignInURLTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether Exchange connection should use OAuth for authentication or not.
        /// </summary>
        internal static string ExchangeUseOauthTooltip {
            get {
                return ResourceManager.GetString("ExchangeUseOauthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excluded Domains.
        /// </summary>
        internal static string ExcludedDomains {
            get {
                return ResourceManager.GetString("ExcludedDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude Group.
        /// </summary>
        internal static string ExcludeGroup {
            get {
                return ResourceManager.GetString("ExcludeGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude Local Networks.
        /// </summary>
        internal static string ExcludeLocalNetworks {
            get {
                return ResourceManager.GetString("ExcludeLocalNetworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If checked and Include All Networks is Checked, routes all local network traffic outside the VPN.
        /// </summary>
        internal static string ExcludeLocalNetworksInfo {
            get {
                return ResourceManager.GetString("ExcludeLocalNetworksInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude Windows Update Drivers from Quality Updates.
        /// </summary>
        internal static string ExcludeWUDriversInQualityUpdate {
            get {
                return ResourceManager.GetString("ExcludeWUDriversInQualityUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1607. Allows IT Admins to exclude Windows Update (WU) drivers during updates.
        ///.
        /// </summary>
        internal static string ExcludeWUDriversInQualityUpdatesToolTip {
            get {
                return ResourceManager.GetString("ExcludeWUDriversInQualityUpdatesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exempt both IPv4 and IPv6.
        /// </summary>
        internal static string Exempt_B_IPv4_And_IPv6 {
            get {
                return ResourceManager.GetString("Exempt_B_IPv4_And_IPv6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exempt ICMP.
        /// </summary>
        internal static string EXEMPT_ICMP {
            get {
                return ResourceManager.GetString("EXEMPT_ICMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exempt neighbor discover.
        /// </summary>
        internal static string EXEMPT_NEIGHBOR_DISC {
            get {
                return ResourceManager.GetString("EXEMPT_NEIGHBOR_DISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No IPsec exemptions.
        /// </summary>
        internal static string EXEMPT_NONE {
            get {
                return ResourceManager.GetString("EXEMPT_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exempt router discover.
        /// </summary>
        internal static string EXEMPT_ROUTER_DISC {
            get {
                return ResourceManager.GetString("EXEMPT_ROUTER_DISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exploit Protection.
        /// </summary>
        internal static string ExploitProtection {
            get {
                return ResourceManager.GetString("ExploitProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exploit Protection Settings.
        /// </summary>
        internal static string ExploitProtectionSettings {
            get {
                return ResourceManager.GetString("ExploitProtectionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the IT admin to push out a configuration representing the desired system and application mitigation options to all the devices in the organization. The system settings require a reboot; the application settings do not require a reboot..
        /// </summary>
        internal static string ExploitProtectionSettingsTooltip {
            get {
                return ResourceManager.GetString("ExploitProtectionSettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single sign on Extension.
        /// </summary>
        internal static string ExtensibleSso {
            get {
                return ResourceManager.GetString("ExtensibleSso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dictionary of arbitrary data passed through to the app extension..
        /// </summary>
        internal static string ExtensionCustomDataDescription {
            get {
                return ResourceManager.GetString("ExtensionCustomDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosts.
        /// </summary>
        internal static string ExtensionHosts {
            get {
                return ResourceManager.GetString("ExtensionHosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host names or domain names which can be authenticated through the app extension..
        /// </summary>
        internal static string ExtensionHostsDescription {
            get {
                return ResourceManager.GetString("ExtensionHostsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension Identifier.
        /// </summary>
        internal static string ExtensionIdentifier {
            get {
                return ResourceManager.GetString("ExtensionIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The realm name for credential type extension payload..
        /// </summary>
        internal static string ExtensionRealmInfo {
            get {
                return ResourceManager.GetString("ExtensionRealmInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extensions.
        /// </summary>
        internal static string Extensions {
            get {
                return ResourceManager.GetString("Extensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension Type.
        /// </summary>
        internal static string ExtensionType {
            get {
                return ResourceManager.GetString("ExtensionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URLs.
        /// </summary>
        internal static string ExtensionUrls {
            get {
                return ResourceManager.GetString("ExtensionUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL prefixes of identity providers where the app extension performs SSO..
        /// </summary>
        internal static string ExtensionUrlsDescription {
            get {
                return ResourceManager.GetString("ExtensionUrlsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter one or more factory reset protection admin Id..
        /// </summary>
        internal static string FactoryResetProtectionAdminIdError {
            get {
                return ResourceManager.GetString("FactoryResetProtectionAdminIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail CRL verification fails if any error is encountered.
        /// </summary>
        internal static string FailCRLVerificationOnError {
            get {
                return ResourceManager.GetString("FailCRLVerificationOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail CRL verification only if the certificate is revoked.
        /// </summary>
        internal static string FailCRLVerificationOnlyIfTheCertificateisRevoked {
            get {
                return ResourceManager.GetString("FailCRLVerificationOnlyIfTheCertificateisRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to factory provisioning service from API server..
        /// </summary>
        internal static string FailedToConnectFactoryProvisioningError {
            get {
                return ResourceManager.GetString("FailedToConnectFactoryProvisioningError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Updates.
        /// </summary>
        internal static string FeatureUpdates {
            get {
                return ResourceManager.GetString("FeatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilePathExclusionsHelp.
        /// </summary>
        internal static string FilePathExclusionsHelp {
            get {
                return ResourceManager.GetString("FilePathExclusionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Provider Presence.
        /// </summary>
        internal static string FileProviderPresence {
            get {
                return ResourceManager.GetString("FileProviderPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to access documents and directories stored and managed by another app’s File Provider extension..
        /// </summary>
        internal static string FileProviderPresenceInfo {
            get {
                return ResourceManager.GetString("FileProviderPresenceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File shares.
        /// </summary>
        internal static string FileShares {
            get {
                return ResourceManager.GetString("FileShares", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileVault User.
        /// </summary>
        internal static string FileVaultUser {
            get {
                return ResourceManager.GetString("FileVaultUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Current or Next Login User to enable FileVault for a user that is logged in while the profile is being installed. If a user is not logged in at that time, the next user to log in will be granted permission. Applies only to local or mobile users, but not network users. Select Specific User to grant permission only to a single user. Username must be provided..
        /// </summary>
        internal static string FileVaultUserHelpInfo {
            get {
                return ResourceManager.GetString("FileVaultUserHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        internal static string FileVaultUsername {
            get {
                return ResourceManager.GetString("FileVaultUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find Payload.
        /// </summary>
        internal static string FindPayload {
            get {
                return ResourceManager.GetString("FindPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall.
        /// </summary>
        internal static string Firewall {
            get {
                return ResourceManager.GetString("Firewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn Firewall on. If this value is false, the server MUST NOT block any network traffic, regardless of other policy settings.
        /// </summary>
        internal static string FirewallHelp {
            get {
                return ResourceManager.GetString("FirewallHelp", resourceCulture);
            }
        }
		
		/// <summary>
        ///   Looks up a localized string similar to Firewall (Legacy).
        /// </summary>
        internal static string FirewallLegacy {
            get {
                return ResourceManager.GetString("FirewallLegacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall Rules.
        /// </summary>
        internal static string FirewallRules {
            get {
                return ResourceManager.GetString("FirewallRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FirewallV2.
        /// </summary>
        internal static string FirewallV2 {
            get {
                return ResourceManager.GetString("FirewallV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firewall (Legacy).
        /// </summary>
        internal static string FirewallWin8 {
            get {
                return ResourceManager.GetString("FirewallWin8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Active Ethernet.
        /// </summary>
        internal static string FirstActiveEthernet {
            get {
                return ResourceManager.GetString("FirstActiveEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Ethernet.
        /// </summary>
        internal static string FirstEthernet {
            get {
                return ResourceManager.GetString("FirstEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User First Name.
        /// </summary>
        internal static string FirstNameLookUpText {
            get {
                return ResourceManager.GetString("FirstNameLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folders Count.
        /// </summary>
        internal static string FoldersCount {
            get {
                return ResourceManager.GetString("FoldersCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force authentication before autofilling passwords.
        /// </summary>
        internal static string ForceAuthenticationBeforeAutoFill {
            get {
                return ResourceManager.GetString("ForceAuthenticationBeforeAutoFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting forces users to authenticate before autofilling passwords and credit card information..
        /// </summary>
        internal static string ForceAuthenticationBeforeAutoFillTooltip {
            get {
                return ResourceManager.GetString("ForceAuthenticationBeforeAutoFillTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Date &amp; Time to be Set Automatically.
        /// </summary>
        internal static string ForceAutomaticDateAndTime {
            get {
                return ResourceManager.GetString("ForceAutomaticDateAndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting prevents users from toggling off the &quot;Set Automatically&quot; feature of the Date &amp; Time of an iOS device..
        /// </summary>
        internal static string ForceAutomaticDateAndTimeTooltip {
            get {
                return ResourceManager.GetString("ForceAutomaticDateAndTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force a fullscreen size of Start.
        /// </summary>
        internal static string ForceFullscreen {
            get {
                return ResourceManager.GetString("ForceFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Logout.
        /// </summary>
        internal static string ForceLogout {
            get {
                return ResourceManager.GetString("ForceLogout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force non-fullscreen size of Start.
        /// </summary>
        internal static string ForceNonFullscreen {
            get {
                return ResourceManager.GetString("ForceNonFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee will be required to set or update device passcode to meet the minimum passcode requirements when enabled..
        /// </summary>
        internal static string ForcePinToolTip {
            get {
                return ResourceManager.GetString("ForcePinToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Start Size.
        /// </summary>
        internal static string ForceStartSize {
            get {
                return ResourceManager.GetString("ForceStartSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces the start screen size if configured..
        /// </summary>
        internal static string ForceStartSizeToolTip {
            get {
                return ResourceManager.GetString("ForceStartSizeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force on Wi-Fi.
        /// </summary>
        internal static string ForceWiFiPowerOn {
            get {
                return ResourceManager.GetString("ForceWiFiPowerOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, users cannot toggle Wi-Fi from being turned off in Settings or Control Center, even by entering or leaving Airplane Mode. It does not prevent selecting which Wi-Fi network to use..
        /// </summary>
        internal static string ForceWiFiPowerOnToolTip {
            get {
                return ResourceManager.GetString("ForceWiFiPowerOnToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Freeze period should not be greater than 90 days.
        /// </summary>
        internal static string FreezePeriodGreaterThan90Days {
            get {
                return ResourceManager.GetString("FreezePeriodGreaterThan90Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Freeze periods should not overlap.
        /// </summary>
        internal static string FreezePeriodOverlapMessage {
            get {
                return ResourceManager.GetString("FreezePeriodOverlapMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select both Start date and End date.
        /// </summary>
        internal static string FreezePeriodRequiredMessage {
            get {
                return ResourceManager.GetString("FreezePeriodRequiredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Freeze Periods.
        /// </summary>
        internal static string FreezePeriods {
            get {
                return ResourceManager.GetString("FreezePeriods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a Freeze period of 90 days or less. Adjacent freeze periods need to be at least 60 days apart..
        /// </summary>
        internal static string FreezePeriodValidationErrorMessage {
            get {
                return ResourceManager.GetString("FreezePeriodValidationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Freeze periods should not be within 60 days of each other.
        /// </summary>
        internal static string FreezePeriodWithin60DaysMessage {
            get {
                return ResourceManager.GetString("FreezePeriodWithin60DaysMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Scan.
        /// </summary>
        internal static string FullScan {
            get {
                return ResourceManager.GetString("FullScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully Qualified Resource Name.
        /// </summary>
        internal static string FullyQualifiedResourceName {
            get {
                return ResourceManager.GetString("FullyQualifiedResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflows that include this profile, use the assignment and deployment settings defined in that workflow..
        /// </summary>
        internal static string GeneralPayloadWorkflowInfoMessage {
            get {
                return ResourceManager.GetString("GeneralPayloadWorkflowInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GIF.
        /// </summary>
        internal static string GIF {
            get {
                return ResourceManager.GetString("GIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Actions.
        /// </summary>
        internal static string GlobalActions {
            get {
                return ResourceManager.GetString("GlobalActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Port Firewall Rules.
        /// </summary>
        internal static string GlobalPortFirewallRules {
            get {
                return ResourceManager.GetString("GlobalPortFirewallRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this value is false, global port firewall rules in the local store are ignored and not enforced..
        /// </summary>
        internal static string GlobalPortFirewallRulesHelp {
            get {
                return ResourceManager.GetString("GlobalPortFirewallRulesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google People: get.
        /// </summary>
        internal static string GooglePeopleGet {
            get {
                return ResourceManager.GetString("GooglePeopleGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google userIDs.
        /// </summary>
        internal static string GoogleUserIDs {
            get {
                return ResourceManager.GetString("GoogleUserIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grant permission.
        /// </summary>
        internal static string GrantPermission {
            get {
                return ResourceManager.GetString("GrantPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group External ID.
        /// </summary>
        internal static string GroupExternalID {
            get {
                return ResourceManager.GetString("GroupExternalID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GroupId Source.
        /// </summary>
        internal static string GroupIdSource {
            get {
                return ResourceManager.GetString("GroupIdSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict peer selection to a specific source..
        /// </summary>
        internal static string GroupIdSourceToolTip {
            get {
                return ResourceManager.GetString("GroupIdSourceToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group Title.
        /// </summary>
        internal static string GroupTitle {
            get {
                return ResourceManager.GetString("GroupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hard.
        /// </summary>
        internal static string Hard {
            get {
                return ResourceManager.GetString("Hard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide.
        /// </summary>
        internal static string Hide {
            get {
                return ResourceManager.GetString("Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide all apps list.
        /// </summary>
        internal static string HideAllAppsList {
            get {
                return ResourceManager.GetString("HideAllAppsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App List.
        /// </summary>
        internal static string HideAppList {
            get {
                return ResourceManager.GetString("HideAppList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1709. This setting requires a device restart..
        /// </summary>
        internal static string HideAppListToolTip {
            get {
                return ResourceManager.GetString("HideAppListToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Account Settings.
        /// </summary>
        internal static string HideChangeAccountSettings {
            get {
                return ResourceManager.GetString("HideChangeAccountSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the option in the Start menu..
        /// </summary>
        internal static string HideChangeAccountSettingsToolTip {
            get {
                return ResourceManager.GetString("HideChangeAccountSettingsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frequently Used Apps.
        /// </summary>
        internal static string HideFrequentlyUsedApps {
            get {
                return ResourceManager.GetString("HideFrequentlyUsedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the most used apps in the Start menu. This setting requires a device restart..
        /// </summary>
        internal static string HideFrequentlyUsedAppsToolTip {
            get {
                return ResourceManager.GetString("HideFrequentlyUsedAppsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hibernate.
        /// </summary>
        internal static string HideHibernate {
            get {
                return ResourceManager.GetString("HideHibernate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Hibernate option in the Start menu..
        /// </summary>
        internal static string HideHibernateToolTip {
            get {
                return ResourceManager.GetString("HideHibernateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock.
        /// </summary>
        internal static string HideLock {
            get {
                return ResourceManager.GetString("HideLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Lock option in the Start menu..
        /// </summary>
        internal static string HideLockToolTip {
            get {
                return ResourceManager.GetString("HideLockToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to People Bar.
        /// </summary>
        internal static string HidePeopleBar {
            get {
                return ResourceManager.GetString("HidePeopleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1709. Controls the visibility of the People option in the taskbar and prevents pinning to taskbar or toggling of People settings..
        /// </summary>
        internal static string HidePeopleBarToolTip {
            get {
                return ResourceManager.GetString("HidePeopleBarToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power Button.
        /// </summary>
        internal static string HidePowerButton {
            get {
                return ResourceManager.GetString("HidePowerButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Power button in the Start menu. This setting requires a device restart..
        /// </summary>
        internal static string HidePowerButtonToolTip {
            get {
                return ResourceManager.GetString("HidePowerButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Jumplists.
        /// </summary>
        internal static string HideRecentJumplists {
            get {
                return ResourceManager.GetString("HideRecentJumplists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of recently opened items in the Start menu. This setting requires a device restart..
        /// </summary>
        internal static string HideRecentJumplistsToolTip {
            get {
                return ResourceManager.GetString("HideRecentJumplistsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recently Added Apps.
        /// </summary>
        internal static string HideRecentlyAddedApps {
            get {
                return ResourceManager.GetString("HideRecentlyAddedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of recently added apps in the Start menu. This setting requires a device restart..
        /// </summary>
        internal static string HideRecentlyAddedAppsToolTip {
            get {
                return ResourceManager.GetString("HideRecentlyAddedAppsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        internal static string HideRestart {
            get {
                return ResourceManager.GetString("HideRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the &quot;Restart&quot; and &quot;Update and Restart&quot; options..
        /// </summary>
        internal static string HideRestartToolTip {
            get {
                return ResourceManager.GetString("HideRestartToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shut Down.
        /// </summary>
        internal static string HideShutDown {
            get {
                return ResourceManager.GetString("HideShutDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Shut Down option..
        /// </summary>
        internal static string HideShutDownToolTip {
            get {
                return ResourceManager.GetString("HideShutDownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign Out.
        /// </summary>
        internal static string HideSignOut {
            get {
                return ResourceManager.GetString("HideSignOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Sign Out option in the Start menu..
        /// </summary>
        internal static string HideSignOutToolTip {
            get {
                return ResourceManager.GetString("HideSignOutToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sleep.
        /// </summary>
        internal static string HideSleep {
            get {
                return ResourceManager.GetString("HideSleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Sleep option..
        /// </summary>
        internal static string HideSleepToolTip {
            get {
                return ResourceManager.GetString("HideSleepToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Account.
        /// </summary>
        internal static string HideSwitchAccount {
            get {
                return ResourceManager.GetString("HideSwitchAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the Switch Account option in the Start menu..
        /// </summary>
        internal static string HideSwitchAccountToolTip {
            get {
                return ResourceManager.GetString("HideSwitchAccountToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Tile.
        /// </summary>
        internal static string HideUserTile {
            get {
                return ResourceManager.GetString("HideUserTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Controls the visibility of the User option in the Start menu. This setting requires a device restart..
        /// </summary>
        internal static string HideUserTileToolTip {
            get {
                return ResourceManager.GetString("HideUserTileToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High blocking level - aggressively block unknowns while optimizing client performance (greater chance of false positives).
        /// </summary>
        internal static string HighBlockingLevel {
            get {
                return ResourceManager.GetString("HighBlockingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High+ blocking level – aggressively block unknowns and apply additional protection measures (may impact client performance).
        /// </summary>
        internal static string HighPlusBlockingLevel {
            get {
                return ResourceManager.GetString("HighPlusBlockingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ICCID is required.
        /// </summary>
        internal static string ICCIDIsRequired {
            get {
                return ResourceManager.GetString("ICCIDIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ICCIDs.
        /// </summary>
        internal static string ICCIDs {
            get {
                return ResourceManager.GetString("ICCIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application bundles should be identified by bundle ID. Non-bundled binaries must be identified by installation path. Helper tools embedded within an application bundle will automatically inherit the permissions of their enclosing app bundle..
        /// </summary>
        internal static string IdentifierTypePrivacyHelpInfo {
            get {
                return ResourceManager.GetString("IdentifierTypePrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Preference.
        /// </summary>
        internal static string IdentityPreference {
            get {
                return ResourceManager.GetString("IdentityPreference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Preference Names.
        /// </summary>
        internal static string IdentityPreferenceNames {
            get {
                return ResourceManager.GetString("IdentityPreferenceNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity Privacy.
        /// </summary>
        internal static string IdentityPrivacy {
            get {
                return ResourceManager.GetString("IdentityPrivacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore.
        /// </summary>
        internal static string Ignore {
            get {
                return ResourceManager.GetString("Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether to ignore the Mobile Operator download limit over a cellular network for apps and their updates..
        /// </summary>
        internal static string IgnoreMOAppDownloadLimitToolTip {
            get {
                return ResourceManager.GetString("IgnoreMOAppDownloadLimitToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1703. Specifies whether to ignore the Mobile Operator download limit over a cellular network for OS updates.
        /// </summary>
        internal static string IgnoreMOUpdateDownloadLimitToolTip {
            get {
                return ResourceManager.GetString("IgnoreMOUpdateDownloadLimitToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Details.
        /// </summary>
        internal static string ImageDetails {
            get {
                return ResourceManager.GetString("ImageDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Element Description.
        /// </summary>
        internal static string ImageElementDescription {
            get {
                return ResourceManager.GetString("ImageElementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Position.
        /// </summary>
        internal static string ImagePosition {
            get {
                return ResourceManager.GetString("ImagePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images.
        /// </summary>
        internal static string Images {
            get {
                return ResourceManager.GetString("Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image size.
        /// </summary>
        internal static string Imagesize {
            get {
                return ResourceManager.GetString("Imagesize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iMessage and FaceTime.
        /// </summary>
        internal static string iMessageAndFaceTime {
            get {
                return ResourceManager.GetString("iMessageAndFaceTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Edge Assets.
        /// </summary>
        internal static string ImportEdgeAssets {
            get {
                return ResourceManager.GetString("ImportEdgeAssets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Imports Edge assets for Edge secondary tiles. This setting requires a device restart..
        /// </summary>
        internal static string ImportEdgeAssetsToolTip {
            get {
                return ResourceManager.GetString("ImportEdgeAssetsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inbound encrypted packets are to be queued.
        /// </summary>
        internal static string InboundEncryptedPacketsQueued {
            get {
                return ResourceManager.GetString("InboundEncryptedPacketsQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include All Networks.
        /// </summary>
        internal static string IncludeAllNetworks {
            get {
                return ResourceManager.GetString("IncludeAllNetworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If checked, routes all traffic through the VPN.
        /// </summary>
        internal static string IncludeAllNetworksInfo {
            get {
                return ResourceManager.GetString("IncludeAllNetworksInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Migrating Legacy Android administration to work profiles provides you with more control, consistency and better security across all OEM devices. Create a new Android profile now. {0}.
        /// </summary>
        internal static string InfoBoxOnAndroidLegacyProfilesMsg {
            get {
                return ResourceManager.GetString("InfoBoxOnAndroidLegacyProfilesMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial device passcode.
        /// </summary>
        internal static string InitialDevicePasscode {
            get {
                return ResourceManager.GetString("InitialDevicePasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inner Authentication Method.
        /// </summary>
        internal static string InnerAuthenticationMethod {
            get {
                return ResourceManager.GetString("InnerAuthenticationMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1709. Specifies whether to allow access to Windows 10 Insider Preview builds.
        /// </summary>
        internal static string InsiderBuildsToolTip {
            get {
                return ResourceManager.GetString("InsiderBuildsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Only Area.
        /// </summary>
        internal static string InstallOnlyArea {
            get {
                return ResourceManager.GetString("InstallOnlyArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Settings - Install setting is a required field.
        /// </summary>
        internal static string InstallSettingIsRequired {
            get {
                return ResourceManager.GetString("InstallSettingIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Settings.
        /// </summary>
        internal static string InstallSettings {
            get {
                return ResourceManager.GetString("InstallSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether Automatic Updates accepts updates signed by entities other than Microsoft.
        /// </summary>
        internal static string InstallSignedUpdatesFromThirdPartyEntitiesToolTip {
            get {
                return ResourceManager.GetString("InstallSignedUpdatesFromThirdPartyEntitiesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install User Profile Failed.
        /// </summary>
        internal static string InstallUserProfileFailed {
            get {
                return ResourceManager.GetString("InstallUserProfileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Institutional.
        /// </summary>
        internal static string Institutional {
            get {
                return ResourceManager.GetString("Institutional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Level Type.
        /// </summary>
        internal static string InterfaceLevelType {
            get {
                return ResourceManager.GetString("InterfaceLevelType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface Types.
        /// </summary>
        internal static string InterfaceTypes {
            get {
                return ResourceManager.GetString("InterfaceTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of interface types. Examples RemoteAccess,Wireless,Lan,MobileBroadband.
        /// </summary>
        internal static string InterfaceTypesHelp {
            get {
                return ResourceManager.GetString("InterfaceTypesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal definition update server.
        /// </summary>
        internal static string InternalDefinitionUpdateServer {
            get {
                return ResourceManager.GetString("InternalDefinitionUpdateServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intrusion Prevention System.
        /// </summary>
        internal static string IntrusionPreventionSystem {
            get {
                return ResourceManager.GetString("IntrusionPreventionSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml root element invalid..
        /// </summary>
        internal static string INVALID_ROOT_ELEMENT {
            get {
                return ResourceManager.GetString("INVALID_ROOT_ELEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start layout xml invalid..
        /// </summary>
        internal static string INVALID_STARTLAYOUT_XML {
            get {
                return ResourceManager.GetString("INVALID_STARTLAYOUT_XML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid associated domain defined..
        /// </summary>
        internal static string InvalidAssociatedDomainDefined {
            get {
                return ResourceManager.GetString("InvalidAssociatedDomainDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character in input..
        /// </summary>
        internal static string InvalidCharacterInInput {
            get {
                return ResourceManager.GetString("InvalidCharacterInInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Custom Configuration XML: {0} .
        /// </summary>
        internal static string InvalidCustomConfigurationXml {
            get {
                return ResourceManager.GetString("InvalidCustomConfigurationXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry interval between dismissals should be between 1 and 168.
        /// </summary>
        internal static string InvalidEncryptionNotificationRetryInterval {
            get {
                return ResourceManager.GetString("InvalidEncryptionNotificationRetryInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter valid IP address(es). Use commas to seperate addresses and address ranges. Use dashes in between addresses to represent ranges.
        /// </summary>
        internal static string InvalidIPAddressRange {
            get {
                return ResourceManager.GetString("InvalidIPAddressRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the maximum length of a numeric sequence.
        /// </summary>
        internal static string InvalidPasswordForMaxNumericSequences {
            get {
                return ResourceManager.GetString("InvalidPasswordForMaxNumericSequences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the number of repeating characters.
        /// </summary>
        internal static string InvalidPasswordForMaxRepeatingCharacters {
            get {
                return ResourceManager.GetString("InvalidPasswordForMaxRepeatingCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of letters.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfLetters {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of lowercase letters.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfLowerCaseLetters {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfLowerCaseLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of non-letter characters.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfNonLetters {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfNonLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of numerical digits.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfNumericalDigits {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfNumericalDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of symbols.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfSymbols {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum number of uppercase letters.
        /// </summary>
        internal static string InvalidPasswordForMinNumberOfUpperCaseLetters {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinNumberOfUpperCaseLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This predefined passcode does not meet the current requirements for the minimum passcode length.
        /// </summary>
        internal static string InvalidPasswordForMinPasscodeLength {
            get {
                return ResourceManager.GetString("InvalidPasswordForMinPasscodeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter valid port numbers (0 - 65535). Use commas to seperate port and port ranges. Use dashes between port numbers to represent ranges.
        /// </summary>
        internal static string InvalidPortRange {
            get {
                return ResourceManager.GetString("InvalidPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum failures before error should be between 1 and 5.
        /// </summary>
        internal static string InvalidRecoveryKeyMaxFailureCount {
            get {
                return ResourceManager.GetString("InvalidRecoveryKeyMaxFailureCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry interval between dismissals should be between 1 and 168.
        /// </summary>
        internal static string InvalidRecoveryKeyNotificationRetryInterval {
            get {
                return ResourceManager.GetString("InvalidRecoveryKeyNotificationRetryInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the profile due to invalid smart group assigned.
        /// </summary>
        internal static string InvalidSmartGroupAssigned {
            get {
                return ResourceManager.GetString("InvalidSmartGroupAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All input URLs must begin with http:// or https://.
        /// </summary>
        internal static string InvalidUrlPattern {
            get {
                return ResourceManager.GetString("InvalidUrlPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS {0} and below only.
        /// </summary>
        internal static string IosArgBelowOnly {
            get {
                return ResourceManager.GetString("IosArgBelowOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS {0} and macOS {1} only.
        /// </summary>
        internal static string IosArgMacOsArgOnly {
            get {
                return ResourceManager.GetString("IosArgMacOsArgOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS {0}, iOS {1} + Supervised.
        /// </summary>
        internal static string IosArgSupervisedAfter {
            get {
                return ResourceManager.GetString("IosArgSupervisedAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download and install &quot;{0}&quot; profile to ensure your device is secure..
        /// </summary>
        internal static string IosDownloadProfileMessage {
            get {
                return ResourceManager.GetString("IosDownloadProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS only.
        /// </summary>
        internal static string IosOnly {
            get {
                return ResourceManager.GetString("IosOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile download in progress.
        /// </summary>
        internal static string IosProfileDownloadInProgressMessage {
            get {
                return ResourceManager.GetString("IosProfileDownloadInProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install &quot;{0}&quot; profile..
        /// </summary>
        internal static string IosProfileInstallInstallProfileMessage {
            get {
                return ResourceManager.GetString("IosProfileInstallInstallProfileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open &quot;Settings&quot; and tap &quot;Install Downloaded Profile.&quot;.
        /// </summary>
        internal static string IosProfileInstallOpenSettingsMessage {
            get {
                return ResourceManager.GetString("IosProfileInstallOpenSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just a few more steps to enable {0} on your device..
        /// </summary>
        internal static string IosProfileInstallStepsMessage {
            get {
                return ResourceManager.GetString("IosProfileInstallStepsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust &quot;Remote Management.&quot;.
        /// </summary>
        internal static string IosProfileInstallTrustRemoteManagementMessage {
            get {
                return ResourceManager.GetString("IosProfileInstallTrustRemoteManagementMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iOS {0} - {1}.
        /// </summary>
        internal static string IosSupportedVersionArg {
            get {
                return ResourceManager.GetString("IosSupportedVersionArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are enrolling an iPad, please tap on continue..
        /// </summary>
        internal static string IpadProfileInstallationContinueToInstructions {
            get {
                return ResourceManager.GetString("IpadProfileInstallationContinueToInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP range data format exception.
        /// </summary>
        internal static string IpRangeDataFormatException {
            get {
                return ResourceManager.GetString("IpRangeDataFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPsec Exemptions.
        /// </summary>
        internal static string IPsecExempt {
            get {
                return ResourceManager.GetString("IPsecExempt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures IPsec exemptions.
        /// </summary>
        internal static string IPsecExemptHelp {
            get {
                return ResourceManager.GetString("IPsecExemptHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Device Traffic Rules.
        /// </summary>
        internal static string IsAppMappingFromDTREnabled {
            get {
                return ResourceManager.GetString("IsAppMappingFromDTREnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If false, passwords are not allowed to be saved to the keychain..
        /// </summary>
        internal static string KerberosAllowAutomaticLoginDescription {
            get {
                return ResourceManager.GetString("KerberosAllowAutomaticLoginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If false, disables password changes..
        /// </summary>
        internal static string KerberosAllowPasswordChangeDescription {
            get {
                return ResourceManager.GetString("KerberosAllowPasswordChangeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true, passwords must meet Active Directory&apos;s definition of &quot;complex&quot;..
        /// </summary>
        internal static string KerberosPwReqComplexityDescription {
            get {
                return ResourceManager.GetString("KerberosPwReqComplexityDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Kerberos realm, which should be properly capitalized. If in an Active Directory forest, this is the realm where the user logs in..
        /// </summary>
        internal static string KerberosRealmDescription {
            get {
                return ResourceManager.GetString("KerberosRealmDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true, requires the user to provide Touch ID, Face ID or their passcode to access the keychain entry..
        /// </summary>
        internal static string KerberosRequireUserPresenceDescription {
            get {
                return ResourceManager.GetString("KerberosRequireUserPresenceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If false, disables password sync. Note that this will not work if the user is logged in with a mobile account..
        /// </summary>
        internal static string KerberosSyncLocalPasswordDescription {
            get {
                return ResourceManager.GetString("KerberosSyncLocalPasswordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If false, the Kerberos extension doesn&apos;t automatically use LDAP and DNS to determine its AD site name..
        /// </summary>
        internal static string KerberosUseSiteAutoDiscoveryDescription {
            get {
                return ResourceManager.GetString("KerberosUseSiteAutoDiscoveryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wifi - Passcode is a required field.
        /// </summary>
        internal static string KeyMaterialIsRequired {
            get {
                return ResourceManager.GetString("KeyMaterialIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wifi - Passcode should be of 255 characters long.
        /// </summary>
        internal static string KeyMaterialLengthshouldBe255Characters {
            get {
                return ResourceManager.GetString("KeyMaterialLengthshouldBe255Characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Application.
        /// </summary>
        internal static string KioskEditApplication {
            get {
                return ResourceManager.GetString("KioskEditApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Executable Path.
        /// </summary>
        internal static string KioskExePath {
            get {
                return ResourceManager.GetString("KioskExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify at least one assignment group in the General section in order to proceed..
        /// </summary>
        internal static string KioskSmartGroupError {
            get {
                return ResourceManager.GetString("KioskSmartGroupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Menu Screens.
        /// </summary>
        internal static string KioskStartMenuScreens {
            get {
                return ResourceManager.GetString("KioskStartMenuScreens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Freestyle Orchestrator workflows to assign the kiosk payloads and apps in a single workflow..
        /// </summary>
        internal static string KioskWorkflowInfoMessage {
            get {
                return ResourceManager.GetString("KioskWorkflowInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Last Name.
        /// </summary>
        internal static string LastNameLookUpText {
            get {
                return ResourceManager.GetString("LastNameLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launcher Layout.
        /// </summary>
        internal static string LauncherLayout {
            get {
                return ResourceManager.GetString("LauncherLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launcher Mode.
        /// </summary>
        internal static string LauncherMode {
            get {
                return ResourceManager.GetString("LauncherMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this to specify applications that are allowed or not allowed to run..
        /// </summary>
        internal static string LaunchRestrictionInfo {
            get {
                return ResourceManager.GetString("LaunchRestrictionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether members with the same group ID should leverage peer to peer updates.
        /// </summary>
        internal static string LimitPeerUsaageToMembersWithTheSameGroupIdToolTip {
            get {
                return ResourceManager.GetString("LimitPeerUsaageToMembersWithTheSameGroupIdToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit Peer Usage to Members with the Same Group ID.
        /// </summary>
        internal static string LimitPeerUsageToMembersWithSameGroupId {
            get {
                return ResourceManager.GetString("LimitPeerUsageToMembersWithSameGroupId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listen Event.
        /// </summary>
        internal static string ListenEvent {
            get {
                return ResourceManager.GetString("ListenEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to monitor events from input devices (mouse, keyboard, and trackpad)..
        /// </summary>
        internal static string ListenEventInfo {
            get {
                return ResourceManager.GetString("ListenEventInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the local addresses covered by the rule..
        /// </summary>
        internal static string LocalAddressRangesHelp {
            get {
                return ResourceManager.GetString("LocalAddressRangesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Connection Rules.
        /// </summary>
        internal static string LocalConnectionRules {
            get {
                return ResourceManager.GetString("LocalConnectionRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this value is false, connection security rules from the local store are ignored and not enforced, regardless of the schema version and connection security rule version.
        /// </summary>
        internal static string LocalConnectionRulesHelp {
            get {
                return ResourceManager.GetString("LocalConnectionRulesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Firewall Rules.
        /// </summary>
        internal static string LocalFirewallRules {
            get {
                return ResourceManager.GetString("LocalFirewallRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this value is false, firewall rules from the local store are ignored and not enforced..
        /// </summary>
        internal static string LocalFirewallRulesHelp {
            get {
                return ResourceManager.GetString("LocalFirewallRulesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Port Ranges.
        /// </summary>
        internal static string LocalPortRanges {
            get {
                return ResourceManager.GetString("LocalPortRanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of ranges. For example, 100-120,200,300-320..
        /// </summary>
        internal static string LocalPortRangesHelp {
            get {
                return ResourceManager.GetString("LocalPortRangesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Screen Image.
        /// </summary>
        internal static string LockScreenImageUrl {
            get {
                return ResourceManager.GetString("LockScreenImageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set a lockscreen message.
        /// </summary>
        internal static string LockScreenMessageEnabled {
            get {
                return ResourceManager.GetString("LockScreenMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message is displayed on the device screen when locked. Useful for a lost or stolen device..
        /// </summary>
        internal static string LockScreenMessageToolTip {
            get {
                return ResourceManager.GetString("LockScreenMessageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Task Mode allows an app to pin itself to the foreground. Allow the apps you want to be pinned in Lock Task Mode. Apps must support Lock Task Mode as described at https://developer.android.com/work/cosu.html.
        /// </summary>
        internal static string LockTaskHelpText {
            get {
                return ResourceManager.GetString("LockTaskHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Task Mode.
        /// </summary>
        internal static string LockTaskMode {
            get {
                return ResourceManager.GetString("LockTaskMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login Only.
        /// </summary>
        internal static string LoginOnly {
            get {
                return ResourceManager.GetString("LoginOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logout Only.
        /// </summary>
        internal static string LogoutOnly {
            get {
                return ResourceManager.GetString("LogoutOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set a message for users to view in settings.
        /// </summary>
        internal static string LongSupportMessageEnabled {
            get {
                return ResourceManager.GetString("LongSupportMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user can view this message on their device under Settings &gt; Security &gt; Device.
        /// </summary>
        internal static string LongSupportMessageToolTip {
            get {
                return ResourceManager.GetString("LongSupportMessageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macao.
        /// </summary>
        internal static string Macao {
            get {
                return ResourceManager.GetString("Macao", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, the Smart Card will be disabled for logins, authorizations, and screensaver unlocking. It will still be allowed for other functions, such as signing emails and web access.
        ///Note - A restart is required for a change of setting to take effect..
        /// </summary>
        internal static string MacOsAllowSmartCardInfo {
            get {
                return ResourceManager.GetString("MacOsAllowSmartCardInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS and tvOS only.
        /// </summary>
        internal static string MacOsAndTvOSOnly {
            get {
                return ResourceManager.GetString("MacOsAndTvOSOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have multiple servers and/or emails that use different certificates, you can create a Certificate Preference to define the URL(s) or email(s) which should automatically use this certificate. Up to 15 services are permitted..
        /// </summary>
        internal static string MacOsCertificatePreferenceTooltip {
            get {
                return ResourceManager.GetString("MacOsCertificatePreferenceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum zoom can be a value between 0 to the maximum of what is set at Maximum zoom.
        /// </summary>
        internal static string MacOsCloseViewFarPointTooltip {
            get {
                return ResourceManager.GetString("MacOsCloseViewFarPointTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum zoom can be a value between what is set at Minimum zoom to 20.
        /// </summary>
        internal static string MacOsCloseViewNearPointTooltip {
            get {
                return ResourceManager.GetString("MacOsCloseViewNearPointTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub will display notifications to the end-user requesting a logout.
        /// </summary>
        internal static string MacOsDiskEncryptionHubEncryptionDescription {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionHubEncryptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub will prompt the managed users for their password to rotate the Recovery Key to escrow.
        /// </summary>
        internal static string MacOsDiskEncryptionHubRecoveryKeyDescription {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionHubRecoveryKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub Device Management.
        /// </summary>
        internal static string MacOsDiskEncryptionHubSection {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionHubSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Intelligent Hub to enforce employee compliance with the above Native Device Management settings..
        /// </summary>
        internal static string MacOsDiskEncryptionHubSectionDescription {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionHubSectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native Device Management.
        /// </summary>
        internal static string MacOsDiskEncryptionNativeMdmSection {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionNativeMdmSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure native FileVault 2 Disk Encryption settings..
        /// </summary>
        internal static string MacOsDiskEncryptionNativeMdmSectionDescription {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionNativeMdmSectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only be disabled for Intelligent Hub 19.04 and above. Intelligent Hub 4.0 and AirWatch Agent 3.1.1 and lower will always be enabled by default..
        /// </summary>
        internal static string MacOsDiskEncryptionUseIntelligentHubDescription {
            get {
                return ResourceManager.GetString("MacOsDiskEncryptionUseIntelligentHubDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, users will only be able to login or authenticate with a Smart Card..
        /// </summary>
        internal static string MacOsEnforceSmartCardInfo {
            get {
                return ResourceManager.GetString("MacOsEnforceSmartCardInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileVault 10.8 profile has been deprecated.
        /// </summary>
        internal static string MacOsFileVault108Deprecated {
            get {
                return ResourceManager.GetString("MacOsFileVault108Deprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of FileVault is no longer supported. For more information see KB: FileVault Encryption Management for OS X 10.8..
        /// </summary>
        internal static string MacOsFileVault108DeprecatedDescription {
            get {
                return ResourceManager.GetString("MacOsFileVault108DeprecatedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fusion payload is deprecated..
        /// </summary>
        internal static string MacOsFusionPayloadDeprecated {
            get {
                return ResourceManager.GetString("MacOsFusionPayloadDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information, see {0}..
        /// </summary>
        internal static string MacOsFusionPayloadDescription {
            get {
                return ResourceManager.GetString("MacOsFusionPayloadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you use multiple client identity certificates, you can create an Identity Preference to define the URL(s) which should automatically use this certificate, so that users do not have to manually select it each time they log in. Wildcards ( * ) can be used for DNS hostnames. Up to 15 services are permitted..
        /// </summary>
        internal static string MacOsIdentityPreferenceTooltip {
            get {
                return ResourceManager.GetString("MacOsIdentityPreferenceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create multiple network payloads with the same ethernet interface type.
        /// </summary>
        internal static string MacOsMultiplePayloadSameInterfaceError {
            get {
                return ResourceManager.GetString("MacOsMultiplePayloadSameInterfaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payloads with “active” in their name apply to Ethernet interfaces that are working at the time of profile installation. If there is no active Ethernet interface working, the First Active Ethernet payload will configure the interface with the highest service order priority.Payloads without “active” in the name apply to Ethernet interfaces according to service order regardless of whether the interface is working or not.
        /// </summary>
        internal static string MacOsNetworkInterfaceInfo {
            get {
                return ResourceManager.GetString("MacOsNetworkInterfaceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, a user can pair with only one Smart Card, although existing pairings will be allowed if already set up before this restriction is set..
        /// </summary>
        internal static string MacOsOneCardPerUserInfo {
            get {
                return ResourceManager.GetString("MacOsOneCardPerUserInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to macOS only.
        /// </summary>
        internal static string MacOsOnly {
            get {
                return ResourceManager.GetString("MacOsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For macOS devices, the application information will be transmitted to the Workspace ONE UEM after which the system will process the managed application information from the device and discard the personal applications information without saving it..
        /// </summary>
        internal static string MacOsPrivacyInfo {
            get {
                return ResourceManager.GetString("MacOsPrivacyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grant or deny access to an app or process that requests access to a protected privacy service..
        /// </summary>
        internal static string MacOsPrivacyPreferencesDescription {
            get {
                return ResourceManager.GetString("MacOsPrivacyPreferencesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls restrictions and settings for System Extensions loading on macOS 10.15 and later..
        /// </summary>
        internal static string MacOsSystemExtensionsDescription {
            get {
                return ResourceManager.GetString("MacOsSystemExtensionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If disabled, users will not see a pairing dialog to add new smart cards, although existing pairings will still work..
        /// </summary>
        internal static string MacOsUserPairingDialogInfo {
            get {
                return ResourceManager.GetString("MacOsUserPairingDialogInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mail Domains.
        /// </summary>
        internal static string MailDomains {
            get {
                return ResourceManager.GetString("MailDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Account And Allowed Accounts.
        /// </summary>
        internal static string ManagedAccountAndWhitelistedAccounts {
            get {
                  return ResourceManager.GetString("ManagedAccountAndWhitelistedAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the TPM Chip is disabled, the one-time BIOS password capability will also be disabled, and the BIOS password set from the Managed BIOS Profile will not rotate after use.  Do you want to continue?.
        /// </summary>
        internal static string ManagedSettingTpmChipWarning {
            get {
                return ResourceManager.GetString("ManagedSettingTpmChipWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable TPM Chip.
        /// </summary>
        internal static string ManagedSettingTpmChipWarningTitle {
            get {
                return ResourceManager.GetString("ManagedSettingTpmChipWarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match AD Password Complexity.
        /// </summary>
        internal static string MatchADPasswordComplexity {
            get {
                return ResourceManager.GetString("MatchADPasswordComplexity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Background Download Bandwidth.
        /// </summary>
        internal static string MaxBackgroundDownloadBandwidth {
            get {
                return ResourceManager.GetString("MaxBackgroundDownloadBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum background download bandwidth in KiloBytes/second that the device can use across all concurrent download activities using Delivery Optimization..
        /// </summary>
        internal static string MaxBackgroundDownloadBandwidthToolTip {
            get {
                return ResourceManager.GetString("MaxBackgroundDownloadBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is selected, employee will be given a number of failed attempts equal to the value selected when entering the passcode at the device&apos;s lock screen. After six failed attempts, a time delay is imposed before a passcode can be entered again. The delay increases with each attempt..
        /// </summary>
        internal static string MaxFailedAttemptsToolTip {
            get {
                return ResourceManager.GetString("MaxFailedAttemptsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Foreground Download Bandwidth.
        /// </summary>
        internal static string MaxForegroundDownloadBandwidth {
            get {
                return ResourceManager.GetString("MaxForegroundDownloadBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum foreground download bandwidth in KiloBytes/second that the device can use across all concurrent download activities using Delivery Optimization..
        /// </summary>
        internal static string MaxForegroundDownloadBandwidthToolTip {
            get {
                return ResourceManager.GetString("MaxForegroundDownloadBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is selected, employee will be allowed to unlock the device with entering in the passcode for the selected value in minutes. A value of 0 is equal no grace period and requires a passcode immediately for every unlock..
        /// </summary>
        internal static string MaxGracePeriodToolTip {
            get {
                return ResourceManager.GetString("MaxGracePeriodToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Max Height 480px.
        /// </summary>
        internal static string MaxHeight480px
        {
            get
            {
                return ResourceManager.GetString("MaxHeight480px", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Max Height 720px.
        /// </summary>
        internal static string MaxHeight720px {
            get {
                return ResourceManager.GetString("MaxHeight720px", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Download Bandwidth as a Percentage of Total Available (%).
        /// </summary>
        internal static string MaximumDownloadBandwidthAsAPercentageOfTotalAvailable {
            get {
                return ResourceManager.GetString("MaximumDownloadBandwidthAsAPercentageOfTotalAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum foreground download bandwidth that Delivery Optimization uses across all concurrent download activities as a percentage of available download bandwidth. The default value 0 (zero) means that Delivery Optimization dynamically adjusts to use the available bandwidth for foreground downloads. Note that downloads from LAN peers will not be throttled even when this policy is set..
        /// </summary>
        internal static string MaximumDownloadBandwidthAsAPercentageOfTotalAvailableToolTip {
            get {
                return ResourceManager.GetString("MaximumDownloadBandwidthAsAPercentageOfTotalAvailableToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Download Bandwidth that a Device Will Use (KB/second).
        /// </summary>
        internal static string MaximumDownloadBandwidthThatADeviceWillUse {
            get {
                return ResourceManager.GetString("MaximumDownloadBandwidthThatADeviceWillUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum download bandwidth in KiloBytes/second that the device can use across all concurrent download activities using Delivery Optimization. The default value 0 (zero) means that Delivery Optimization dynamically adjusts to use the available bandwidth for downloads..
        /// </summary>
        internal static string MaximumDownloadBandwidthThatADeviceWillUseToolTip {
            get {
                return ResourceManager.GetString("MaximumDownloadBandwidthThatADeviceWillUseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode -Number Passcode Entry Attempts Restarted should be in range 4 and 16.
        /// </summary>
        internal static string MaximumNumberOfFailedAttemptsShouldBeInRange4And16 {
            get {
                return ResourceManager.GetString("MaximumNumberOfFailedAttemptsShouldBeInRange4And16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is selected, the device can be idle, without being unlocked by employee, before it gets locked by the system. When this limit is reached, the device is locked and the passcode must be entered..
        /// </summary>
        internal static string MaxInactivityToolTip {
            get {
                return ResourceManager.GetString("MaxInactivityToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is set, employee will not be required to change the passcode for the set number of days. After this number of days, the user is forced to change the passcode before the device is unlocked..
        /// </summary>
        internal static string MaxPinAgeInDaysToolTip {
            get {
                return ResourceManager.GetString("MaxPinAgeInDaysToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Hello - Max Pin Length should be between 5 and 127.
        /// </summary>
        internal static string MaxPinLengthShouldBeBetween5And127 {
            get {
                return ResourceManager.GetString("MaxPinLengthShouldBeBetween5And127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Width 480px.
        /// </summary>
        internal static string MaxWidth480px {
            get {
                return ResourceManager.GetString("MaxWidth480px", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Max Width 720px.
        /// </summary>
        internal static string MaxWidth720px
        {
            get
            {
                return ResourceManager.GetString("MaxWidth720px", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Media Library.
        /// </summary>
        internal static string MediaLibrary {
            get {
                return ResourceManager.GetString("MediaLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User’s collections of images, audio, and video from various media sources, such as iTunes or Aperture..
        /// </summary>
        internal static string MediaLibraryInfo {
            get {
                return ResourceManager.GetString("MediaLibraryInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microphone.
        /// </summary>
        internal static string Microphone {
            get {
                return ResourceManager.GetString("Microphone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system microphone. Access to the microphone cannot be given in a profile; it can only be denied..
        /// </summary>
        internal static string MicrophonePrivacyHelpInfo {
            get {
                return ResourceManager.GetString("MicrophonePrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft documentation.
        /// </summary>
        internal static string MicrosoftDocumentationHelpText {
            get {
                return ResourceManager.GetString("MicrosoftDocumentationHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft update server.
        /// </summary>
        internal static string MicrosoftUpdateServer {
            get {
                return ResourceManager.GetString("MicrosoftUpdateServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is selected, employee will need to set a passcode that includes complex characters of the selected value or greater. A complex character is a character other than a number or a letter, such as &amp; % $ #..
        /// </summary>
        internal static string MinComplexCharsToolTip {
            get {
                return ResourceManager.GetString("MinComplexCharsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum allowed length of a Device Passcode..
        /// </summary>
        internal static string MinDevicePasscodeLengthToolTip {
            get {
                return ResourceManager.GetString("MinDevicePasscodeLengthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum allowed quality of a Device Passcode..
        /// </summary>
        internal static string MinDevicePasscodeQualityToolTip {
            get {
                return ResourceManager.GetString("MinDevicePasscodeQualityToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minutes field must be between 00 and 59..
        /// </summary>
        internal static string MinFieldShouldBeBetween0And59 {
            get {
                return ResourceManager.GetString("MinFieldShouldBeBetween0And59", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize Title Bar.
        /// </summary>
        internal static string MinimizeTitleBar {
            get {
                return ResourceManager.GetString("MinimizeTitleBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Battery Required for Peer Uploads (%).
        /// </summary>
        internal static string MinimumBatteryRequiredForPeerUploads {
            get {
                return ResourceManager.GetString("MinimumBatteryRequiredForPeerUploads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies any value between 1 and 100 (in percentage) to allow the device to upload data to LAN and Group peers while on battery power. Uploads will automatically pause when the battery level drops below the set minimum battery level..
        /// </summary>
        internal static string MinimumBatteryRequiredForPeerUploadsToolTip {
            get {
                return ResourceManager.GetString("MinimumBatteryRequiredForPeerUploadsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Content File Size that Can Use Peer Caching.
        /// </summary>
        internal static string MinimumContentFileSizeThatCanUsePeerCaching {
            get {
                return ResourceManager.GetString("MinimumContentFileSizeThatCanUsePeerCaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Content File Size That Can Use Peer Caching.
        /// </summary>
        internal static string MinimumContentFileSizeThatCanUsePeerCachingToolTip {
            get {
                return ResourceManager.GetString("MinimumContentFileSizeThatCanUsePeerCachingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Disk Size for Device to Use Peer Caching.
        /// </summary>
        internal static string MinimumDiskSizeForDeviceToUsePeerCaching {
            get {
                return ResourceManager.GetString("MinimumDiskSizeForDeviceToUsePeerCaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the required minimum disk size (capacity in GB) for the device to use Peer Caching..
        /// </summary>
        internal static string MinimumDiskSizeForDeviceToUsePeerCachingToolTip {
            get {
                return ResourceManager.GetString("MinimumDiskSizeForDeviceToUsePeerCachingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode - Minimum Password Age should be in range 0 and 998.
        /// </summary>
        internal static string MinimumPasswordAgeShouldBeInRange0And998 {
            get {
                return ResourceManager.GetString("MinimumPasswordAgeShouldBeInRange0And998", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum password length can only be integer.
        /// </summary>
        internal static string MinimumPasswordLengthCanOnlyBeInteger {
            get {
                return ResourceManager.GetString("MinimumPasswordLengthCanOnlyBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum amount of characters for a user’s password..
        /// </summary>
        internal static string MinimumPasswordLengthDescription {
            get {
                return ResourceManager.GetString("MinimumPasswordLengthDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Password Length (in characters).
        /// </summary>
        internal static string MinimumPasswordLengthInCharacters {
            get {
                return ResourceManager.GetString("MinimumPasswordLengthInCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode - Minimum Password Length should be in range 4 and 16.
        /// </summary>
        internal static string MinimumPasswordLengthShouldBeInRange4And16 {
            get {
                return ResourceManager.GetString("MinimumPasswordLengthShouldBeInRange4And16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum QoS for Background Downloads (KB/second).
        /// </summary>
        internal static string MinimumQosForBackgroundDownloads {
            get {
                return ResourceManager.GetString("MinimumQosForBackgroundDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the minimum download QoS (Quality of Service or speed) in KiloBytes/sec for background downloads. This policy affects the blending of peer and HTTP sources. Delivery Optimization complements the download from the HTTP source to achieve the minimum QoS value set. The default value is 500..
        /// </summary>
        internal static string MinimumQosForBackgroundDownloadsToolTip {
            get {
                return ResourceManager.GetString("MinimumQosForBackgroundDownloadsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum RAM for Device to Use Peer Caching.
        /// </summary>
        internal static string MinimumRAMForDeviceToUsePeerCaching {
            get {
                return ResourceManager.GetString("MinimumRAMForDeviceToUsePeerCaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the minimum RAM size in GB required to use peer caching..
        /// </summary>
        internal static string MinimumRAMForDeviceToUsePeerCachingToolTip {
            get {
                return ResourceManager.GetString("MinimumRAMForDeviceToUsePeerCachingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Passcode Length.
        /// </summary>
        internal static string MinLength {
            get {
                return ResourceManager.GetString("MinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Password Age must be less than Device Password Expiration.
        /// </summary>
        internal static string MinPasswordAgeMustBeLessThanDevicePasswordExpiration {
            get {
                return ResourceManager.GetString("MinPasswordAgeMustBeLessThanDevicePasswordExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Hello - Min Pin Length should be between 4 and 127.
        /// </summary>
        internal static string MinPinLengthShouldBeBetween4And127 {
            get {
                return ResourceManager.GetString("MinPinLengthShouldBeBetween4And127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save failed. Please upload the configuration XML.
        /// </summary>
        internal static string MISSING_CSP {
            get {
                return ResourceManager.GetString("MISSING_CSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save failed. Please click Configure to create your kiosk before  publishing.
        /// </summary>
        internal static string MISSING_DESIGN {
            get {
                return ResourceManager.GetString("MISSING_DESIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MMPC.
        /// </summary>
        internal static string MMPC {
            get {
                return ResourceManager.GetString("MMPC", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Modular SDK.
        /// </summary>
        internal static string ModularSdk
        {
            get
            {
                return ResourceManager.GetString("ModularSdk", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Monitor all files (bi-directional).
        /// </summary>
        internal static string MonitorAllFiles {
            get {
                return ResourceManager.GetString("MonitorAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor incoming files.
        /// </summary>
        internal static string MonitorIncomingFiles {
            get {
                return ResourceManager.GetString("MonitorIncomingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monitor outgoing files.
        /// </summary>
        internal static string MonitorOutgoingFiles {
            get {
                return ResourceManager.GetString("MonitorOutgoingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly Upload Data Cap (GB).
        /// </summary>
        internal static string MonthlyUploadDataCap {
            get {
                return ResourceManager.GetString("MonthlyUploadDataCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum total bytes in GB that Delivery Optimization is allowed to upload to Internet peers in each calendar month. The value 0 (zero) means &quot;unlimited&quot;. No monthly upload limit is applied if 0 is set. The default value is 20..
        /// </summary>
        internal static string MonthlyUploadDataCapToolTip {
            get {
                return ResourceManager.GetString("MonthlyUploadDataCapToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move To.
        /// </summary>
        internal static string MoveTo {
            get {
                return ResourceManager.GetString("MoveTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Myanmar.
        /// </summary>
        internal static string Myanmar {
            get {
                return ResourceManager.GetString("Myanmar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be blank.
        /// </summary>
        internal static string NameCannotBeBlank {
            get {
                return ResourceManager.GetString("NameCannotBeBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique alpha numeric identifier for the rule.
        /// </summary>
        internal static string NameHelp {
            get {
                return ResourceManager.GetString("NameHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name Your Profile.
        /// </summary>
        internal static string NameYourProfile {
            get {
                return ResourceManager.GetString("NameYourProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        internal static string NetworkExtension {
            get {
                return ResourceManager.GetString("NetworkExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Protection.
        /// </summary>
        internal static string NetworkProtection {
            get {
                return ResourceManager.GetString("NetworkProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This policy can be used to Enable (block/audit) or Disable Defender Network Protection. This feature protects users from phishing scams and malicious websites that can introduce malware onto devices..
        /// </summary>
        internal static string NetworkProtectionToolTip {
            get {
                return ResourceManager.GetString("NetworkProtectionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never auto update.
        /// </summary>
        internal static string NeverAutoUpdate {
            get {
                return ResourceManager.GetString("NeverAutoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never send.
        /// </summary>
        internal static string NeverSend {
            get {
                return ResourceManager.GetString("NeverSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Freeze Period.
        /// </summary>
        internal static string NewFreezePeriod {
            get {
                return ResourceManager.GetString("NewFreezePeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment of new profile failed..
        /// </summary>
        internal static string NewProfileAssignmentFailed {
            get {
                return ResourceManager.GetString("NewProfileAssignmentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Alert.
        /// </summary>
        internal static string NoAlert {
            get {
                return ResourceManager.GetString("NoAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Groups.
        /// </summary>
        internal static string NoOfGroups {
            get {
                return ResourceManager.GetString("NoOfGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Pinning To Taskbar.
        /// </summary>
        internal static string NoPinningToTaskbar {
            get {
                return ResourceManager.GetString("NoPinningToTaskbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in 1703. Allows the user to pin or unpin apps on the taskbar..
        /// </summary>
        internal static string NoPinningToTaskbarToolTip {
            get {
                return ResourceManager.GetString("NoPinningToTaskbarToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No scheduled scan.
        /// </summary>
        internal static string NoScheduledScan {
            get {
                return ResourceManager.GetString("NoScheduledScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not allowed across device (Android 10+).
        /// </summary>
        internal static string NotAllowedAcrossDevice {
            get {
                return ResourceManager.GetString("NotAllowedAcrossDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Configured.
        /// </summary>
        internal static string NotConfigured {
            get {
                return ResourceManager.GetString("NotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification message.
        /// </summary>
        internal static string NotificationMessage {
            get {
                return ResourceManager.GetString("NotificationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification title.
        /// </summary>
        internal static string NotificationTitle {
            get {
                return ResourceManager.GetString("NotificationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a notification to employees prompting them to logout allowing the operating system to prompt employees for their password to start encryption..
        /// </summary>
        internal static string NotifyUserForEncryptionHelpInfo {
            get {
                return ResourceManager.GetString("NotifyUserForEncryptionHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption disabled notification.
        /// </summary>
        internal static string NotifyUserIfEncryptionDisabled {
            get {
                return ResourceManager.GetString("NotifyUserIfEncryptionDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify User When Windows Firewall Blocks a New App.
        /// </summary>
        internal static string NotifyUserWhenWindowsFirewallBlocksANewApp {
            get {
                return ResourceManager.GetString("NotifyUserWhenWindowsFirewallBlocksANewApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bypass login(s).
        /// </summary>
        internal static string NumberOfTimesUserCanBypass {
            get {
                return ResourceManager.GetString("NumberOfTimesUserCanBypass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the number of times a user is allowed to bypass the FileVault prompt to login..
        /// </summary>
        internal static string NumberOfTimesUserCanBypassHelpInfo {
            get {
                return ResourceManager.GetString("NumberOfTimesUserCanBypassHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of passcode entry attempts before the device is restarted.
        /// </summary>
        internal static string NumberPasscodeEntryAttemptsRestarted {
            get {
                return ResourceManager.GetString("NumberPasscodeEntryAttemptsRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Sign In URL.
        /// </summary>
        internal static string OAuthSignInURL {
            get {
                return ResourceManager.GetString("OAuthSignInURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OAuth Token URL.
        /// </summary>
        internal static string OAuthTokenRequestUrl {
            get {
                return ResourceManager.GetString("OAuthTokenRequestUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM Config.
        /// </summary>
        internal static string OEMConfig {
            get {
                return ResourceManager.GetString("OEMConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        internal static string OEMLocation {
            get {
                return ResourceManager.GetString("OEMLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Priority.
        /// </summary>
        internal static string OEMPriority {
            get {
                return ResourceManager.GetString("OEMPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dell Command Update uses the first location/catalog it successfully loads. Dell Command Update does not load each source location that is listed and aggregate the contents together. Dell Command Update does not check for signatures on any source location that is not available in the Dell.com site..
        /// </summary>
        internal static string OEMPriorityHelp {
            get {
                return ResourceManager.GetString("OEMPriorityHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Source Location.
        /// </summary>
        internal static string OEMUpdateSourceLocation {
            get {
                return ResourceManager.GetString("OEMUpdateSourceLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Freestyle Orchestrator workflows to assign the OEM update payloads and Dell Command Update app in a single workflow..
        /// </summary>
        internal static string OemUpdateWorkflowInfoMessage {
            get {
                return ResourceManager.GetString("OemUpdateWorkflowInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization Group.
        /// </summary>
        internal static string OG {
            get {
                return ResourceManager.GetString("OG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict one card per user.
        /// </summary>
        internal static string OneCardPerUser {
            get {
                return ResourceManager.GetString("OneCardPerUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One Lock allows the Work Passcode and Device Passcode to be the same, allowing users to have the same passcode for both challenges..
        /// </summary>
        internal static string OneLockHelp {
            get {
                return ResourceManager.GetString("OneLockHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Managed Accounts.
        /// </summary>
        internal static string OnlyManagedAccounts {
            get {
                return ResourceManager.GetString("OnlyManagedAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only numbers are allowed in this field.
        /// </summary>
        internal static string OnlyNumbersAllowed {
            get {
                return ResourceManager.GetString("OnlyNumbersAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open all links in Workspace ONE Web.
        /// </summary>
        internal static string OpenAllLinksInAirwatchBrowser {
            get {
                return ResourceManager.GetString("OpenAllLinksInAirwatchBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to Disable if keying modules must ignore the entire authentication set if they do not support all of the authentication suites. Set to Enable if they must ignore only the authentication suites that are not supported..
        /// </summary>
        internal static string OpportunityMatchAuthSetPerKM {
            get {
                return ResourceManager.GetString("OpportunityMatchAuthSetPerKM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option.
        /// </summary>
        internal static string Option {
            get {
                return ResourceManager.GetString("Option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orientation Type.
        /// </summary>
        internal static string OrientationType {
            get {
                return ResourceManager.GetString("OrientationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay Critical Threshold.
        /// </summary>
        internal static string OverlayCriticalThreshold {
            get {
                return ResourceManager.GetString("OverlayCriticalThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The critical threshold size, in megabytes. UWF sends a critical threshold notification event when the UWF overlay size reaches or exceeds this value.
        /// </summary>
        internal static string OverlayCriticalThresholdHelp {
            get {
                return ResourceManager.GetString("OverlayCriticalThresholdHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the maximum cache size, in megabytes, of the overlay in the current session.
        /// </summary>
        internal static string OverlaySizeHelp {
            get {
                return ResourceManager.GetString("OverlaySizeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay Warning Threshold (MB).
        /// </summary>
        internal static string OverlayWarningThreshold {
            get {
                return ResourceManager.GetString("OverlayWarningThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The warning threshold size, in megabytes. UWF sends a warning threshold notification event when the UWF overlay size reaches or exceeds this value..
        /// </summary>
        internal static string OverlayWarningThresholdHelp {
            get {
                return ResourceManager.GetString("OverlayWarningThresholdHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Previous Password.
        /// </summary>
        internal static string OverridePreviousPassword {
            get {
                return ResourceManager.GetString("OverridePreviousPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the previous user/EAS password is overridden with the new EAS password in the payload..
        /// </summary>
        internal static string OverridePreviousPasswordTooltip {
            get {
                return ResourceManager.GetString("OverridePreviousPasswordTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution provides peer-to-peer app distribution capabilities for Windows devices on your internal network, which will improve app download speeds and eliminate the need for multiple distribution points..
        /// </summary>
        internal static string P2PBranchCacheInfo {
            get {
                return ResourceManager.GetString("P2PBranchCacheInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution.
        /// </summary>
        internal static string P2PBranchCacheSettings {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Hosted Cache server.
        /// </summary>
        internal static string P2PBranchCacheSettingsAddHostedCacheServer {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsAddHostedCacheServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify Hosted Cache servers located in the branch office network to be used as a cache source.
        /// </summary>
        internal static string P2PBranchCacheSettingsAddHostedCacheServerTooltip {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsAddHostedCacheServerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Cache Age (days).
        /// </summary>
        internal static string P2PBranchCacheSettingsCacheAgeDays {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsCacheAgeDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of days items should remain in the cache on the device.
        /// </summary>
        internal static string P2PBranchCacheSettingsCacheAgeDaysHelp {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsCacheAgeDaysHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of Disk Space Used for BranchCache.
        /// </summary>
        internal static string P2PBranchCacheSettingsCacheDiskSpacePercent {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsCacheDiskSpacePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of local disk space to use for the cache on the device.
        /// </summary>
        internal static string P2PBranchCacheSettingsCacheDiskSpacePercentHelp {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsCacheDiskSpacePercentHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache Settings.
        /// </summary>
        internal static string P2PBranchCacheSettingsCacheSettings {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsCacheSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosted Cache Servers field cannot be empty..
        /// </summary>
        internal static string P2PBranchCacheSettingsErrorEmptyHostedCacheServers {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsErrorEmptyHostedCacheServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer Distribution requires File Storage Caching to be enabled. Please enable File Storage Caching in Settings in order to proceed..
        /// </summary>
        internal static string P2PBranchCacheSettingsFileStorageCachingDisabledError {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsFileStorageCachingDisabledError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Example: branch1.example.com.
        /// </summary>
        internal static string P2PBranchCacheSettingsHostedCacheServerExample {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsHostedCacheServerExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosted Cache Servers.
        /// </summary>
        internal static string P2PBranchCacheSettingsHostedCacheServersList {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsHostedCacheServersList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosted Mode Settings.
        /// </summary>
        internal static string P2PBranchCacheSettingsHostedModeSettings {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsHostedModeSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Peer Distribution Mode.
        /// </summary>
        internal static string P2PBranchCacheSettingsMode {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distributed.
        /// </summary>
        internal static string P2PBranchCacheSettingsModeDistributed {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsModeDistributed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures the Peer Distribution Mode:
        ///Distributed - download from peers in local subnet.
        ///Hosted - download from hosted cache server in branch.
        ///Local - use local device caching only.
        ///Disabled - do not use Peer Distribution..
        /// </summary>
        internal static string P2PBranchCacheSettingsModeHelp {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hosted.
        /// </summary>
        internal static string P2PBranchCacheSettingsModeHosted {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsModeHosted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local.
        /// </summary>
        internal static string P2PBranchCacheSettingsModeLocal {
            get {
                return ResourceManager.GetString("P2PBranchCacheSettingsModeLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package IDs.
        /// </summary>
        internal static string PackageID_Plural {
            get {
                return ResourceManager.GetString("PackageID.Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packets are to be queued after decryption.
        /// </summary>
        internal static string PacketsQueuedAfterDecryption {
            get {
                return ResourceManager.GetString("PacketsQueuedAfterDecryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode Change Alert.
        /// </summary>
        internal static string PasscodeChangeAlert {
            get {
                return ResourceManager.GetString("PasscodeChangeAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time prior to the expiration of the passcode that the user is notified to change their passcode..
        /// </summary>
        internal static string PasscodeChangeAlertHelp {
            get {
                return ResourceManager.GetString("PasscodeChangeAlertHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a value is selected, employee will need to set a passcode with a length of the selected value or greater..
        /// </summary>
        internal static string PasscodeMinLengthToolTip {
            get {
                return ResourceManager.GetString("PasscodeMinLengthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode Required Range.
        /// </summary>
        internal static string PasscodeRequiredRange {
            get {
                return ResourceManager.GetString("PasscodeRequiredRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode Required Range (in Minutes).
        /// </summary>
        internal static string PasscodeRequiredRangeInMinutes {
            get {
                return ResourceManager.GetString("PasscodeRequiredRangeInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time after unlocking a work profile with a non-strong auth (such as a fingerprint or face recognition) before a passcode is required..
        /// </summary>
        internal static string PasscodeRequiredRangeInMinutesHelp {
            get {
                return ResourceManager.GetString("PasscodeRequiredRangeInMinutesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time after unlocking a device with a non-strong auth (such as a fingerprint or face recognition) before a passcode is required..
        /// </summary>
        internal static string PasscodeRequiredRangeToolTip {
            get {
                return ResourceManager.GetString("PasscodeRequiredRangeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Hello is a more secure way of signing into Windows and applications. Instead of using a shared or shareable secret like a password, Windows Hello helps to securely authenticate to applications, websites and networks on your behalf without sending up a password. Integration with Azure Active Directory is required for Windows Hello use. Use this policy to set PIN strength and allow biometric use..
        /// </summary>
        internal static string PassportPayloadInformation {
            get {
                return ResourceManager.GetString("PassportPayloadInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Change Message.
        /// </summary>
        internal static string PasswordChangeMessage {
            get {
                return ResourceManager.GetString("PasswordChangeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password expire notification can only be integer.
        /// </summary>
        internal static string PasswordExpireNotificationCanOnlyBeInteger {
            get {
                return ResourceManager.GetString("PasswordExpireNotificationCanOnlyBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of days before users get notified their password expires..
        /// </summary>
        internal static string PasswordExpireNotificationDescription {
            get {
                return ResourceManager.GetString("PasswordExpireNotificationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Expire Notification (in days).
        /// </summary>
        internal static string PasswordExpireNotificationInDays {
            get {
                return ResourceManager.GetString("PasswordExpireNotificationInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password history count can only be integer.
        /// </summary>
        internal static string PasswordHistoryCountCanOnlyBeInteger {
            get {
                return ResourceManager.GetString("PasswordHistoryCountCanOnlyBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of prior passwords that can’t be re-used on the domain..
        /// </summary>
        internal static string PasswordHistoryCountDescription {
            get {
                return ResourceManager.GetString("PasswordHistoryCountDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password History Count (number of passwords).
        /// </summary>
        internal static string PasswordHistoryCountNumberOfPasswords {
            get {
                return ResourceManager.GetString("PasswordHistoryCountNumberOfPasswords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode - Password History should be in range 0 and 50.
        /// </summary>
        internal static string PasswordHistoryShouldBeInRange0And50 {
            get {
                return ResourceManager.GetString("PasswordHistoryShouldBeInRange0And50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password minimum age can only be integer.
        /// </summary>
        internal static string PasswordMinimumAgeCanOnlyBeInteger {
            get {
                return ResourceManager.GetString("PasswordMinimumAgeCanOnlyBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum number of days before a user can change their password..
        /// </summary>
        internal static string PasswordMinimumAgeDescription {
            get {
                return ResourceManager.GetString("PasswordMinimumAgeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Minimum Age (in days).
        /// </summary>
        internal static string PasswordMinimumAgeInDays {
            get {
                return ResourceManager.GetString("PasswordMinimumAgeInDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows a text version of the domain’s password requirements to the user. Only used if “Match AD Password Complexity” or “Minimum Password Length” aren’t specified..
        /// </summary>
        internal static string PasswordRequirementsTextDescription {
            get {
                return ResourceManager.GetString("PasswordRequirementsTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords.
        /// </summary>
        internal static string Passwords {
            get {
                return ResourceManager.GetString("Passwords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password Settings.
        /// </summary>
        internal static string PasswordSettings {
            get {
                return ResourceManager.GetString("PasswordSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths.
        /// </summary>
        internal static string Paths {
            get {
                return ResourceManager.GetString("Paths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pattern not matching.
        /// </summary>
        internal static string PatternNotMatching {
            get {
                return ResourceManager.GetString("PatternNotMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1703. Specifies the date and time when the Feature Updates should be paused.
        /// </summary>
        internal static string PauseFeatureUpdatesStartTimeTooltip {
            get {
                return ResourceManager.GetString("PauseFeatureUpdatesStartTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added in Windows 10, version 1703. Specifies the date and time when the Quality Updates should be paused.
        /// </summary>
        internal static string PauseQualityUpdatesStartTimeTooltip {
            get {
                return ResourceManager.GetString("PauseQualityUpdatesStartTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select only the FileVaultMaster.cer uploaded into the Credentials Payload. Learn how to create this certificate in the macOS Platform Guide..
        /// </summary>
        internal static string PayloadCertificateUUIDInfo {
            get {
                return ResourceManager.GetString("PayloadCertificateUUIDInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payloads.
        /// </summary>
        internal static string Payloads {
            get {
                return ResourceManager.GetString("Payloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leverage Delivery Optimization to deploy Updates.
        /// </summary>
        internal static string PeerToPeerUpdatesToolTip {
            get {
                return ResourceManager.GetString("PeerToPeerUpdatesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage Max Background Bandwidth.
        /// </summary>
        internal static string PercentageMaxBackgroundBandwidth {
            get {
                return ResourceManager.GetString("PercentageMaxBackgroundBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum background download bandwidth that Delivery Optimization uses across all concurrent download activities as a percentage of available download bandwidth..
        /// </summary>
        internal static string PercentageMaxBackgroundBandwidthToolTip {
            get {
                return ResourceManager.GetString("PercentageMaxBackgroundBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage Max Foreground Bandwidth.
        /// </summary>
        internal static string PercentageMaxForegroundBandwidth {
            get {
                return ResourceManager.GetString("PercentageMaxForegroundBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum foreground download bandwidth that Delivery Optimization uses across all concurrent download activities as a percentage of available download bandwidth..
        /// </summary>
        internal static string PercentageMaxForegroundBandwidthToolTip {
            get {
                return ResourceManager.GetString("PercentageMaxForegroundBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Persist Domain Membership.
        /// </summary>
        internal static string PersistDomainMembership {
            get {
                return ResourceManager.GetString("PersistDomainMembership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the domain secret registry key is in the registry exclusion list.
        /// </summary>
        internal static string PersistDomainMembershipHelp {
            get {
                return ResourceManager.GetString("PersistDomainMembershipHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Persist Terminal Services Licensing.
        /// </summary>
        internal static string PersistTerminalServicesLicensing {
            get {
                return ResourceManager.GetString("PersistTerminalServicesLicensing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the Terminal Server Client Access License (TSCAL) registry key is in the UWF registry exclusion list.
        /// </summary>
        internal static string PersistTerminalServicesLicensingHelp {
            get {
                return ResourceManager.GetString("PersistTerminalServicesLicensingHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal and Institutional.
        /// </summary>
        internal static string PersonalAndInstitutional {
            get {
                return ResourceManager.GetString("PersonalAndInstitutional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When personal application information collection is set to ‘Do Not Collect’,.
        /// </summary>
        internal static string PersonalApplicationPrivacyInfo {
            get {
                return ResourceManager.GetString("PersonalApplicationPrivacyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personalization.
        /// </summary>
        internal static string Personalization {
            get {
                return ResourceManager.GetString("Personalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Photos.
        /// </summary>
        internal static string Photos {
            get {
                return ResourceManager.GetString("Photos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pictures managed by Photos.app in ~/Pictures/.photoslibrary.
        /// </summary>
        internal static string PhotosPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("PhotosPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pictures.
        /// </summary>
        internal static string Pictures {
            get {
                return ResourceManager.GetString("Pictures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the value is set to N, when changing the device passcode, employee will be required to create a passcode that is unique compared to the N most recently created passcodes..
        /// </summary>
        internal static string PinHistoryToolTip {
            get {
                return ResourceManager.GetString("PinHistoryToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pinned Row.
        /// </summary>
        internal static string PinnedRow {
            get {
                return ResourceManager.GetString("PinnedRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post Event.
        /// </summary>
        internal static string PostEvent {
            get {
                return ResourceManager.GetString("PostEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to use CoreGraphics APIs to send CGEvents to the system event stream..
        /// </summary>
        internal static string PostEventPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("PostEventPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power Management.
        /// </summary>
        internal static string Powermgt {
            get {
                return ResourceManager.GetString("Powermgt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A unique name must be created for each Bookmark added. Multiple names cannot be separated by commas and listed in one field.
        /// </summary>
        internal static string PredefinedBookmarksCommaError {
            get {
                return ResourceManager.GetString("PredefinedBookmarksCommaError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preshared Key Encoding.
        /// </summary>
        internal static string PresharedKeyEncoding {
            get {
                return ResourceManager.GetString("PresharedKeyEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures preshared key encoding..
        /// </summary>
        internal static string PresharedKeyEncodingHelp {
            get {
                return ResourceManager.GetString("PresharedKeyEncodingHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preshared key is not encoded.
        /// </summary>
        internal static string Presharedkeyisnotencoded {
            get {
                return ResourceManager.GetString("Presharedkeyisnotencoded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent App Sheet.
        /// </summary>
        internal static string PreventAppSheet {
            get {
                return ResourceManager.GetString("PreventAppSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent MAC address randomization.
        /// </summary>
        internal static string PreventMACAddressRandomization {
            get {
                return ResourceManager.GetString("PreventMACAddressRandomization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, prevents MAC address randomization for this Wi-Fi network while associated with the network. This will also show a privacy warning in Settings indicating that the network has reduced privacy protections..
        /// </summary>
        internal static string PreventMACAddressRandomizationTooltip {
            get {
                return ResourceManager.GetString("PreventMACAddressRandomizationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will prevent the un-installation of required apps defined in Application Groups..
        /// </summary>
        internal static string PreventUninstallRequiredAppsTooltip {
            get {
                return ResourceManager.GetString("PreventUninstallRequiredAppsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent use in other apps.
        /// </summary>
        internal static string PreventUseInThirdPartyApps {
            get {
                return ResourceManager.GetString("PreventUseInThirdPartyApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is on, prevents this account from sending mail in any app other than the Apple Mail app..
        /// </summary>
        internal static string PreventUseInThirdPartyAppsTooltip {
            get {
                return ResourceManager.GetString("PreventUseInThirdPartyAppsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check your console privacy settings to confirm they allow for the collection of personal applications data. If the collection of personal application data is not allowed, the Single App Mode profile payload may not correctly be applied..
        /// </summary>
        internal static string PrivacyEnabledSingleAppModeMessage {
            get {
                return ResourceManager.GetString("PrivacyEnabledSingleAppModeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy Preferences.
        /// </summary>
        internal static string PrivacyPreferences {
            get {
                return ResourceManager.GetString("PrivacyPreferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processes.
        /// </summary>
        internal static string Processes {
            get {
                return ResourceManager.GetString("Processes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click OK to confirm the activation or deactivation of the profile..
        /// </summary>
        internal static string ProfileActivationDeactivationConfirmation {
            get {
                return ResourceManager.GetString("ProfileActivationDeactivationConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the profile at the given parent organization group.
        /// </summary>
        internal static string ProfileCannotBeCreatedAtParentOg {
            get {
                return ResourceManager.GetString("ProfileCannotBeCreatedAtParentOg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail to load profile..
        /// </summary>
        internal static string ProfileLoadingError {
            get {
                return ResourceManager.GetString("ProfileLoadingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile that you are trying to deactivate is associated with application/compliance policy. Remove the respective association to delete it..
        /// </summary>
        internal static string ProfileNotDeactivatedBecauseLinkedToOtherEntity {
            get {
                return ResourceManager.GetString("ProfileNotDeactivatedBecauseLinkedToOtherEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile that you are trying to delete is associated with application/compliance policy. Remove the respective association to delete it..
        /// </summary>
        internal static string ProfileNotDeletedBecauseLinkedToOtherEntity {
            get {
                return ResourceManager.GetString("ProfileNotDeletedBecauseLinkedToOtherEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page cannot be edited due to permissions.
        /// </summary>
        internal static string ProfileReadOnlyWarning {
            get {
                return ResourceManager.GetString("ProfileReadOnlyWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Resource.
        /// </summary>
        internal static string ProfileResource {
            get {
                return ResourceManager.GetString("ProfileResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This resource cannot be deleted, as it is currently linked to one or more workflows..
        /// </summary>
        internal static string ProfileResourceLinkedToWorkflows {
            get {
                return ResourceManager.GetString("ProfileResourceLinkedToWorkflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Retry Circuit Breaker.
        /// </summary>
        internal static string ProfileRetryCircuitBreakerJob {
            get {
                return ResourceManager.GetString("ProfileRetryCircuitBreakerJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Scope.
        /// </summary>
        internal static string ProfileScope {
            get {
                return ResourceManager.GetString("ProfileScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the profiles to which the rule belongs: Domain, Private, Public.
        /// </summary>
        internal static string ProfilesHelp {
            get {
                return ResourceManager.GetString("ProfilesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles Setting.
        /// </summary>
        internal static string ProfilesSetting {
            get {
                return ResourceManager.GetString("ProfilesSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles Settings.
        /// </summary>
        internal static string ProfilesSettings {
            get {
                return ResourceManager.GetString("ProfilesSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This profile is used in workflows. It cannot be changed to Compliance or Interactive profile..
        /// </summary>
        internal static string ProfileTypeNotSupportedInWorkflows {
            get {
                return ResourceManager.GetString("ProfileTypeNotSupportedInWorkflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This profile is used in workflows, updating it will have some effect on devices in the workflows as well. {0}.
        /// </summary>
        internal static string ProfileUsedInWorkflow {
            get {
                return ResourceManager.GetString("ProfileUsedInWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Workflow.
        /// </summary>
        internal static string ProfileWorkflow {
            get {
                return ResourceManager.GetString("ProfileWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generated XML values are created based on a sample device from the assignment..
        /// </summary>
        internal static string ProfileXmlForDeviceWarning {
            get {
                return ResourceManager.GetString("ProfileXmlForDeviceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt for password if encrypted.
        /// </summary>
        internal static string PromptForPasswordIfEncryptionEnabled {
            get {
                return ResourceManager.GetString("PromptForPasswordIfEncryptionEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt message.
        /// </summary>
        internal static string PromptMessage {
            get {
                return ResourceManager.GetString("PromptMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt title.
        /// </summary>
        internal static string PromptTitle {
            get {
                return ResourceManager.GetString("PromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When to prompt user.
        /// </summary>
        internal static string PromptToEnableFileVaultAt {
            get {
                return ResourceManager.GetString("PromptToEnableFileVaultAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets when users will be prompted to enter their password to enable FileVault..
        /// </summary>
        internal static string PromptToEnableFileVaultAtHelpInfo {
            get {
                return ResourceManager.GetString("PromptToEnableFileVaultAtHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protected folders.
        /// </summary>
        internal static string Protectedfolders {
            get {
                return ResourceManager.GetString("Protectedfolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data from protected networks is accessible by enterprise applications only. These locations will be considered a safe destination for enterprise data..
        /// </summary>
        internal static string ProtectedNetworksInfo {
            get {
                return ResourceManager.GetString("ProtectedNetworksInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected protocol configuration.
        /// </summary>
        internal static string ProtocolHelp {
            get {
                return ResourceManager.GetString("ProtocolHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol Number.
        /// </summary>
        internal static string ProtocolNumber {
            get {
                return ResourceManager.GetString("ProtocolNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider Designated Requirement.
        /// </summary>
        internal static string ProviderDesignatedRequirement {
            get {
                return ResourceManager.GetString("ProviderDesignatedRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the VPN provider is implemented as a system extension, then this field is required.
        /// </summary>
        internal static string ProviderDesignatedRequirementInfo {
            get {
                return ResourceManager.GetString("ProviderDesignatedRequirementInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Track Profile Status during OOBE Provisioning.
        /// </summary>
        internal static string ProvisionInOobeEnrollment {
            get {
                return ResourceManager.GetString("ProvisionInOobeEnrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting this option will add this profile to the OOBE Status Tracking Page. Provisioning will be considered complete only if this policy is successfully applied or the provisioning process exceeds the timeout value configured in Settings &gt; Devices &amp; Users &gt; General &gt; Enrollment &gt; Optional Prompts..
        /// </summary>
        internal static string ProvisionInOobeEnrollmentToolTip {
            get {
                return ResourceManager.GetString("ProvisionInOobeEnrollmentToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP and HTTPS prefixes are not allowed for Wi-Fi Exclusion List. Please remove it from the URL..
        /// </summary>
        internal static string ProxyBypassHttpNotAllowed {
            get {
                return ResourceManager.GetString("ProxyBypassHttpNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PUA Protection.
        /// </summary>
        internal static string PUAProtection {
            get {
                return ResourceManager.GetString("PUAProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PUA Protection Off.
        /// </summary>
        internal static string PuaProtectionOff {
            get {
                return ResourceManager.GetString("PuaProtectionOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PUA Protection On.
        /// </summary>
        internal static string PuaProtectionOn {
            get {
                return ResourceManager.GetString("PuaProtectionOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public App Auto Update.
        /// </summary>
        internal static string PublicAppAutoUpdate {
            get {
                return ResourceManager.GetString("PublicAppAutoUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pulse Secure.
        /// </summary>
        internal static string PulseSecure {
            get {
                return ResourceManager.GetString("PulseSecure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Quarantined Files After.
        /// </summary>
        internal static string QuarantinePurgeItemsAfterDelay {
            get {
                return ResourceManager.GetString("QuarantinePurgeItemsAfterDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All queuing is to be disabled.
        /// </summary>
        internal static string QueuingDisabled {
            get {
                return ResourceManager.GetString("QueuingDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Filters.
        /// </summary>
        internal static string QuickFilters {
            get {
                return ResourceManager.GetString("QuickFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Scan.
        /// </summary>
        internal static string QuickScan {
            get {
                return ResourceManager.GetString("QuickScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Realm is required for credential type extensible sso.
        /// </summary>
        internal static string RealmIsRequiredForCredentialTypeExtensibleSso {
            get {
                return ResourceManager.GetString("RealmIsRequiredForCredentialTypeExtensibleSso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Realm is required for kerberos sso.
        /// </summary>
        internal static string RealmIsRequiredForKerberosSso {
            get {
                return ResourceManager.GetString("RealmIsRequiredForKerberosSso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Real-time Monitoring.
        /// </summary>
        internal static string RealTimeMonitoring {
            get {
                return ResourceManager.GetString("RealTimeMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Real-time Scan Direction.
        /// </summary>
        internal static string RealtimeScanDirection {
            get {
                return ResourceManager.GetString("RealtimeScanDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recent Apps Button.
        /// </summary>
        internal static string RecentAppsButton {
            get {
                return ResourceManager.GetString("RecentAppsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Recommended Updates the Same Way as Important Updates.
        /// </summary>
        internal static string RecommendedUpdates {
            get {
                return ResourceManager.GetString("RecommendedUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a message to employees to contact an IT Administrator in the event of an unrecoverable error..
        /// </summary>
        internal static string RecoveryKeyErrorMessageHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeyErrorMessageHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retries before error message.
        /// </summary>
        internal static string RecoveryKeyMaxFailureCount {
            get {
                return ResourceManager.GetString("RecoveryKeyMaxFailureCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of password entry attempts before displaying error alert. Incorrect password errors do not count towards the limit..
        /// </summary>
        internal static string RecoveryKeyMaxFailureCountHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeyMaxFailureCountHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a message to employees that notifies them that they need to enter their password to allow Hub to rotate their Recovery Key. When continue is clicked, the prompt configured below will appear..
        /// </summary>
        internal static string RecoveryKeyNotificationMessageHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeyNotificationMessageHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the time interval between dismissed notifications..
        /// </summary>
        internal static string RecoveryKeyNotificationRetryIntervalHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeyNotificationRetryIntervalHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a message to employees that prompts them to enter their password..
        /// </summary>
        internal static string RecoveryKeyPromptMessageHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeyPromptMessageHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a message to employees to let them know their device is compliant with your organization’s disk encryption policy after successfully entering their password..
        /// </summary>
        internal static string RecoveryKeySuccessMessageHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryKeySuccessMessageHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the Recovery Key Type that best meets your organization’s requirements. Learn more about Personal and Institutional Recovery Keys in the macOS Platform Guide..
        /// </summary>
        internal static string RecoveryTypeHelpInfo {
            get {
                return ResourceManager.GetString("RecoveryTypeHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Region and Language.
        /// </summary>
        internal static string RegionAndLanguage {
            get {
                return ResourceManager.GetString("RegionAndLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A registry key in the registry exclusion list for UWF in the current session.
        /// </summary>
        internal static string RegistryPathExclusionsHelp {
            get {
                return ResourceManager.GetString("RegistryPathExclusionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insider - Release (Most Stable, Public Build).
        /// </summary>
        internal static string ReleaseWindowsInsiderNew {
            get {
                return ResourceManager.GetString("ReleaseWindowsInsiderNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reminders.
        /// </summary>
        internal static string Reminders {
            get {
                return ResourceManager.GetString("Reminders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reminders information managed by Reminders.app..
        /// </summary>
        internal static string RemindersPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("RemindersPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the remote addresses covered by the rule. Custom ranges should be a comma separated list of tokens..
        /// </summary>
        internal static string RemoteAddressRangesHelp {
            get {
                return ResourceManager.GetString("RemoteAddressRangesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Port Ranges.
        /// </summary>
        internal static string RemotePortRanges {
            get {
                return ResourceManager.GetString("RemotePortRanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of ranges, For example, 100-120,200,300-320..
        /// </summary>
        internal static string RemotePortRangesHelp {
            get {
                return ResourceManager.GetString("RemotePortRangesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Removable Drives.
        /// </summary>
        internal static string RemovableDriveScanning {
            get {
                return ResourceManager.GetString("RemovableDriveScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove all apps button.
        /// </summary>
        internal static string RemoveAllAppsButton {
            get {
                return ResourceManager.GetString("RemoveAllAppsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Image.
        /// </summary>
        internal static string RemoveImage {
            get {
                return ResourceManager.GetString("RemoveImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Settings - Remove setting is a required field.
        /// </summary>
        internal static string RemoveSettingIsRequired {
            get {
                return ResourceManager.GetString("RemoveSettingIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Settings.
        /// </summary>
        internal static string RemoveSettings {
            get {
                return ResourceManager.GetString("RemoveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Text.
        /// </summary>
        internal static string RemoveText {
            get {
                return ResourceManager.GetString("RemoveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee will be required to set a passcode that includes alphabetic characters (e.g. &apos;abcd&apos;) instead of only numeric characters when enabled..
        /// </summary>
        internal static string RequireAlphanumericToolTip {
            get {
                return ResourceManager.GetString("RequireAlphanumericToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require MDM enrollment.
        /// </summary>
        internal static string RequireMDMEnrollmentDEP {
            get {
                return ResourceManager.GetString("RequireMDMEnrollmentDEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the user is forced to enroll during the initial Setup Assistant on the device. Otherwise, the device cannot be activated. If disabled, the Setup Assistant on the device will give an option to skip the MDM enrollment.
        ///Starting in iOS 13, this option is default enabled and cannot be disabled..
        /// </summary>
        internal static string RequireMDMEnrollmentDEPTooltip {
            get {
                return ResourceManager.GetString("RequireMDMEnrollmentDEPTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, requires the user to provide Touch ID, Face ID, or a
        ///passcode to access the keychain entry..
        /// </summary>
        internal static string RequireUserPresenceDescription {
            get {
                return ResourceManager.GetString("RequireUserPresenceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require User Touch ID or Password.
        /// </summary>
        internal static string RequireUserTouchIdOrPassword {
            get {
                return ResourceManager.GetString("RequireUserTouchIdOrPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require user to unlock FileVault after hibernation.
        /// </summary>
        internal static string RequireUserToUnlockDiskAfterHibernation {
            get {
                return ResourceManager.GetString("RequireUserToUnlockDiskAfterHibernation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The platform {0} can not be disabled. It is linked to workflow..
        /// </summary>
        internal static string ResourcePlatformLinkedToWorkflow {
            get {
                return ResourceManager.GetString("ResourcePlatformLinkedToWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This profile is being used in workflows. To avoid disruption, remove the workflow steps before reattempting this action..
        /// </summary>
        internal static string RestrictActionForProfileDesc {
            get {
                return ResourceManager.GetString("RestrictActionForProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Deactivate - Blocked.
        /// </summary>
        internal static string RestrictDeactivateActionForProfile {
            get {
                return ResourceManager.GetString("RestrictDeactivateActionForProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Delete - Blocked.
        /// </summary>
        internal static string RestrictDeleteActionForProfile {
            get {
                return ResourceManager.GetString("RestrictDeleteActionForProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict Input Methods.
        /// </summary>
        internal static string RestrictInputMethods {
            get {
                return ResourceManager.GetString("RestrictInputMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict Peer Selection By.
        /// </summary>
        internal static string RestrictPeerSelectionBy {
            get {
                return ResourceManager.GetString("RestrictPeerSelectionBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set this policy to restrict peer selection via selected option..
        /// </summary>
        internal static string RestrictPeerSelectionByToolTip {
            get {
                return ResourceManager.GetString("RestrictPeerSelectionByToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismissal interval.
        /// </summary>
        internal static string RetryIntervalBetweenDismissals {
            get {
                return ResourceManager.GetString("RetryIntervalBetweenDismissals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check type.
        /// </summary>
        internal static string RevocationCheckType {
            get {
                return ResourceManager.GetString("RevocationCheckType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revoke on Unenroll.
        /// </summary>
        internal static string RevokeOnUnenroll {
            get {
                return ResourceManager.GetString("RevokeOnUnenroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value should be 0 or a whole number between 15 and 365.
        /// </summary>
        internal static string RotateRecoveryKeyAfterDaysIsRequired {
            get {
                return ResourceManager.GetString("RotateRecoveryKeyAfterDaysIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the profile is edited and the number of days are changed, existing device recovery keys will be reevaluated and automatically rotated if required. Value should be either 0 or within the range of 15 to 365. If the value is 0, then no automatic rotation will be performed..
        /// </summary>
        internal static string Rotaterecoverykeyafterinfo {
            get {
                return ResourceManager.GetString("Rotaterecoverykeyafterinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rows.
        /// </summary>
        internal static string Rows {
            get {
                return ResourceManager.GetString("Rows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rule Merging.
        /// </summary>
        internal static string RuleMerging {
            get {
                return ResourceManager.GetString("RuleMerging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rule Name.
        /// </summary>
        internal static string RuleName {
            get {
                return ResourceManager.GetString("RuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set permission behavior for all apps installed on the device through Workspace ONE. You can add exceptions to the behavior for specific apps.
        /// </summary>
        internal static string RuntimePermissionsInfoWsOne {
            get {
                return ResourceManager.GetString("RuntimePermissionsInfoWsOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung Date/Time.
        /// </summary>
        internal static string SamsungDateTimeProfileName {
            get {
                return ResourceManager.GetString("SamsungDateTimeProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung Knox Firewall.
        /// </summary>
        internal static string SamsungKnoxFirewallProfileName {
            get {
                return ResourceManager.GetString("SamsungKnoxFirewallProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung Knox Passcode.
        /// </summary>
        internal static string SamsungKnoxPasscodeProfileName {
            get {
                return ResourceManager.GetString("SamsungKnoxPasscodeProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samsung Knox Restrictions.
        /// </summary>
        internal static string SamsungKnoxRestrictionsProfileName {
            get {
                return ResourceManager.GetString("SamsungKnoxRestrictionsProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save &amp; Assign.
        /// </summary>
        internal static string SaveAssign {
            get {
                return ResourceManager.GetString("SaveAssign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save &amp; Publish.
        /// </summary>
        internal static string SavePublish {
            get {
                return ResourceManager.GetString("SavePublish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Avg CPU Load Factor (%).
        /// </summary>
        internal static string ScanAvgCpuLoadFactor {
            get {
                return ResourceManager.GetString("ScanAvgCpuLoadFactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Mapped Network Drives.
        /// </summary>
        internal static string ScanMappedNetworkDrives {
            get {
                return ResourceManager.GetString("ScanMappedNetworkDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduled Imminent Auto-Restart Warning (Minutes).
        /// </summary>
        internal static string ScheduleImminentRestartWarningInMinutes {
            get {
                return ResourceManager.GetString("ScheduleImminentRestartWarningInMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of minutes prior to notification start..
        /// </summary>
        internal static string ScheduleImminentRestartWarningToolTip {
            get {
                return ResourceManager.GetString("ScheduleImminentRestartWarningToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule Install Time.
        /// </summary>
        internal static string ScheduleInstTime {
            get {
                return ResourceManager.GetString("ScheduleInstTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduled Auto-Restart Warning (Hours).
        /// </summary>
        internal static string ScheduleRestartWarningInHours {
            get {
                return ResourceManager.GetString("ScheduleRestartWarningInHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of hours prior to notification start..
        /// </summary>
        internal static string ScheduleRestartWarningToolTip {
            get {
                return ResourceManager.GetString("ScheduleRestartWarningToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to access controls for screen capture and recording..
        /// </summary>
        internal static string ScreenCaptureInfo {
            get {
                return ResourceManager.GetString("ScreenCaptureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screens.
        /// </summary>
        internal static string Screens {
            get {
                return ResourceManager.GetString("Screens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Time.
        /// </summary>
        internal static string ScreenTime {
            get {
                return ResourceManager.GetString("ScreenTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Address.
        /// </summary>
        internal static string ScriptAddress {
            get {
                return ResourceManager.GetString("ScriptAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Script Address is the URL where the proxy script is hosted. This is also known as the PAC URL..
        /// </summary>
        internal static string ScriptAddressHelp {
            get {
                return ResourceManager.GetString("ScriptAddressHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Add new SDK profiles or view and manage existing SDK profiles.
        /// </summary>
        internal static string SdkProfileListViewMenuTitle
        {
            get
            {
                return ResourceManager.GetString("SdkProfileListViewMenuTitle", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to SDK Profiles.
        /// </summary>
        internal static string SdkProfiles
        {
            get
            {
                return ResourceManager.GetString("SdkProfiles", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Start typing to search for payloads and settings
        /// </summary>
        internal static string SearchPayloadsPlaceholder
        {
            get
            {
                return ResourceManager.GetString("SearchPayloadsPlaceholder", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Second Active Ethernet.
        /// </summary>
        internal static string SecondActiveEthernet {
            get {
                return ResourceManager.GetString("SecondActiveEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Second Ethernet.
        /// </summary>
        internal static string SecondEthernet {
            get {
                return ResourceManager.GetString("SecondEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted Device UDID for App Catalog.
        /// </summary>
        internal static string SecureDeviceUdidLookUpText {
            get {
                return ResourceManager.GetString("SecureDeviceUdidLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configures the security association idle time, in seconds. The value MUST be in the range of 300 to 3,600.
        /// </summary>
        internal static string SecurityAssociationIdleTime {
            get {
                return ResourceManager.GetString("SecurityAssociationIdleTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security &amp; Privacy.
        /// </summary>
        internal static string SecurityPrivacy {
            get {
                return ResourceManager.GetString("SecurityPrivacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Apps.
        /// </summary>
        internal static string SelectApps {
            get {
                return ResourceManager.GetString("SelectApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Exclusion Type.
        /// </summary>
        internal static string SelectExclusionType {
            get {
                return ResourceManager.GetString("SelectExclusionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select App Type.
        /// </summary>
        internal static string SelectKioskApp {
            get {
                return ResourceManager.GetString("SelectKioskApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Mode.
        /// </summary>
        internal static string SelectModeLabel {
            get {
                return ResourceManager.GetString("SelectModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select OEM.
        /// </summary>
        internal static string SelectOEM {
            get {
                return ResourceManager.GetString("SelectOEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Select Passcode Application.
        /// </summary>
        internal static string SelectPasscodeApplication {
            get {
                return ResourceManager.GetString("SelectPasscodeApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Profile....
        /// </summary>
        internal static string SelectProfile {
            get {
                return ResourceManager.GetString("SelectProfile", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Select a thin client system to create a profile for.
        /// </summary>
        internal static string SelectThinClientProfileCreate
        {
            get
            {
                return ResourceManager.GetString("SelectThinClientProfileCreate", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Send all samples automatically.
        /// </summary>
        internal static string SendAllSamples {
            get {
                return ResourceManager.GetString("SendAllSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Diagnostic and Usage Telemetry Data.
        /// </summary>
        internal static string SendDiagnosticAndUsageTelemetryData {
            get {
                return ResourceManager.GetString("SendDiagnosticAndUsageTelemetryData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security level sends security information related to
        ///connected user experience, Malicious Software Removal
        ///tool and Defender.
        ///Basic Level sends security data in addition to basic
        ///device info including quality and apps compatibility
        ///and usage.
        ///Enhanced level also sends usage and performance
        ///information for Windows and apps.
        ///Full sends all data necessary to identify and resolve
        ///problems..
        /// </summary>
        internal static string SendDiagnosticAndUsageTelemetryDataToolTip {
            get {
                return ResourceManager.GetString("SendDiagnosticAndUsageTelemetryDataToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send safe samples automatically.
        /// </summary>
        internal static string SendSafeSamples {
            get {
                return ResourceManager.GetString("SendSafeSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separate Multiple Values With Pipe Character.
        /// </summary>
        internal static string SeparateMultipleValuesWithPipeCharacter {
            get {
                return ResourceManager.GetString("SeparateMultipleValuesWithPipeCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is a required field.
        /// </summary>
        internal static string ServerIsRequired {
            get {
                return ResourceManager.GetString("ServerIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Setup.
        /// </summary>
        internal static string ServerSetup {
            get {
                return ResourceManager.GetString("ServerSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wifi - Service Set Identifier is a required field.
        /// </summary>
        internal static string ServiceSetIdentifierIsRequiredField {
            get {
                return ResourceManager.GetString("ServiceSetIdentifierIsRequiredField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servicing Mode.
        /// </summary>
        internal static string ServicingMode {
            get {
                return ResourceManager.GetString("ServicingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates when servicing is enabled in the current session.
        /// </summary>
        internal static string ServicingModeHelp {
            get {
                return ResourceManager.GetString("ServicingModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set EnableMCXLoginScripts to TRUE.
        /// </summary>
        internal static string SetEnableMCXLoginScriptToTRUE {
            get {
                return ResourceManager.GetString("SetEnableMCXLoginScriptToTRUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Hours To Limit Background Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitBackgroundDownloadBandwidth {
            get {
                return ResourceManager.GetString("SetHoursToLimitBackgroundDownloadBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set EndTime To Limit Background Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitBackgroundDownloadBandwidthEndTimeUi {
            get {
                return ResourceManager.GetString("SetHoursToLimitBackgroundDownloadBandwidthEndTimeUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Start Time To Limit Background Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitBackgroundDownloadBandwidthStartTimeUi {
            get {
                return ResourceManager.GetString("SetHoursToLimitBackgroundDownloadBandwidthStartTimeUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum background download bandwidth that Delivery Optimization uses during and outside business hours across all concurrent download activities as a percentage of available download bandwidth..
        /// </summary>
        internal static string SetHoursToLimitBackgroundDownloadBandwidthToolTip {
            get {
                return ResourceManager.GetString("SetHoursToLimitBackgroundDownloadBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Hours To Limit Foreground Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitForegroundDownloadBandwidth {
            get {
                return ResourceManager.GetString("SetHoursToLimitForegroundDownloadBandwidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set EndTime To Limit Foreground Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitForegroundDownloadBandwidthEndTimeUi {
            get {
                return ResourceManager.GetString("SetHoursToLimitForegroundDownloadBandwidthEndTimeUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Start Time To Limit Foreground Download Bandwidth.
        /// </summary>
        internal static string SetHoursToLimitForegroundDownloadBandwidthStartTimeUi {
            get {
                return ResourceManager.GetString("SetHoursToLimitForegroundDownloadBandwidthStartTimeUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the maximum foreground download bandwidth that Delivery Optimization uses during and outside business hours across all concurrent download activities as a percentage of available download bandwidth..
        /// </summary>
        internal static string SetHoursToLimitForegroundDownloadBandwidthToolTip {
            get {
                return ResourceManager.GetString("SetHoursToLimitForegroundDownloadBandwidthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Individual Packages.
        /// </summary>
        internal static string SetIndividualPackages {
            get {
                return ResourceManager.GetString("SetIndividualPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set initial passcode.
        /// </summary>
        internal static string SetInitialPasscode {
            get {
                return ResourceManager.GetString("SetInitialPasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set a passcode on the device, the user can then change it to something else that conforms to the Device Passcode policy..
        /// </summary>
        internal static string SetInitialPasscodeToolTip {
            get {
                return ResourceManager.GetString("SetInitialPasscodeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set MCXScriptTrust to match the binding settings used to connect the client computer to the directory domain.
        /// </summary>
        internal static string SetMCXScriptTrustLabel {
            get {
                return ResourceManager.GetString("SetMCXScriptTrustLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Background Traffic During Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForBackgroundTrafficDuringBusinessHours {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForBackgroundTrafficDuringBusinessHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Background Traffic During Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForBackgroundTrafficDuringBusinessHoursToolTip {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForBackgroundTrafficDuringBusinessHoursToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Background Traffic OutsideBusiness Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForBackgroundTrafficOutsideBusinessHours {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForBackgroundTrafficOutsideBusinessHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Background Traffic Outside Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForBackgroundTrafficOutsideBusinessHoursToolTip {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForBackgroundTrafficOutsideBusinessHoursToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Foreground Traffic During Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForForegroundTrafficDuringBusinessHours {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForForegroundTrafficDuringBusinessHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Foreground Traffic During Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForForegroundTrafficDuringBusinessHoursToolTip {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForForegroundTrafficDuringBusinessHoursToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Foreground Traffic Outside Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForForegroundTrafficOutsideBusinessHours {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForForegroundTrafficOutsideBusinessHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Percentage Of Throttle For Foreground Traffic Outside Business Hours.
        /// </summary>
        internal static string SetPercentageOfThrottleForForegroundTrafficOutsideBusinessHoursToolTip {
            get {
                return ResourceManager.GetString("SetPercentageOfThrottleForForegroundTrafficOutsideBusinessHoursToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select setup screens to skip upon a Software Update.
        /// </summary>
        internal static string SetupAssistantPayloadDescription {
            get {
                return ResourceManager.GetString("SetupAssistantPayloadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set a message for blocked settings.
        /// </summary>
        internal static string ShortSupportMessageEnabled {
            get {
                return ResourceManager.GetString("ShortSupportMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a user clicks a blocked setting or feature, the support message can provide a brief explanation of why they can&apos;t access the feature. Limited to 200 characters..
        /// </summary>
        internal static string ShortSupportMessageToolTip {
            get {
                return ResourceManager.GetString("ShortSupportMessageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show.
        /// </summary>
        internal static string Show {
            get {
                return ResourceManager.GetString("Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Personal Recovery Key.
        /// </summary>
        internal static string ShowPersonalRecoveryKeyToUser {
            get {
                return ResourceManager.GetString("ShowPersonalRecoveryKeyToUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays Personal Recovery Key to the employee’s device when the key is generated..
        /// </summary>
        internal static string ShowRecoveryKeyHelpInfo {
            get {
                return ResourceManager.GetString("ShowRecoveryKeyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature Update Fallback Order.
        /// </summary>
        internal static string SignatureUpdateFallbackOrder {
            get {
                return ResourceManager.GetString("SignatureUpdateFallbackOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature update file shares sources.
        /// </summary>
        internal static string SignatureUpdateFileSharesSources {
            get {
                return ResourceManager.GetString("SignatureUpdateFileSharesSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature update interval in hours.
        /// </summary>
        internal static string SignatureUpdateInterval {
            get {
                return ResourceManager.GetString("SignatureUpdateInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature Updates.
        /// </summary>
        internal static string SignatureUpdates {
            get {
                return ResourceManager.GetString("SignatureUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign In Settings.
        /// </summary>
        internal static string SignIn {
            get {
                return ResourceManager.GetString("SignIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign-In Settings.
        /// </summary>
        internal static string SignInSettings {
            get {
                return ResourceManager.GetString("SignInSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Download Mode.
        /// </summary>
        internal static string SimpleDownloadMode {
            get {
                return ResourceManager.GetString("SimpleDownloadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIM Setup.
        /// </summary>
        internal static string SIMSetup {
            get {
                return ResourceManager.GetString("SIMSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIM Usage Rules.
        /// </summary>
        internal static string SIMUsageRules {
            get {
                return ResourceManager.GetString("SIMUsageRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error happens when add application.
        /// </summary>
        internal static string SingleAppModeAddAppError {
            get {
                return ResourceManager.GetString("SingleAppModeAddAppError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessibility.
        /// </summary>
        internal static string SkipAccessibility {
            get {
                return ResourceManager.GetString("SkipAccessibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user does not see the Accessibility pane. This only occurs if the Mac is connected to Ethernet and the cloud configuration is downloaded..
        /// </summary>
        internal static string SkipAccessibilityTooltip {
            get {
                return ResourceManager.GetString("SkipAccessibilityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip All Screens.
        /// </summary>
        internal static string SkipAllScreens {
            get {
                return ResourceManager.GetString("SkipAllScreens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Your Look.
        /// </summary>
        internal static string SkipAppearance {
            get {
                return ResourceManager.GetString("SkipAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple ID Setup.
        /// </summary>
        internal static string SkipAppleID {
            get {
                return ResourceManager.GetString("SkipAppleID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to choose light or dark mode during setup..
        /// </summary>
        internal static string SkipChooseYourLookTooltip {
            get {
                return ResourceManager.GetString("SkipChooseYourLookTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Device To Device Migration Screen.
        /// </summary>
        internal static string SkipDeviceMigration {
            get {
                return ResourceManager.GetString("SkipDeviceMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device To Device Migration.
        /// </summary>
        internal static string SkipDeviceToDeviceMigration {
            get {
                return ResourceManager.GetString("SkipDeviceToDeviceMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be informed about the device to device migration during setup.
        /// </summary>
        internal static string SkipDeviceToDeviceMigrationTooltip {
            get {
                return ResourceManager.GetString("SkipDeviceToDeviceMigrationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Express Language.
        /// </summary>
        internal static string SkipExpressLanguage {
            get {
                return ResourceManager.GetString("SkipExpressLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to set up the express language during setup.
        /// </summary>
        internal static string SkipExpressLanguageTooltip {
            get {
                return ResourceManager.GetString("SkipExpressLanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip user tutorial and introductory hints.
        /// </summary>
        internal static string SkipFirstUseHints {
            get {
                return ResourceManager.GetString("SkipFirstUseHints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iCloud Storage.
        /// </summary>
        internal static string SkipIcloudStorageSetup {
            get {
                return ResourceManager.GetString("SkipIcloudStorageSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iMessage and FaceTime.
        /// </summary>
        internal static string SkipImessageAndFacetime {
            get {
                return ResourceManager.GetString("SkipImessageAndFacetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to set up iMessage and FaceTime during setup..
        /// </summary>
        internal static string SkipiMessageAndFaceTimeTooltip {
            get {
                return ResourceManager.GetString("SkipiMessageAndFaceTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location Services.
        /// </summary>
        internal static string SkipLocation {
            get {
                return ResourceManager.GetString("SkipLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Messaging Activation Using Phone Number Screen.
        /// </summary>
        internal static string SkipMessagingActivationUsingPhoneNumber {
            get {
                return ResourceManager.GetString("SkipMessagingActivationUsingPhoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passcode.
        /// </summary>
        internal static string SkipPasscode {
            get {
                return ResourceManager.GetString("SkipPasscode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payment.
        /// </summary>
        internal static string SkipPayment {
            get {
                return ResourceManager.GetString("SkipPayment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred Language.
        /// </summary>
        internal static string SkipPreferredLanguage {
            get {
                return ResourceManager.GetString("SkipPreferredLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to set up the preferred language order during setup.
        /// </summary>
        internal static string SkipPreferredLanguageTooltip {
            get {
                return ResourceManager.GetString("SkipPreferredLanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        internal static string SkipRestore {
            get {
                return ResourceManager.GetString("SkipRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Completed.
        /// </summary>
        internal static string SkipRestoreCompleted {
            get {
                return ResourceManager.GetString("SkipRestoreCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user does not see the Restore Completed pane..
        /// </summary>
        internal static string SkipRestoreCompletedTooltip {
            get {
                return ResourceManager.GetString("SkipRestoreCompletedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Time.
        /// </summary>
        internal static string SkipScreenTime {
            get {
                return ResourceManager.GetString("SkipScreenTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be informed about Screen Time during setup..
        /// </summary>
        internal static string SkipScreenTimeTooltip {
            get {
                return ResourceManager.GetString("SkipScreenTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Selected Screens.
        /// </summary>
        internal static string SkipSelectedScreens {
            get {
                return ResourceManager.GetString("SkipSelectedScreens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Setup Assistant.
        /// </summary>
        internal static string SkipSetupAssistant {
            get {
                return ResourceManager.GetString("SkipSetupAssistant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Cellular Plan.
        /// </summary>
        internal static string SkipSIMSetup {
            get {
                return ResourceManager.GetString("SkipSIMSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be prompted to add a cellular plan..
        /// </summary>
        internal static string SkipSimSetupTooltip {
            get {
                return ResourceManager.GetString("SkipSimSetupTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Update.
        /// </summary>
        internal static string SkipSoftwareUpdate {
            get {
                return ResourceManager.GetString("SkipSoftwareUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be informed about Software Updates during setup..
        /// </summary>
        internal static string SkipSoftwareUpdateTooltip {
            get {
                return ResourceManager.GetString("SkipSoftwareUpdateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terms and Conditions.
        /// </summary>
        internal static string SkipTOS {
            get {
                return ResourceManager.GetString("SkipTOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touch ID.
        /// </summary>
        internal static string SkipTouchID {
            get {
                return ResourceManager.GetString("SkipTouchID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True Tone.
        /// </summary>
        internal static string SkipTrueTone {
            get {
                return ResourceManager.GetString("SkipTrueTone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Completed.
        /// </summary>
        internal static string SkipUpdateCompleted {
            get {
                return ResourceManager.GetString("SkipUpdateCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user does not see the Software Update Complete pane..
        /// </summary>
        internal static string SkipUpdateCompletedTooltip {
            get {
                return ResourceManager.GetString("SkipUpdateCompletedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome.
        /// </summary>
        internal static string SkipWelcome {
            get {
                return ResourceManager.GetString("SkipWelcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If skipped, the user will not be informed about the Welcome screen during setup.
        /// </summary>
        internal static string SkipWelcomeTooltip {
            get {
                return ResourceManager.GetString("SkipWelcomeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slovakia.
        /// </summary>
        internal static string Slovakia {
            get {
                return ResourceManager.GetString("Slovakia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smart Card.
        /// </summary>
        internal static string SmartCardSettings {
            get {
                return ResourceManager.GetString("SmartCardSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to toggle S/MIME encryption.
        /// </summary>
        internal static string SmimeEncryptByDefaultUserOverrideable {
            get {
                return ResourceManager.GetString("SmimeEncryptByDefaultUserOverrideable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows users to toggle on or off the S/MIME encryption in email settings..
        /// </summary>
        internal static string SmimeEncryptByDefaultUserOverrideableTooltip {
            get {
                return ResourceManager.GetString("SmimeEncryptByDefaultUserOverrideableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to choose S/MIME encryption certificate.
        /// </summary>
        internal static string SmimeEncryptionCertificateUuidUserOverrideable {
            get {
                return ResourceManager.GetString("SmimeEncryptionCertificateUuidUserOverrideable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows users to select the signing identity for S/MIME encryption in email settings..
        /// </summary>
        internal static string SmimeEncryptionCertificateUuidUserOverrideableTooltip {
            get {
                return ResourceManager.GetString("SmimeEncryptionCertificateUuidUserOverrideableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to choose S/MIME signing certificate.
        /// </summary>
        internal static string SmimeSigningCertificateUuidUserOverrideable {
            get {
                return ResourceManager.GetString("SmimeSigningCertificateUuidUserOverrideable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows users to select the signing identity for S/MIME signing in email settings..
        /// </summary>
        internal static string SmimeSigningCertificateUuidUserOverrideableTooltip {
            get {
                return ResourceManager.GetString("SmimeSigningCertificateUuidUserOverrideableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow user to toggle S/MIME signing.
        /// </summary>
        internal static string SmimeSigningUserOverrideable {
            get {
                return ResourceManager.GetString("SmimeSigningUserOverrideable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, this setting allows users to toggle on or off the S/MIME signing in email settings..
        /// </summary>
        internal static string SmimeSigningUserOverrideableTooltip {
            get {
                return ResourceManager.GetString("SmimeSigningUserOverrideableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Soft.
        /// </summary>
        internal static string Soft {
            get {
                return ResourceManager.GetString("Soft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specific User.
        /// </summary>
        internal static string SpecificUser {
            get {
                return ResourceManager.GetString("SpecificUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify exclusion value.
        /// </summary>
        internal static string SpecifyExclusionValue {
            get {
                return ResourceManager.GetString("SpecifyExclusionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify how SIMs use cellular data networks.
        /// </summary>
        internal static string SpecifyHowSIMsUseCellularDataNetworks {
            get {
                return ResourceManager.GetString("SpecifyHowSIMsUseCellularDataNetworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speech Recognition.
        /// </summary>
        internal static string SpeechRecognition {
            get {
                return ResourceManager.GetString("SpeechRecognition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application to use speech recognition capabilities..
        /// </summary>
        internal static string SpeechRecognitionInfo {
            get {
                return ResourceManager.GetString("SpeechRecognitionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSID field is being given already at row number {0}.
        /// </summary>
        internal static string SSIDFieldAlreadyGivenAtRowNumberArg {
            get {
                return ResourceManager.GetString("SSIDFieldAlreadyGivenAtRowNumberArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSO Extension.
        /// </summary>
        internal static string SsoExtension {
            get {
                return ResourceManager.GetString("SsoExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure the SSO extension for specific apps on your devices..
        /// </summary>
        internal static string SsoExtensionDescription {
            get {
                return ResourceManager.GetString("SsoExtensionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Layout.
        /// </summary>
        internal static string StartLayout {
            get {
                return ResourceManager.GetString("StartLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Layout XML.
        /// </summary>
        internal static string StartLayoutXml {
            get {
                return ResourceManager.GetString("StartLayoutXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Menu Policies.
        /// </summary>
        internal static string StartMenuPolicies {
            get {
                return ResourceManager.GetString("StartMenuPolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start typing to add an ICCIDs.
        /// </summary>
        internal static string StartTypingToAddAnICCIDs {
            get {
                return ResourceManager.GetString("StartTypingToAddAnICCIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static Code Validation.
        /// </summary>
        internal static string StaticCode {
            get {
                return ResourceManager.GetString("StaticCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature..
        /// </summary>
        internal static string StaticCodePrivacyHelpInfo {
            get {
                return ResourceManager.GetString("StaticCodePrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stealth Mode.
        /// </summary>
        internal static string StealthMode {
            get {
                return ResourceManager.GetString("StealthMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is false, the server operates in stealth mode..
        /// </summary>
        internal static string StealthModeHelp {
            get {
                return ResourceManager.GetString("StealthModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter store app publisher name.
        /// </summary>
        internal static string StoreAppPublisherName {
            get {
                return ResourceManager.GetString("StoreAppPublisherName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escrows Personal Recovery Key to the UEM Server so it will always be accessible in Device Details..
        /// </summary>
        internal static string StoreKeyHelpInfo {
            get {
                return ResourceManager.GetString("StoreKeyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strict Mode.
        /// </summary>
        internal static string StrictMode {
            get {
                return ResourceManager.GetString("StrictMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Consent.
        /// </summary>
        internal static string SubmitSamplesConsent {
            get {
                return ResourceManager.GetString("SubmitSamplesConsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success message.
        /// </summary>
        internal static string SuccessMessage {
            get {
                return ResourceManager.GetString("SuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success title.
        /// </summary>
        internal static string SuccessTitle {
            get {
                return ResourceManager.GetString("SuccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supervision.
        /// </summary>
        internal static string SuperviseDevices {
            get {
                return ResourceManager.GetString("SuperviseDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the device will automatically be supervised over-the-air upon going through the Setup Assistant.
        ///Starting in iOS 13, this option is default enabled and cannot be disabled..
        /// </summary>
        internal static string SuperviseDevicesTooltip {
            get {
                return ResourceManager.GetString("SuperviseDevicesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The devices only support http, https and browser URL schemes as protocols..
        /// </summary>
        internal static string SupportedProtocolSchemesTooltip {
            get {
                return ResourceManager.GetString("SupportedProtocolSchemesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend BitLocker until TPM is initialized.
        /// </summary>
        internal static string SuspendBitlockerUntilTpmIsInitialized {
            get {
                return ResourceManager.GetString("SuspendBitlockerUntilTpmIsInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option for enrollments which require encryption before the TPM is initialized, such as OOBE. The system will be encrypted, but BitLocker will be in a suspended state until TPM initialization..
        /// </summary>
        internal static string SuspendBitlockerUntilTpmIsInitializedInfo {
            get {
                return ResourceManager.GetString("SuspendBitlockerUntilTpmIsInitializedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync Local Password.
        /// </summary>
        internal static string SyncLocalPassword {
            get {
                return ResourceManager.GetString("SyncLocalPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow User Overrides.
        /// </summary>
        internal static string SysExtAllowUserOverrides {
            get {
                return ResourceManager.GetString("SysExtAllowUserOverrides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Override.
        /// </summary>
        internal static string SysExtUserOverride {
            get {
                return ResourceManager.GetString("SysExtUserOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, users can approve additional system extensions that are not explicitly allowed by this policy..
        /// </summary>
        internal static string SysExtUserOverrideDescription {
            get {
                return ResourceManager.GetString("SysExtUserOverrideDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep System Encrypted at All Times.
        /// </summary>
        internal static string SystemEncryptionOnUnenrollment {
            get {
                return ResourceManager.GetString("SystemEncryptionOnUnenrollment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose this option to retain encryption if the profile is removed, device is wiped, removed from Azure AD, disconnected from Work/School account, deleted from the console or Hub is uninstalled. This does not apply to Employee Owned devices..
        /// </summary>
        internal static string SystemEncryptionOnUnenrollmentInfo {
            get {
                return ResourceManager.GetString("SystemEncryptionOnUnenrollmentInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Extensions.
        /// </summary>
        internal static string SystemExtensions {
            get {
                return ResourceManager.GetString("SystemExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Info in status bar.
        /// </summary>
        internal static string SystemInfoStatusBar {
            get {
                return ResourceManager.GetString("SystemInfoStatusBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy All Files.
        /// </summary>
        internal static string SystemPolicyAllFiles {
            get {
                return ResourceManager.GetString("SystemPolicyAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to all protected files..
        /// </summary>
        internal static string SystemPolicyAllFilesPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("SystemPolicyAllFilesPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Desktop Folder.
        /// </summary>
        internal static string SystemPolicyDesktopFolder {
            get {
                return ResourceManager.GetString("SystemPolicyDesktopFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to files on the Desktop..
        /// </summary>
        internal static string SystemPolicyDesktopFolderInfo {
            get {
                return ResourceManager.GetString("SystemPolicyDesktopFolderInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Documents Folder.
        /// </summary>
        internal static string SystemPolicyDocumentsFolder {
            get {
                return ResourceManager.GetString("SystemPolicyDocumentsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to files in Documents..
        /// </summary>
        internal static string SystemPolicyDocumentsFolderInfo {
            get {
                return ResourceManager.GetString("SystemPolicyDocumentsFolderInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Downloads Folder.
        /// </summary>
        internal static string SystemPolicyDownloadsFolder {
            get {
                return ResourceManager.GetString("SystemPolicyDownloadsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to files in Downloads..
        /// </summary>
        internal static string SystemPolicyDownloadsFolderInfo {
            get {
                return ResourceManager.GetString("SystemPolicyDownloadsFolderInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Network Volumes.
        /// </summary>
        internal static string SystemPolicyNetworkVolumes {
            get {
                return ResourceManager.GetString("SystemPolicyNetworkVolumes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to files on Network Volumes..
        /// </summary>
        internal static string SystemPolicyNetworkVolumesInfo {
            get {
                return ResourceManager.GetString("SystemPolicyNetworkVolumesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Removable Volumes.
        /// </summary>
        internal static string SystemPolicyRemovableVolumes {
            get {
                return ResourceManager.GetString("SystemPolicyRemovableVolumes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to files on Removable Volumes..
        /// </summary>
        internal static string SystemPolicyRemovableVolumesInfo {
            get {
                return ResourceManager.GetString("SystemPolicyRemovableVolumesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Policy Sys Admin Files.
        /// </summary>
        internal static string SystemPolicySysAdminFiles {
            get {
                return ResourceManager.GetString("SystemPolicySysAdminFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the application access to some files used in system administration..
        /// </summary>
        internal static string SystemPolicySysAdminFilesPrivacyHelpInfo {
            get {
                return ResourceManager.GetString("SystemPolicySysAdminFilesPrivacyHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Updates.
        /// </summary>
        internal static string SystemUpdate {
            get {
                return ResourceManager.GetString("SystemUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the device clock is within any of the freeze periods, all incoming system updates including security patches will be blocked and cannot be installed. Each individual freeze period is allowed to be at most 90 days long and adjacent freeze periods need to be at least 60 days apart..
        /// </summary>
        internal static string SystemUpdateFreezePeriodInfo {
            get {
                return ResourceManager.GetString("SystemUpdateFreezePeriodInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Freeze Periods Configured.
        /// </summary>
        internal static string SystemUpdateFreezePeriodPlaceHolder {
            get {
                return ResourceManager.GetString("SystemUpdateFreezePeriodPlaceHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team Identifier.
        /// </summary>
        internal static string TeamIdentifier {
            get {
                return ResourceManager.GetString("TeamIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team Identifier is required for System Extension Type..
        /// </summary>
        internal static string TeamIdIdRequiredForSystemExtensionType {
            get {
                return ResourceManager.GetString("TeamIdIdRequiredForSystemExtensionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Details.
        /// </summary>
        internal static string TextDetails {
            get {
                return ResourceManager.GetString("TextDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Element Description.
        /// </summary>
        internal static string TextElementDescription {
            get {
                return ResourceManager.GetString("TextElementDescription", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Thin Clients.
        /// </summary>
        internal static string ThinClients
        {
            get
            {
                return ResourceManager.GetString("ThinClients", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Third Active Ethernet.
        /// </summary>
        internal static string ThirdActiveEthernet {
            get {
                return ResourceManager.GetString("ThirdActiveEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third Ethernet.
        /// </summary>
        internal static string ThirdEthernet {
            get {
                return ResourceManager.GetString("ThirdEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TIF.
        /// </summary>
        internal static string TIF {
            get {
                return ResourceManager.GetString("TIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to time(s).
        /// </summary>
        internal static string times {
            get {
                return ResourceManager.GetString("times", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle All.
        /// </summary>
        internal static string ToggleAll {
            get {
                return ResourceManager.GetString("ToggleAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen saver on Smart Card removal.
        /// </summary>
        internal static string TokenRemovalAction {
            get {
                return ResourceManager.GetString("TokenRemovalAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, when the smart card is removed, the screen saver will be activated. It is advised to also use the Security &amp; Privacy profile to enforce that the screen will be locked immediately when the screen saver is activated..
        /// </summary>
        internal static string TokenRemovalActionInfo {
            get {
                return ResourceManager.GetString("TokenRemovalActionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Assigned Devices.
        /// </summary>
        internal static string TotalAssignedDevice {
            get {
                return ResourceManager.GetString("TotalAssignedDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Enrolled Devices.
        /// </summary>
        internal static string TotalEnrolledDevice {
            get {
                return ResourceManager.GetString("TotalEnrolledDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables validation checks on SSL certificates used in communications between ActiveSync servers, proxies, or gateways, and other email servers. This setting is for testing purposes only and should not be enabled in production..
        /// </summary>
        internal static string TrustAllCertificatesTooltip {
            get {
                return ResourceManager.GetString("TrustAllCertificatesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tvOS {0} + Supervised.
        /// </summary>
        internal static string TvOSArgSupervised {
            get {
                return ResourceManager.GetString("TvOSArgSupervised", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tvOS only.
        /// </summary>
        internal static string TvOsOnly {
            get {
                return ResourceManager.GetString("TvOsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI Access.
        /// </summary>
        internal static string UiLockdown {
            get {
                return ResourceManager.GetString("UiLockdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to During OOBE, the computer name is randomized by default so that every system has an unique name. It is recommended to populate the &apos;Registered Owner&apos; field as Windows will incorporate the first 7 characters from that field and randomize the remaining 8 characters to create the computer name. Please see the {0} for more information..
        /// </summary>
        internal static string UnattendComputerNameText {
            get {
                return ResourceManager.GetString("UnattendComputerNameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Underlined.
        /// </summary>
        internal static string Underlined {
            get {
                return ResourceManager.GetString("Underlined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unicast Responses to Multicast or Broadcast Network Traffic.
        /// </summary>
        internal static string UnicastResponsesToMulticastOrBroadcastNetworkTraffic {
            get {
                return ResourceManager.GetString("UnicastResponsesToMulticastOrBroadcastNetworkTraffic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If it is true, unicast responses to multicast broadcast traffic is blocked..
        /// </summary>
        internal static string UnicastResponsesToMulticastOrBroadcastNetworkTrafficHelp {
            get {
                return ResourceManager.GetString("UnicastResponsesToMulticastOrBroadcastNetworkTrafficHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unified Write Filter.
        /// </summary>
        internal static string UnifiedWriteFilter {
            get {
                return ResourceManager.GetString("UnifiedWriteFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have unsaved profile setting changes. Are you sure you want to leave this page? .
        /// </summary>
        internal static string UnsavedProfilePrompt {
            get {
                return ResourceManager.GetString("UnsavedProfilePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insider - Fast: Major builds including new and existing feature changes limited servicing and/or cumulative updates, Insider - Slow: Major builds including new and existing feature changes, all servicing and/or cumulative updates, Insider - Release: Major builds including the latest features, updates, bugs fixes and application changes..
        /// </summary>
        internal static string UpdateBranchInfoNew {
            get {
                return ResourceManager.GetString("UpdateBranchInfoNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device will receive new profile version.
        /// </summary>
        internal static string UpdatedStatusMessage {
            get {
                return ResourceManager.GetString("UpdatedStatusMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update on Wi-Fi only.
        /// </summary>
        internal static string UpdateOnWifiOnly {
            get {
                return ResourceManager.GetString("UpdateOnWifiOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Other Microsoft Products when Updating Windows.
        /// </summary>
        internal static string UpdateOtherMsftProductsWhenUpdatingWindows {
            get {
                return ResourceManager.GetString("UpdateOtherMsftProductsWhenUpdatingWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Scan Frequency (Hours).
        /// </summary>
        internal static string UpdateScanFrequencyInHours {
            get {
                return ResourceManager.GetString("UpdateScanFrequencyInHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Kiosk XML.
        /// </summary>
        internal static string UploadKioskXML {
            get {
                return ResourceManager.GetString("UploadKioskXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url Access Control.
        /// </summary>
        internal static string UrlAccessControl {
            get {
                return ResourceManager.GetString("UrlAccessControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL Access Controls.
        /// </summary>
        internal static string URLAccessControls {
            get {
                return ResourceManager.GetString("URLAccessControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB Storage.
        /// </summary>
        internal static string USBStorage {
            get {
                return ResourceManager.GetString("USBStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Common File Path Exclusions.
        /// </summary>
        internal static string UseCommonFilePathExclusions {
            get {
                return ResourceManager.GetString("UseCommonFilePathExclusions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use setting determines if common paths exclusions will be added or excluded from the filter.
        /// </summary>
        internal static string UseCommonFilePathExclusionsHelp {
            get {
                return ResourceManager.GetString("UseCommonFilePathExclusionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Common Registry Exclusions.
        /// </summary>
        internal static string UseCommonRegistryExclusions {
            get {
                return ResourceManager.GetString("UseCommonRegistryExclusions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use setting determines if common registry exclusions will be added or excluded from the filter.
        /// </summary>
        internal static string UseCommonRegistryExclusionsHelp {
            get {
                return ResourceManager.GetString("UseCommonRegistryExclusionsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Encrypt Used Space During Initial Encryption.
        /// </summary>
        internal static string UsedSpaceEncryption {
            get {
                return ResourceManager.GetString("UsedSpaceEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage apps using Device Traffic Rules in the Tunnel Configuration..
        /// </summary>
        internal static string UseDTRForAppMappingToolTip {
            get {
                return ResourceManager.GetString("UseDTRForAppMappingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Intelligent Hub for enforcement.
        /// </summary>
        internal static string UseIntelligentHubForEnforcement {
            get {
                return ResourceManager.GetString("UseIntelligentHubForEnforcement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables or disables Intelligent Hub enforcement of disk encryption. When disabled, employees will not be prompted with Hub notifications. Only the Native Device Management settings above will apply..
        /// </summary>
        internal static string UseIntelligentHubForEnforcementHelpInfo {
            get {
                return ResourceManager.GetString("UseIntelligentHubForEnforcementHelpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use OAuth.
        /// </summary>
        internal static string UseOauth {
            get {
                return ResourceManager.GetString("UseOauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Password If TPM Not Present.
        /// </summary>
        internal static string UsePasswordIfTpmNotAvailable {
            get {
                return ResourceManager.GetString("UsePasswordIfTpmNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Proxy for Local (Intranet) Addresses.
        /// </summary>
        internal static string UseProxyForLocalAddresses {
            get {
                return ResourceManager.GetString("UseProxyForLocalAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this will use the configured Proxy Server for local intranet addresses..
        /// </summary>
        internal static string UseProxyForLocalHelp {
            get {
                return ResourceManager.GetString("UseProxyForLocalHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Proxy Server.
        /// </summary>
        internal static string UseProxyServer {
            get {
                return ResourceManager.GetString("UseProxyServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this setting to manually specify the Server Address, Port and exception URLs for the proxy..
        /// </summary>
        internal static string UseProxyServerHelp {
            get {
                return ResourceManager.GetString("UseProxyServerHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off, data can be shared with any application.
        /// </summary>
        internal static string UserCanShareData {
            get {
                return ResourceManager.GetString("UserCanShareData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Details.
        /// </summary>
        internal static string UserDetails {
            get {
                return ResourceManager.GetString("UserDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Distinguished Name.
        /// </summary>
        internal static string UserDistinguishedNameLookUpText {
            get {
                return ResourceManager.GetString("UserDistinguishedNameLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        internal static string UserName {
            get {
                return ResourceManager.GetString("UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show user pairing dialog.
        /// </summary>
        internal static string UserPairing {
            get {
                return ResourceManager.GetString("UserPairing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User selected outside of Work Profile.
        /// </summary>
        internal static string UserSelectedOutsideOfWorkProfile {
            get {
                return ResourceManager.GetString("UserSelectedOutsideOfWorkProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User S/MIME Encryption Certificate.
        /// </summary>
        internal static string UserSmimeEncryptionLookUpText {
            get {
                return ResourceManager.GetString("UserSmimeEncryptionLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User S/MIME Signing Certificate.
        /// </summary>
        internal static string UserSmimeSigningLookUpText {
            get {
                return ResourceManager.GetString("UserSmimeSigningLookUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Setup Script.
        /// </summary>
        internal static string UseSetUpScript {
            get {
                return ResourceManager.GetString("UseSetUpScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this to configure a proxy script URL.
        /// </summary>
        internal static string UseSetUpScriptHelp {
            get {
                return ResourceManager.GetString("UseSetUpScriptHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Site Auto-Discovery.
        /// </summary>
        internal static string UseSiteAutoDiscovery {
            get {
                return ResourceManager.GetString("UseSiteAutoDiscovery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Windows Log-On Credentials.
        /// </summary>
        internal static string UseWindowsLogonCredentials {
            get {
                return ResourceManager.GetString("UseWindowsLogonCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Windows-Recommended Settings.
        /// </summary>
        internal static string UseWindowsRecommendedSettings {
            get {
                return ResourceManager.GetString("UseWindowsRecommendedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UWP.
        /// </summary>
        internal static string UWP {
            get {
                return ResourceManager.GetString("UWP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values.
        /// </summary>
        internal static string Values {
            get {
                return ResourceManager.GetString("Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Videos.
        /// </summary>
        internal static string Videos {
            get {
                return ResourceManager.GetString("Videos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grid only shows the devices through direct assignments, however this resource might have workflow based assignments too..
        /// </summary>
        internal static string ViewDeviceAssignmentInfoMessage {
            get {
                return ResourceManager.GetString("ViewDeviceAssignmentInfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View List.
        /// </summary>
        internal static string ViewList {
            get {
                return ResourceManager.GetString("ViewList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Workflow.
        /// </summary>
        internal static string ViewWorkflow {
            get {
                return ResourceManager.GetString("ViewWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundle ID.
        /// </summary>
        internal static string VMwareTunnelClientBusinessBundleId {
            get {
                return ResourceManager.GetString("VMwareTunnelClientBusinessBundleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only for use when advised by VMware Workspace ONE team..
        /// </summary>
        internal static string VMwareTunnelClientBusinessBundleIdInfo {
            get {
                return ResourceManager.GetString("VMwareTunnelClientBusinessBundleIdInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volume to Protect.
        /// </summary>
        internal static string VolumeToProtect {
            get {
                return ResourceManager.GetString("VolumeToProtect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the volume is currently protected by UWF in the current session.
        /// </summary>
        internal static string VolumeToProtectHelp {
            get {
                return ResourceManager.GetString("VolumeToProtectHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weak Biometric.
        /// </summary>
        internal static string WeakBiometric {
            get {
                return ResourceManager.GetString("WeakBiometric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Unlocked.
        /// </summary>
        internal static string WhenUnlocked {
            get {
                return ResourceManager.GetString("WhenUnlocked", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allowed AirPlay Destinations.
        /// </summary>
        internal static string WhiteListedAirPlayDestinations
        {
            get
            {
                return ResourceManager.GetString("WhiteListedAirPlayDestinations", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Allow Apps that can Utilize Widgets.
        /// </summary>
        internal static string WhitelistAppsCanUtilizeWidgets {
            get {
                return ResourceManager.GetString("AllowlistAppsCanUtilizeWidgets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wi-Fi Assist.
        /// </summary>
        internal static string WiFiAssistPolicy {
            get {
                return ResourceManager.GetString("WiFiAssistPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited Cellular Data.
        /// </summary>
        internal static string WifiAssistThree {
            get {
                return ResourceManager.GetString("WifiAssistThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string WifiAssistTwo {
            get {
                return ResourceManager.GetString("WifiAssistTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WiFi Profiles.
        /// </summary>
        internal static string WifiProfilesText {
            get {
                return ResourceManager.GetString("WifiProfilesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win32.
        /// </summary>
        internal static string Win32 {
            get {
                return ResourceManager.GetString("Win32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace ONE Intelligent Hub.
        /// </summary>
        internal static string Win32Agent {
            get {
                return ResourceManager.GetString("Win32Agent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win By Pass For Local.
        /// </summary>
        internal static string WinByPassForLocal {
            get {
                return ResourceManager.GetString("WinByPassForLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Number of Complex Characters.
        /// </summary>
        internal static string WinDesktopMinimumNumberOfComplexCharacters {
            get {
                return ResourceManager.GetString("WinDesktopMinimumNumberOfComplexCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complex passwords should contain characters from three out of four categories: uppercase (A-Z), lowercase (a -z), digits (0-9), special characters (!, $, #, %, etc.). A complexity value of 3 is enforced for Local Accounts irrespective of the complexity value configured..
        /// </summary>
        internal static string WinDesktopMinimumNumberOfComplexCharactersTooltip {
            get {
                return ResourceManager.GetString("WinDesktopMinimumNumberOfComplexCharactersTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local accounts support a minimum length of 6 and Microsoft accounts support a minimum length of 8 characters..
        /// </summary>
        internal static string WinDesktopMinimumPasswordLengthToolTip {
            get {
                return ResourceManager.GetString("WinDesktopMinimumPasswordLengthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kiosk.
        /// </summary>
        internal static string Windows10Kiosk {
            get {
                return ResourceManager.GetString("Windows10Kiosk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insider - Fast (Less Stable, Dev Build).
        /// </summary>
        internal static string WindowsInsiderFastNew {
            get {
                return ResourceManager.GetString("WindowsInsiderFastNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insider - Slow (More Stable, Dev Build).
        /// </summary>
        internal static string WindowsInsiderSlowNew {
            get {
                return ResourceManager.GetString("WindowsInsiderSlowNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the text to appear on the Start Menu and App Catalog..
        /// </summary>
        internal static string WindowsLabelTooltip {
            get {
                return ResourceManager.GetString("WindowsLabelTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Licensing - License Key is a required field.
        /// </summary>
        internal static string WindowsLicenseKeyIsRequired {
            get {
                return ResourceManager.GetString("WindowsLicenseKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid license key contains 29 characters including hyphens..
        /// </summary>
        internal static string WindowsLicensingLicenseKeyToolTip {
            get {
                return ResourceManager.GetString("WindowsLicensingLicenseKeyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Desktop.
        /// </summary>
        internal static string WindowsPlatformLabel {
            get {
                return ResourceManager.GetString("WindowsPlatformLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe Protected performs a wipe that cannot be circumvented, in some device configurations this command may leave the device unable to boot. Wipe and persist provisioning data will restore provisioning data after the wipe..
        /// </summary>
        internal static string WindowsRemoteWipeToolTip {
            get {
                return ResourceManager.GetString("WindowsRemoteWipeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select update groups that are auto-applied to the assigned devices.
        ///Note: You will be prompted to accept Update EULAs on behalf of all your users.
        ///.
        /// </summary>
        internal static string WindowsUpdatesPayloadUpdateGroupInfo {
            get {
                return ResourceManager.GetString("WindowsUpdatesPayloadUpdateGroupInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the URL to open..
        /// </summary>
        internal static string WindowsUrlTooltip {
            get {
                return ResourceManager.GetString("WindowsUrlTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires VPN to be active for app connectivity. If VPN is disconnected then apps will be locked down with no network accessibility.
        /// </summary>
        internal static string Winlockdown {
            get {
                return ResourceManager.GetString("Winlockdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win Split Tunnel.
        /// </summary>
        internal static string WinSplitTunnel {
            get {
                return ResourceManager.GetString("WinSplitTunnel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win VPN Trusted Network Detection.
        /// </summary>
        internal static string WinVpnTrustedNetworkDetection {
            get {
                return ResourceManager.GetString("WinVpnTrustedNetworkDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe.
        /// </summary>
        internal static string Wipe {
            get {
                return ResourceManager.GetString("Wipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the wipe action you wish to take.
        /// </summary>
        internal static string WipeAction {
            get {
                return ResourceManager.GetString("WipeAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe and Persist Provisioning Data.
        /// </summary>
        internal static string WipePersistProvisionedData {
            get {
                return ResourceManager.GetString("WipePersistProvisionedData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe Persist User Data.
        /// </summary>
        internal static string WipePersistUserData {
            get {
                return ResourceManager.GetString("WipePersistUserData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wipe Protected.
        /// </summary>
        internal static string WipeProtected {
            get {
                return ResourceManager.GetString("WipeProtected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow personal apps to share data with work apps.
        /// </summary>
        internal static string WorkAllowPersonalShareWithWorkApp {
            get {
                return ResourceManager.GetString("WorkAllowPersonalShareWithWorkApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the user can share file / picture / data from the personal side into the managed profile, either by sending them from the personal side, or by picking up data within an app in the managed profile.
        /// </summary>
        internal static string WorkAllowPersonalShareWithWorkAppTooltip {
            get {
                return ResourceManager.GetString("WorkAllowPersonalShareWithWorkAppTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices with multiple assignments will receive the workflow in priority order. Adjusting the priority for a single assignment will automatically reprioritize other assignments. Select the assignment to edit..
        /// </summary>
        internal static string WorkflowAssignmentsDesc {
            get {
                return ResourceManager.GetString("WorkflowAssignmentsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow for {0}.
        /// </summary>
        internal static string WorkflowForResource {
            get {
                return ResourceManager.GetString("WorkflowForResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workflow Summary.
        /// </summary>
        internal static string WorkflowSummary {
            get {
                return ResourceManager.GetString("WorkflowSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WorkManagedProductivity.
        /// </summary>
        internal static string WorkManagedProductivity {
            get {
                return ResourceManager.GetString("WorkManagedProductivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Work Profile.
        /// </summary>
        internal static string WorkProfile {
            get {
                return ResourceManager.GetString("WorkProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Work Profile settings to manage policies across work-only apps. Configure Work Managed Device settings to apply policies across the entire device. Configuration of both Work Profile and Work Managed Device settings will apply to Corporate Owned Personally Enabled devices..
        /// </summary>
        internal static string WorkRestrictionPolicyDescription {
            get {
                return ResourceManager.GetString("WorkRestrictionPolicyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WPA3 Enterprise.
        /// </summary>
        internal static string WPA3Enterprise {
            get {
                return ResourceManager.GetString("WPA3Enterprise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WPA3.
        /// </summary>
        internal static string WPA3Personal {
            get {
                return ResourceManager.GetString("WPA3Personal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Filter.
        /// </summary>
        internal static string WriteFilter {
            get {
                return ResourceManager.GetString("WriteFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if UWF is enabled for the current session..
        /// </summary>
        internal static string WriteFilterHelp {
            get {
                return ResourceManager.GetString("WriteFilterHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X Value.
        /// </summary>
        internal static string XValue {
            get {
                return ResourceManager.GetString("XValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y Value.
        /// </summary>
        internal static string YValue {
            get {
                return ResourceManager.GetString("YValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zero tolerance blocking level – block all unknown executables.
        /// </summary>
        internal static string ZeroBlockingLevel {
            get {
                return ResourceManager.GetString("ZeroBlockingLevel", resourceCulture);
            }
        }
    }
}
