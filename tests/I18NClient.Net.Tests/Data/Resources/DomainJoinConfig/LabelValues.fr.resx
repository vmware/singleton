<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDomainJoinConfig" xml:space="preserve">
    <value>Nouvelle jonction de domaine</value>
  </data>
  <data name="AddedDJSuccessfully" xml:space="preserve">
    <value>La jonction de domaine a bien été ajoutée</value>
  </data>
  <data name="AddedDJUnSuccessfully" xml:space="preserve">
    <value>Échec de l'enregistrement de la jonction de domaine</value>
  </data>
  <data name="CreateLocalUser" xml:space="preserve">
    <value>Créer un utilisateur local</value>
  </data>
  <data name="CreateLocalUserTooltip" xml:space="preserve">
    <value>Sélectionnez cette option pour créer un compte d'utilisateur local afin de vous connecter au terminal. Si vous ne sélectionnez pas cette option, vous devrez créer un compte d'utilisateur à l'aide d'un profil personnalisé.</value>
  </data>
  <data name="DeletedDJSuccessfully" xml:space="preserve">
    <value>La jonction de domaine a bien été supprimée</value>
  </data>
  <data name="DeleteDomainJoinConfig" xml:space="preserve">
    <value>Supprimer la jonction de domaine</value>
  </data>
  <data name="DJDeleteFailure" xml:space="preserve">
    <value>Échec de la suppression de la jonction de domaine</value>
  </data>
  <data name="DJUsernameCannotHaveRestrictedCharacters" xml:space="preserve">
    <value>Le nom d'utilisateur ne peut pas contenir ces caractères : / \ [ ] : | &lt; &gt; + = ; , ? * % @</value>
  </data>
  <data name="DomainFriendlyName" xml:space="preserve">
    <value>Nom convivial du domaine</value>
  </data>
  <data name="DomainFriendlyNameTooltip" xml:space="preserve">
    <value>Le paramètre de nom de domaine hérité est configuré dans les paramètres des services d'annuaire. Il s'agit de la valeur couramment utilisée avec le format DOMAINE\nomutilisateur lors de la connexion avec les informations d'identification du domaine Active Directory. Si ce paramètre n'est pas configuré, utilisez la même valeur que le nom de domaine (champ précédent).</value>
  </data>
  <data name="DomainJoin" xml:space="preserve">
    <value>Jonction de domaine</value>
  </data>
  <data name="DomainJoinConfigListDescription" xml:space="preserve">
    <value>Jonction de domaine </value>
  </data>
  <data name="DomainJoinConfigWillBeDeleted" xml:space="preserve">
    <value>La suppression de cette configuration de jonction de domaine entraînera sa suppression sur les terminaux inscrits mais qui n'ont pas été enrôlés. Les terminaux enrôlés ne sont pas concernés.
Voulez-vous continuer ?</value>
  </data>
  <data name="DomainJoinName" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="DomainJoinType" xml:space="preserve">
    <value>Type de jonction de domaine</value>
  </data>
  <data name="DomainServerUrl" xml:space="preserve">
    <value>Nom de domaine</value>
  </data>
  <data name="DomainServerUrlHelptext" xml:space="preserve">
    <value>Cliquez ici pour configurer cette valeur dans les paramètres {0}.</value>
    <comment>{0} will be replaced with link to Directory Services settings page with the the text "Directory Services"</comment>
  </data>
  <data name="DomainServerUrlTooltip" xml:space="preserve">
    <value>Nom complet du composant de domaine du domaine Active Directory (exemple : dc01.contoso.com). Ce serveur doit être configuré dans les paramètres de services d'annuaire avant d'ajouter une jonction de domaine.</value>
  </data>
  <data name="EditDomainJoinConfig" xml:space="preserve">
    <value>Modifier la jonction de domaine</value>
  </data>
  <data name="LocalUsername" xml:space="preserve">
    <value>Nom d'utilisateur local</value>
  </data>
  <data name="LocalUsernamePassword" xml:space="preserve">
    <value>Mot de passe de l'utilisateur local</value>
  </data>
  <data name="MachineNameFormat" xml:space="preserve">
    <value>Format du nom de la machine</value>
  </data>
  <data name="MachineNameFormatTooltip" xml:space="preserve">
    <value>Attribuez au terminal un nom unique de 15 caractères. Pour obtenir de l'aide afin de générer un nom unique, utilisez %SERIAL%, qui inclut un numéro de série spécifique au matériel, ou %RAND:[#]%, qui génère des caractères aléatoires de longueur #. Pour réduire la possibilité de créer des noms d'ordinateur en double lors de l'utilisation de la génération de nombres aléatoires, la longueur du nombre aléatoire %RAND:[#]% doit être supérieure ou égale à 7.</value>
  </data>
  <data name="MakeAdministrator" xml:space="preserve">
    <value>Définir en tant qu'administrateur</value>
  </data>
  <data name="MakeAdministratorTooltip" xml:space="preserve">
    <value>Ajoutez le compte d'utilisateur local au groupe d'administrateurs sur le terminal.</value>
  </data>
  <data name="NoDomainJoinConfig" xml:space="preserve">
    <value>Aucune configuration de jonction de domaine ajoutée dans ce groupe organisationnel</value>
  </data>
  <data name="OnPremActiveDirectory" xml:space="preserve">
    <value>Active Directory sur site</value>
  </data>
  <data name="SmartGroupAlreadyAssigned" xml:space="preserve">
    <value>est déjà attribué à</value>
  </data>
  <data name="Workgroup" xml:space="preserve">
    <value>Groupe de travail</value>
  </data>
  <data name="WorkGroupName" xml:space="preserve">
    <value>Groupe de travail</value>
  </data>
  <data name="WorkgroupNameTooltip" xml:space="preserve">
    <value>Nom du groupe de travail auquel le client sera joint.</value>
  </data>
</root>