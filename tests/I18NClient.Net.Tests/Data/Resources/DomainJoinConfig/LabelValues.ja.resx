<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDomainJoinConfig" xml:space="preserve">
    <value>新しいドメイン参加</value>
  </data>
  <data name="AddedDJSuccessfully" xml:space="preserve">
    <value>ドメイン参加が正常に追加されました</value>
  </data>
  <data name="AddedDJUnSuccessfully" xml:space="preserve">
    <value>ドメイン参加の保存に失敗しました</value>
  </data>
  <data name="CreateLocalUser" xml:space="preserve">
    <value>ローカル ユーザーの作成</value>
  </data>
  <data name="CreateLocalUserTooltip" xml:space="preserve">
    <value>選択して、ローカル ユーザー アカウントを作成し、デバイスにログインします。選択しない場合、カスタム プロファイルを使用して、ユーザー アカウントを作成する必要があります。</value>
  </data>
  <data name="DeletedDJSuccessfully" xml:space="preserve">
    <value>ドメイン参加が正常に削除されました</value>
  </data>
  <data name="DeleteDomainJoinConfig" xml:space="preserve">
    <value>ドメイン参加を削除</value>
  </data>
  <data name="DJDeleteFailure" xml:space="preserve">
    <value>ドメイン参加の削除に失敗しました</value>
  </data>
  <data name="DJUsernameCannotHaveRestrictedCharacters" xml:space="preserve">
    <value>ユーザー名に次の文字を使用することはできません: / \ [ ] : | &lt; &gt; + = ; , ? * % @</value>
  </data>
  <data name="DomainFriendlyName" xml:space="preserve">
    <value>ドメイン フレンドリ名</value>
  </data>
  <data name="DomainFriendlyNameTooltip" xml:space="preserve">
    <value>ディレクトリ サービス設定で構成されたレガシー ドメイン名パラメータ。これは、Active Directory ドメインの認証情報でサインインするときに、DOMAIN\username 形式で通常使用される値です。このパラメータが構成されていない場合は、[ドメイン名]（前のフィールド）と同じ値を使用します。</value>
  </data>
  <data name="DomainJoin" xml:space="preserve">
    <value>ドメイン参加</value>
  </data>
  <data name="DomainJoinConfigListDescription" xml:space="preserve">
    <value>ドメイン参加</value>
  </data>
  <data name="DomainJoinConfigWillBeDeleted" xml:space="preserve">
    <value>このドメイン参加構成を削除すると、登録されてはいるものの未加入のデバイスからも削除されます。加入済みのデバイスに影響はありません。
続行しますか?</value>
  </data>
  <data name="DomainJoinName" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="DomainJoinType" xml:space="preserve">
    <value>ドメイン参加タイプ</value>
  </data>
  <data name="DomainServerUrl" xml:space="preserve">
    <value>ドメイン名</value>
  </data>
  <data name="DomainServerUrlHelptext" xml:space="preserve">
    <value>{0} 設定でこの値を構成するには、ここをクリックしてください。</value>
    <comment>{0} will be replaced with link to Directory Services settings page with the the text "Directory Services"</comment>
  </data>
  <data name="DomainServerUrlTooltip" xml:space="preserve">
    <value>Active Directory ドメインの完全なドメイン コンポーネント名 (例: dc01.contoso.com)。ドメイン参加を追加する前に、このサーバをディレクトリ サービス設定で構成する必要があります。</value>
  </data>
  <data name="EditDomainJoinConfig" xml:space="preserve">
    <value>ドメイン参加を編集</value>
  </data>
  <data name="LocalUsername" xml:space="preserve">
    <value>ローカルのユーザー名</value>
  </data>
  <data name="LocalUsernamePassword" xml:space="preserve">
    <value>ローカル ユーザーのパスワード</value>
  </data>
  <data name="MachineNameFormat" xml:space="preserve">
    <value>マシン名の形式</value>
  </data>
  <data name="MachineNameFormatTooltip" xml:space="preserve">
    <value>デバイスの 15 文字の一意の名前を入力します。一意の名前を生成するには、ハードウェア固有のシリアル番号を含んだ %SERIAL% を使用するか、長さが # のランダムな文字を生成する %RAND:[#]% を使用します。乱数生成機能の使用時に、重複するコンピュータ名が生成される可能性を最小限に抑えるために、乱数の長さ [%RAND:[#]%] を 7 以上にする必要があります。</value>
  </data>
  <data name="MakeAdministrator" xml:space="preserve">
    <value>管理者にする</value>
  </data>
  <data name="MakeAdministratorTooltip" xml:space="preserve">
    <value>デバイスでローカル ユーザー アカウントを管理者グループに追加します。</value>
  </data>
  <data name="NoDomainJoinConfig" xml:space="preserve">
    <value>この組織グループにはドメイン参加構成が追加されていません</value>
  </data>
  <data name="OnPremActiveDirectory" xml:space="preserve">
    <value>オンプレミスの Active Directory</value>
  </data>
  <data name="SmartGroupAlreadyAssigned" xml:space="preserve">
    <value>はすでに次に割り当てられています:</value>
  </data>
  <data name="Workgroup" xml:space="preserve">
    <value>ワークグループ</value>
  </data>
  <data name="WorkGroupName" xml:space="preserve">
    <value>ワークグループ</value>
  </data>
  <data name="WorkgroupNameTooltip" xml:space="preserve">
    <value>クライアントが参加するワークグループの名前。</value>
  </data>
</root>