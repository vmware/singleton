<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDomainJoinConfig" xml:space="preserve">
    <value>Nuova unione dominio</value>
  </data>
  <data name="AddedDJSuccessfully" xml:space="preserve">
    <value>Unione dominio aggiunta correttamente</value>
  </data>
  <data name="AddedDJUnSuccessfully" xml:space="preserve">
    <value>Salvataggio dell'unione dominio non riuscito</value>
  </data>
  <data name="CreateLocalUser" xml:space="preserve">
    <value>Crea utente locale</value>
  </data>
  <data name="CreateLocalUserTooltip" xml:space="preserve">
    <value>Seleziona per creare un account utente locale per accedere al dispositivo. Se questa opzione non è selezionata, sarà necessario creare un account utente utilizzando un profilo personalizzato.</value>
  </data>
  <data name="DeletedDJSuccessfully" xml:space="preserve">
    <value>Unione dominio eliminata correttamente</value>
  </data>
  <data name="DeleteDomainJoinConfig" xml:space="preserve">
    <value>Elimina unione dominio</value>
  </data>
  <data name="DJDeleteFailure" xml:space="preserve">
    <value>Eliminazione dell'unione dominio non riuscita</value>
  </data>
  <data name="DJUsernameCannotHaveRestrictedCharacters" xml:space="preserve">
    <value>Il nome utente non può contenere i seguenti caratteri: / \ [ ] : | &lt; &gt; + = ; , ? * % @</value>
  </data>
  <data name="DomainFriendlyName" xml:space="preserve">
    <value>Nome dominio descrittivo</value>
  </data>
  <data name="DomainFriendlyNameTooltip" xml:space="preserve">
    <value>Il parametro Nome dominio legacy configurato nelle impostazioni dei servizi directory. Questo è il valore comunemente utilizzato con il formato DOMINIO\nomeutente quando si accede con le credenziali di dominio di Active Directory. Se questo parametro non è configurato, utilizza lo stesso valore di Nome dominio (campo precedente).</value>
  </data>
  <data name="DomainJoin" xml:space="preserve">
    <value>Unione dominio</value>
  </data>
  <data name="DomainJoinConfigListDescription" xml:space="preserve">
    <value>Unione dominio </value>
  </data>
  <data name="DomainJoinConfigWillBeDeleted" xml:space="preserve">
    <value>L'eliminazione di questa configurazione di unione dominio ne comporta la rimozione dai dispositivi non registrati. I dispositivi registrati non saranno interessati.
Continuare?</value>
  </data>
  <data name="DomainJoinName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="DomainJoinType" xml:space="preserve">
    <value>Tipo unione dominio</value>
  </data>
  <data name="DomainServerUrl" xml:space="preserve">
    <value>Nome dominio</value>
  </data>
  <data name="DomainServerUrlHelptext" xml:space="preserve">
    <value>Fai clic qui per configurare questo valore nelle impostazioni di {0}.</value>
    <comment>{0} will be replaced with link to Directory Services settings page with the the text "Directory Services"</comment>
  </data>
  <data name="DomainServerUrlTooltip" xml:space="preserve">
    <value>Il nome del componente completo del dominio Active Directory (ad esempio: dc01.contoso.com). Questo server deve essere configurato nelle impostazioni dei servizi directory prima dell'aggiunta al dominio.</value>
  </data>
  <data name="EditDomainJoinConfig" xml:space="preserve">
    <value>Modifica unione dominio</value>
  </data>
  <data name="LocalUsername" xml:space="preserve">
    <value>Nome utente locale</value>
  </data>
  <data name="LocalUsernamePassword" xml:space="preserve">
    <value>Password utente locale</value>
  </data>
  <data name="MachineNameFormat" xml:space="preserve">
    <value>Formato del nome computer</value>
  </data>
  <data name="MachineNameFormatTooltip" xml:space="preserve">
    <value>Immetti un nome univoco di 15 caratteri per il dispositivo. Per generare un nome univoco, utilizza %SERIAL%, che include un numero di serie specifico per l'hardware, oppure %RAND:[#]%, che genera caratteri casuali di lunghezza #. Per ridurre al minimo la possibilità di creare nomi di computer duplicati quando si utilizza la generazione di numeri casuali, la lunghezza del numero casuale [%RAND:[#]%] deve essere superiore o pari a 7.</value>
  </data>
  <data name="MakeAdministrator" xml:space="preserve">
    <value>Rendi amministratore</value>
  </data>
  <data name="MakeAdministratorTooltip" xml:space="preserve">
    <value>Aggiungi l'account utente locale al gruppo Amministratori sul dispositivo.</value>
  </data>
  <data name="NoDomainJoinConfig" xml:space="preserve">
    <value>Nessuna configurazione di unione dominio aggiunta in questo gruppo</value>
  </data>
  <data name="OnPremActiveDirectory" xml:space="preserve">
    <value>Active Directory on-premise</value>
  </data>
  <data name="SmartGroupAlreadyAssigned" xml:space="preserve">
    <value>è già assegnato a</value>
  </data>
  <data name="Workgroup" xml:space="preserve">
    <value>Gruppo di lavoro</value>
  </data>
  <data name="WorkGroupName" xml:space="preserve">
    <value>Gruppo di lavoro</value>
  </data>
  <data name="WorkgroupNameTooltip" xml:space="preserve">
    <value>Il nome del gruppo di lavoro al quale verrà associato il client.</value>
  </data>
</root>