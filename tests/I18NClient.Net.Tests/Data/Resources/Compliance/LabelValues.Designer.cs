//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WanderingWiFi.AirWatch.Globalization.Resources.Compliance {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LabelValues {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LabelValues() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WanderingWiFi.AirWatch.Globalization.Resources.Compliance.LabelValues", typeof(LabelValues).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action (Boxer).
        /// </summary>
        internal static string ActionBoxer {
            get {
                return ResourceManager.GetString("ActionBoxer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert the Application Bundle ID for individual applications or leverage an App Group for multiple apps to use the Application List compliance rule.
        /// </summary>
        internal static string AppIdentifierTooltip {
            get {
                return ResourceManager.GetString("AppIdentifierTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required version of application is missing in compliance app list rule..
        /// </summary>
        internal static string ComplianceMissingRequiredVersionApps {
            get {
                return ResourceManager.GetString("ComplianceMissingRequiredVersionApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compliance Policies.
        /// </summary>
        internal static string CompliancePolicies {
            get {
                return ResourceManager.GetString("CompliancePolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compliance Policy.
        /// </summary>
        internal static string CompliancePolicy {
            get {
                return ResourceManager.GetString("CompliancePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All Managed Apps.
        /// </summary>
        internal static string DisableAllManagedApps {
            get {
                return ResourceManager.GetString("DisableAllManagedApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Managed App.
        /// </summary>
        internal static string DisableManagedApp {
            get {
                return ResourceManager.GetString("DisableManagedApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Device Assignment.
        /// </summary>
        internal static string EditDeviceAssignment {
            get {
                return ResourceManager.GetString("EditDeviceAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligent Hub 2011 or later is required to use encryption..
        /// </summary>
        internal static string EncryptionRuleWarning {
            get {
                return ResourceManager.GetString("EncryptionRuleWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please perform disk clean up..
        /// </summary>
        internal static string FreeDiskSpaceExceedsResolution {
            get {
                return ResourceManager.GetString("FreeDiskSpaceExceedsResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disk Encryption.
        /// </summary>
        internal static string LaptopEncryption {
            get {
                return ResourceManager.GetString("LaptopEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Settings Group Type Id.
        /// </summary>
        internal static string ProfileSettingsGroupTypeId {
            get {
                return ResourceManager.GetString("ProfileSettingsGroupTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not applied to some drives.
        /// </summary>
        internal static string SomeDrivesNotEncrypted {
            get {
                return ResourceManager.GetString("SomeDrivesNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspended.
        /// </summary>
        internal static string Suspended {
            get {
                return ResourceManager.GetString("Suspended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not applied to system drive.
        /// </summary>
        internal static string SystemDriveNotEncrypted {
            get {
                return ResourceManager.GetString("SystemDriveNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token revocation has been disabled. This action will not be taken..
        /// </summary>
        internal static string TokenRevocationWillNotWork {
            get {
                return ResourceManager.GetString("TokenRevocationWillNotWork", resourceCulture);
            }
        }
    }
}
