<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEditScripts" xml:space="preserve">
    <value>Add/Edit Scripts</value>
  </data>
  <data name="AddEditScriptsHelp" xml:space="preserve">
    <value>Controls access to add or edit device scripts</value>
  </data>
  <data name="AppCatalogCustomization" xml:space="preserve">
    <value>App Catalog Customization</value>
  </data>
  <data name="CatalogCustomizationNotDefined" xml:space="preserve">
    <value>App catalog customization details are not present for Script, cannot enable Show In Hub</value>
  </data>
  <data name="CatalogIconLimit" xml:space="preserve">
    <value>Icon exceeds the maximum size limit of 1MB.</value>
  </data>
  <data name="ConfigureComplexSequences" xml:space="preserve">
    <value>Configure complex sequences</value>
  </data>
  <data name="ConfigureComplexSequencesInfo" xml:space="preserve">
    <value>Use Scripts as a resource in Freestyle to configure complex device sequences that include apps and profiles.</value>
  </data>
  <data name="DeleteAssignmentsWarning" xml:space="preserve">
    <value>Are you sure you want to delete this assignment?
Doing so will remove the script from all assigned devices.</value>
  </data>
  <data name="DeleteScripts" xml:space="preserve">
    <value>Delete Scripts</value>
  </data>
  <data name="DeleteScriptsHelp" xml:space="preserve">
    <value>Controls access to delete device scripts</value>
  </data>
  <data name="DuplicateServerCertificate" xml:space="preserve">
    <value>The uploaded certificate already exists in the existing set of server certificates.</value>
  </data>
  <data name="EditScript" xml:space="preserve">
    <value>Edit Script</value>
  </data>
  <data name="EITHER64OR32BIT" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="EnableSelfService" xml:space="preserve">
    <value>Enable self service</value>
  </data>
  <data name="EnableSelfServiceInfo" xml:space="preserve">
    <value>Add Scripts to the Intelligent Hub Catalog for device self service.</value>
  </data>
  <data name="EndUserInteraction" xml:space="preserve">
    <value>End-User Interaction</value>
  </data>
  <data name="EndUserInteractionInfo" xml:space="preserve">
    <value>Select, if the script requires input from end-users for completion. When deselected, all prompts will be suppressed.</value>
  </data>
  <data name="ExecutionContextWindows" xml:space="preserve">
    <value>Execution Context &amp; Privileges</value>
  </data>
  <data name="ExecutionTime" xml:space="preserve">
    <value>Execution Time</value>
  </data>
  <data name="HoursLabel" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="LastExecutionTime" xml:space="preserve">
    <value>Last Execution Time</value>
  </data>
  <data name="NetworkChange" xml:space="preserve">
    <value>Network Change</value>
  </data>
  <data name="ONLY32BIT" xml:space="preserve">
    <value>32-bit</value>
  </data>
  <data name="ONLY64BIT" xml:space="preserve">
    <value>64-bit</value>
  </data>
  <data name="PostActionButtonText" xml:space="preserve">
    <value>Post-Action Button Text</value>
  </data>
  <data name="PreActionButtonText" xml:space="preserve">
    <value>Pre-Action Button Text</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>Repair</value>
  </data>
  <data name="RunImmediately" xml:space="preserve">
    <value>Run Once Immediately</value>
  </data>
  <data name="RunImmediatelyInfoText" xml:space="preserve">
    <value>This trigger will run the script on all assigned devices automatically after it is published. It will also run immediately after a new device enrolls.</value>
  </data>
  <data name="RunOnEnrollment" xml:space="preserve">
    <value>Run On Enrollment</value>
  </data>
  <data name="RunOnPublish" xml:space="preserve">
    <value>Run On Publish/ Run now</value>
  </data>
  <data name="RunPeriodically" xml:space="preserve">
    <value>Run Periodically</value>
  </data>
  <data name="ScriptCategory" xml:space="preserve">
    <value>Category (Optional)</value>
  </data>
  <data name="ScriptDeleteWarning" xml:space="preserve">
    <value>Are you sure you want to delete this script?</value>
  </data>
  <data name="ScriptDeploymentHeader" xml:space="preserve">
    <value>Select deployment method to define when the script will run</value>
  </data>
  <data name="ScriptDescription" xml:space="preserve">
    <value>Description (Optional)</value>
  </data>
  <data name="ScriptDetailsLoadFailed" xml:space="preserve">
    <value>Script details failed to load.</value>
  </data>
  <data name="ScriptDisplayDescription" xml:space="preserve">
    <value>Display Description (Optional)</value>
  </data>
  <data name="ScriptLanguage" xml:space="preserve">
    <value>Script Language</value>
  </data>
  <data name="ScriptLinkedToWorkflowError" xml:space="preserve">
    <value>Script is part of one or more Workflows. Please remove the script from all workflows to delete the script.</value>
  </data>
  <data name="Scripts" xml:space="preserve">
    <value>Scripts</value>
  </data>
  <data name="ScriptsConfigureDevices" xml:space="preserve">
    <value>Configure devices</value>
  </data>
  <data name="ScriptsConfigureDevicesInfo" xml:space="preserve">
    <value>Use common scripting languages and secure environment variables to configure desktop devices.</value>
  </data>
  <data name="ScriptSearchFailed" xml:space="preserve">
    <value>Script Search Failed </value>
  </data>
  <data name="ScriptsHeader" xml:space="preserve">
    <value>Automated Endpoint Configuration</value>
  </data>
  <data name="ScriptsHelp" xml:space="preserve">
    <value>Controls access to view and manage device scripts</value>
  </data>
  <data name="ScriptsInfo" xml:space="preserve">
    <value>Automate custom configuration tasks on endpoints using common scripting languages. Read more about Scripts in</value>
  </data>
  <data name="ScriptsPurpose" xml:space="preserve">
    <value>What can I do with scripts?</value>
  </data>
  <data name="ScriptsTimeOutInSeconds" xml:space="preserve">
    <value>Timeout in seconds</value>
  </data>
  <data name="ScriptWorkflow" xml:space="preserve">
    <value>Script Workflow</value>
  </data>
  <data name="SearchExistingScript" xml:space="preserve">
    <value>Search for an existing script</value>
  </data>
  <data name="ShowInHubCatalog" xml:space="preserve">
    <value>Show In Hub Catalog</value>
  </data>
  <data name="ShowInHubOptional" xml:space="preserve">
    <value>Show In Hub(Optional)</value>
  </data>
  <data name="UnableRetrieveScriptError" xml:space="preserve">
    <value>Could not retrieve script. The script no longer exists or might have been deleted.</value>
  </data>
  <data name="ViewScripts" xml:space="preserve">
    <value>View Scripts</value>
  </data>
  <data name="ViewScriptsHelp" xml:space="preserve">
    <value>Controls access to view device script details and configuration</value>
  </data>
  <data name="WindowsAdminExecutionContext" xml:space="preserve">
    <value>User Context with Admin Privileges</value>
  </data>
  <data name="WindowsExecutionContextInfo" xml:space="preserve">
    <value>When a script runs in the system context, it is always executed with admin privileges and user interactions will be suppressed. Scripts that need user interaction should be executed in user context with appropriate privileges as needed by the script. Admin privileges will be applied to both standard and admin users on the device.</value>
  </data>
  <data name="WindowsSystemExecutionContext" xml:space="preserve">
    <value>System Context</value>
  </data>
  <data name="WindowsUserExecutionContext" xml:space="preserve">
    <value>User Context without Admin Privileges</value>
  </data>
</root>
