<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEditScripts" xml:space="preserve">
    <value>新增/編輯指令碼</value>
  </data>
  <data name="AddEditScriptsHelp" xml:space="preserve">
    <value>控制新增或編輯裝置指令碼的存取權限</value>
  </data>
  <data name="AppCatalogCustomization" xml:space="preserve">
    <value>應用程式目錄自訂</value>
  </data>
  <data name="CatalogCustomizationNotDefined" xml:space="preserve">
    <value>指令碼目前沒有應用程式目錄自訂詳細資料，無法啟用 [在 Hub 中顯示]</value>
  </data>
  <data name="CatalogIconLimit" xml:space="preserve">
    <value>圖示大小超過 1MB 上限。</value>
  </data>
  <data name="ConfigureComplexSequences" xml:space="preserve">
    <value>設定複雜序列</value>
  </data>
  <data name="ConfigureComplexSequencesInfo" xml:space="preserve">
    <value>使用指令碼作為 Freestyle 中的資源，以設定包含應用程式和設定檔的複雜裝置序列。</value>
  </data>
  <data name="DeleteAssignmentsWarning" xml:space="preserve">
    <value>您確定要刪除此指派嗎?
這麼做將會從所有指派的裝置中移除該指令碼。</value>
  </data>
  <data name="DeleteScripts" xml:space="preserve">
    <value>刪除指令碼</value>
  </data>
  <data name="DeleteScriptsHelp" xml:space="preserve">
    <value>控制刪除裝置指令碼的存取權</value>
  </data>
  <data name="DuplicateServerCertificate" xml:space="preserve">
    <value>上傳的憑證已存在於現有的伺服器憑證中</value>
  </data>
  <data name="EditScript" xml:space="preserve">
    <value>編輯指令碼</value>
  </data>
  <data name="EnableSelfService" xml:space="preserve">
    <value>啟用自助服務</value>
  </data>
  <data name="EnableSelfServiceInfo" xml:space="preserve">
    <value>將指令碼新增至裝置自助服務的 Intelligent Hub 目錄。</value>
  </data>
  <data name="ExecutionContextWindows" xml:space="preserve">
    <value>執行內容與許可權</value>
  </data>
  <data name="ExecutionTime" xml:space="preserve">
    <value>執行時間</value>
  </data>
  <data name="HoursLabel" xml:space="preserve">
    <value>小時</value>
  </data>
  <data name="LastExecutionTime" xml:space="preserve">
    <value>上次執行時間</value>
  </data>
  <data name="NetworkChange" xml:space="preserve">
    <value>網路變更</value>
  </data>
  <data name="PostActionButtonText" xml:space="preserve">
    <value>動作後按鈕文字</value>
  </data>
  <data name="PreActionButtonText" xml:space="preserve">
    <value>動作前按鈕文字</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>修復</value>
  </data>
  <data name="RunImmediately" xml:space="preserve">
    <value>立即執行一次</value>
  </data>
  <data name="RunImmediatelyInfoText" xml:space="preserve">
    <value>此觸發器會在發佈後，自動在所有指派的裝置上執行指令碼，也會在新裝置註冊後立即執行。</value>
  </data>
  <data name="RunOnEnrollment" xml:space="preserve">
    <value>註冊時執行</value>
  </data>
  <data name="RunOnPublish" xml:space="preserve">
    <value>發佈/立即執行時執行</value>
  </data>
  <data name="RunPeriodically" xml:space="preserve">
    <value>定期執行</value>
  </data>
  <data name="ScriptCategory" xml:space="preserve">
    <value>類別 (可選)</value>
  </data>
  <data name="ScriptDeleteWarning" xml:space="preserve">
    <value>確定要刪除此指令碼嗎?</value>
  </data>
  <data name="ScriptDeploymentHeader" xml:space="preserve">
    <value>選取部署方法以定義指令碼的執行時間</value>
  </data>
  <data name="ScriptDescription" xml:space="preserve">
    <value>說明 (可選)</value>
  </data>
  <data name="ScriptDetailsLoadFailed" xml:space="preserve">
    <value>無法載入指令碼詳細資料。</value>
  </data>
  <data name="ScriptDisplayDescription" xml:space="preserve">
    <value>顯示說明 (可選)</value>
  </data>
  <data name="ScriptLanguage" xml:space="preserve">
    <value>指令碼語言</value>
  </data>
  <data name="ScriptLinkedToWorkflowError" xml:space="preserve">
    <value>指令碼是一或多個工作流程的一部分。請從所有工作流程中移除指令碼以刪除指令碼。</value>
  </data>
  <data name="Scripts" xml:space="preserve">
    <value>指令碼</value>
  </data>
  <data name="ScriptsConfigureDevices" xml:space="preserve">
    <value>設定裝置</value>
  </data>
  <data name="ScriptsConfigureDevicesInfo" xml:space="preserve">
    <value>使用一般指令碼語言和安全環境變數來設定桌面裝置。</value>
  </data>
  <data name="ScriptSearchFailed" xml:space="preserve">
    <value>指令碼搜尋失敗</value>
  </data>
  <data name="ScriptsHeader" xml:space="preserve">
    <value>自動化端點組態</value>
  </data>
  <data name="ScriptsHelp" xml:space="preserve">
    <value>控制檢視和管理裝置指令碼的存取權</value>
  </data>
  <data name="ScriptsInfo" xml:space="preserve">
    <value>使用一般指令碼語言，在端點上自動執行自訂組態工作。閱讀以下有關指令碼的詳細資訊：</value>
  </data>
  <data name="ScriptsPurpose" xml:space="preserve">
    <value>我可以對指令碼執行哪些操作?</value>
  </data>
  <data name="ScriptsTimeOutInSeconds" xml:space="preserve">
    <value>逾時期限 (秒)</value>
  </data>
  <data name="ScriptWorkflow" xml:space="preserve">
    <value>指令碼工作流程</value>
  </data>
  <data name="SearchExistingScript" xml:space="preserve">
    <value>搜尋既有的指令碼</value>
  </data>
  <data name="ShowInHubCatalog" xml:space="preserve">
    <value>在 Hub 目錄中顯示</value>
  </data>
  <data name="ShowInHubOptional" xml:space="preserve">
    <value>在 Hub 中顯示 (可選)</value>
  </data>
  <data name="UnableRetrieveScriptError" xml:space="preserve">
    <value>無法擷取指令碼。此指令碼已不存在，或已遭到刪除。</value>
  </data>
  <data name="ViewScripts" xml:space="preserve">
    <value>檢視指令碼</value>
  </data>
  <data name="ViewScriptsHelp" xml:space="preserve">
    <value>控制檢視裝置指令碼詳細資料和組態的存取權</value>
  </data>
  <data name="WindowsAdminExecutionContext" xml:space="preserve">
    <value>具有管理員許可權的使用者內容</value>
  </data>
  <data name="WindowsExecutionContextInfo" xml:space="preserve">
    <value>在系統內容中，指令碼一定會以管理員許可權執行，且優先程度高於使用者互動。需使用者互動的指令碼，應以指令碼需要的適當許可權，在使用者內容中執行。在裝置上，無論是標準使用者或管理員使用者都將一律套用管理員許可權。</value>
  </data>
  <data name="WindowsSystemExecutionContext" xml:space="preserve">
    <value>System Context</value>
  </data>
  <data name="WindowsUserExecutionContext" xml:space="preserve">
    <value>無管理員許可權的使用者內容</value>
  </data>
</root>
