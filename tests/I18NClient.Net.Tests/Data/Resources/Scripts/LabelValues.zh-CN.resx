<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEditScripts" xml:space="preserve">
    <value>添加/编辑脚本</value>
  </data>
  <data name="AddEditScriptsHelp" xml:space="preserve">
    <value>控制对添加或编辑设备脚本的访问权限</value>
  </data>
  <data name="AppCatalogCustomization" xml:space="preserve">
    <value>应用目录自定义</value>
  </data>
  <data name="CatalogCustomizationNotDefined" xml:space="preserve">
    <value>脚本不存在应用目录自定义详细信息，无法在 Hub 中启用显示</value>
  </data>
  <data name="CatalogIconLimit" xml:space="preserve">
    <value>图标超过了最大大小限制 (1MB)。</value>
  </data>
  <data name="ConfigureComplexSequences" xml:space="preserve">
    <value>配置复杂序列</value>
  </data>
  <data name="ConfigureComplexSequencesInfo" xml:space="preserve">
    <value>使用脚本作为 Freestyle 中的资源，以配置包括应用和配置文件的复杂设备序列。</value>
  </data>
  <data name="DeleteAssignmentsWarning" xml:space="preserve">
    <value>是否确定要删除此分配?
这样做将会从所有已分配的设备中移除该脚本。</value>
  </data>
  <data name="DeleteScripts" xml:space="preserve">
    <value>删除脚本</value>
  </data>
  <data name="DeleteScriptsHelp" xml:space="preserve">
    <value>控制对删除设备脚本的访问权限</value>
  </data>
  <data name="DuplicateServerCertificate" xml:space="preserve">
    <value>上载的证书已存在于现有的一组服务器证书中。</value>
  </data>
  <data name="EditScript" xml:space="preserve">
    <value>编辑脚本</value>
  </data>
  <data name="EnableSelfService" xml:space="preserve">
    <value>启用自助服务</value>
  </data>
  <data name="EnableSelfServiceInfo" xml:space="preserve">
    <value>将脚本添加到 Intelligent Hub 目录中，以实现设备自助服务。</value>
  </data>
  <data name="ExecutionContextWindows" xml:space="preserve">
    <value>执行上下文和权限</value>
  </data>
  <data name="ExecutionTime" xml:space="preserve">
    <value>执行时间</value>
  </data>
  <data name="HoursLabel" xml:space="preserve">
    <value>小时</value>
  </data>
  <data name="LastExecutionTime" xml:space="preserve">
    <value>上次执行时间</value>
  </data>
  <data name="NetworkChange" xml:space="preserve">
    <value>网络更改</value>
  </data>
  <data name="PostActionButtonText" xml:space="preserve">
    <value>操作后按钮文本</value>
  </data>
  <data name="PreActionButtonText" xml:space="preserve">
    <value>操作前按钮文本</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>修复</value>
  </data>
  <data name="RunImmediately" xml:space="preserve">
    <value>立即运行一次</value>
  </data>
  <data name="RunImmediatelyInfoText" xml:space="preserve">
    <value>脚本发布后，此触发器将自动在所有已分配的设备上运行脚本。在新设备注册后，也会立即运行。</value>
  </data>
  <data name="RunOnEnrollment" xml:space="preserve">
    <value>注册时运行</value>
  </data>
  <data name="RunOnPublish" xml:space="preserve">
    <value>发布时运行/立即运行</value>
  </data>
  <data name="RunPeriodically" xml:space="preserve">
    <value>定期运行</value>
  </data>
  <data name="ScriptCategory" xml:space="preserve">
    <value>类别(可选)</value>
  </data>
  <data name="ScriptDeleteWarning" xml:space="preserve">
    <value>是否确定要删除此脚本?</value>
  </data>
  <data name="ScriptDeploymentHeader" xml:space="preserve">
    <value>选择部署方法以定义脚本的运行时间</value>
  </data>
  <data name="ScriptDescription" xml:space="preserve">
    <value>说明(可选)</value>
  </data>
  <data name="ScriptDetailsLoadFailed" xml:space="preserve">
    <value>无法加载脚本详细信息。</value>
  </data>
  <data name="ScriptDisplayDescription" xml:space="preserve">
    <value>显示说明 (可选)</value>
  </data>
  <data name="ScriptLanguage" xml:space="preserve">
    <value>脚本语言</value>
  </data>
  <data name="ScriptLinkedToWorkflowError" xml:space="preserve">
    <value>脚本是一个或多个工作流的一部分。请从所有工作流中移除脚本以删除脚本。</value>
  </data>
  <data name="Scripts" xml:space="preserve">
    <value>脚本</value>
  </data>
  <data name="ScriptsConfigureDevices" xml:space="preserve">
    <value>配置设备</value>
  </data>
  <data name="ScriptsConfigureDevicesInfo" xml:space="preserve">
    <value>使用通用脚本语言和安全环境变量来配置桌面设备。</value>
  </data>
  <data name="ScriptSearchFailed" xml:space="preserve">
    <value>脚本搜索失败</value>
  </data>
  <data name="ScriptsHeader" xml:space="preserve">
    <value>自动端点配置</value>
  </data>
  <data name="ScriptsHelp" xml:space="preserve">
    <value>控制对查看和管理设备脚本的访问权限</value>
  </data>
  <data name="ScriptsInfo" xml:space="preserve">
    <value>使用通用脚本语言在端点上自动执行自定义配置任务。有关脚本的详细信息，请参阅</value>
  </data>
  <data name="ScriptsPurpose" xml:space="preserve">
    <value>我可以使用脚本执行哪些操作?</value>
  </data>
  <data name="ScriptsTimeOutInSeconds" xml:space="preserve">
    <value>超时 (秒)</value>
  </data>
  <data name="ScriptWorkflow" xml:space="preserve">
    <value>脚本工作流</value>
  </data>
  <data name="SearchExistingScript" xml:space="preserve">
    <value>搜索现有脚本</value>
  </data>
  <data name="ShowInHubCatalog" xml:space="preserve">
    <value>在 Hub 目录中显示</value>
  </data>
  <data name="ShowInHubOptional" xml:space="preserve">
    <value>在 Hub 中显示 (可选)</value>
  </data>
  <data name="UnableRetrieveScriptError" xml:space="preserve">
    <value>无法检索脚本。脚本不再存在，或者可能已被删除。</value>
  </data>
  <data name="ViewScripts" xml:space="preserve">
    <value>查看脚本</value>
  </data>
  <data name="ViewScriptsHelp" xml:space="preserve">
    <value>控制对查看设备脚本详细信息和配置的访问权限</value>
  </data>
  <data name="WindowsAdminExecutionContext" xml:space="preserve">
    <value>具有管理员特权的用户上下文</value>
  </data>
  <data name="WindowsExecutionContextInfo" xml:space="preserve">
    <value>当脚本在系统上下文中运行时，将始终使用管理员权限执行脚本，并禁止用户交互。需要用户交互的脚本应使用脚本所需的适当权限在用户上下文中执行。管理员权限将应用于设备的标准用户和管理员用户。</value>
  </data>
  <data name="WindowsSystemExecutionContext" xml:space="preserve">
    <value>System Context</value>
  </data>
  <data name="WindowsUserExecutionContext" xml:space="preserve">
    <value>无管理员权限的用户上下文</value>
  </data>
</root>
